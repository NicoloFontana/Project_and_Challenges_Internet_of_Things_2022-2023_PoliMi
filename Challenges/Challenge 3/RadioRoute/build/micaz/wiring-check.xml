<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="22:RadioRouteAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7a950b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7b91808"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7b91808"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7a9b1c8"/></to>
    </wire>
    <wire loc="24:RadioRouteAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0xb7a91a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb78ddac0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb78ddac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb78b5788"/></to>
    </wire>
    <wire loc="25:RadioRouteAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7a59380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb72926a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb72926a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6f25cf8"/></to>
    </wire>
    <wire loc="26:RadioRouteAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7a574b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7245a48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7245a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb78dae30"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:RadioRouteAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a52470"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7292d38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7292d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6f223f0"/></to>
    </wire>
    <wire loc="29:RadioRouteAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0xb7a4c528"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79e1010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb79e1010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79da010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:RadioRouteAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0xb7a90870"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb78e0dc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78e0dc8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79da010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:RadioRouteAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7a41a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb79fbbe0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb733b9f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb735bf10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb736a180"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb737b5f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7431430"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74b54f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb77d3af0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6fb3df0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb75f9128"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7834240"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79d7898"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7a9b560"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7c31ed8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7c31ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7bb74f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7a9bb28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b8cd78"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7b8cd78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b85250"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7a9a010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b87ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb774a040"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b87740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7aadc08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7b85a38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7aad858"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7b85630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79e4f28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7b85630"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7b82a48"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7b82a48"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7b819c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b82e18"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7b87ea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7b7bef8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7b75210"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7b75210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b2a7d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7b7e8f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7b82e18"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7b574b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ad83e8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7b67a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b13790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b13790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7177de0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7b600a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b09410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b09410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713bc08"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7b5b210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b02c88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b02c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71037f8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7b74670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b29ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b29ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721aa88"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7b5dce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b03968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b03968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71063b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7b73a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b25b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b25b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e9938"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7b6b210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b1b6b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b1b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71ad9e8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7b658e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b114f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b114f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7172c08"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7b5fea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b07170"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b07170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7136a88"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7b772f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b2cb80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b2cb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb72227f8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7b708e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b227d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b227d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e47f8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7b690a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b19330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b19330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a89e8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7b63750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b0f170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b0f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb716da88"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7b590a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7aff988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7aff988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70fe6c0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7b55590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ad03b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7b62c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b0a090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b0a090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713e7f8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b2a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721d6c0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7b6e830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b204f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b204f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71df6c0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7b560c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ad68f0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7b6dce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b1c3d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b1c3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71b0538"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7b664b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b12170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b12170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71757f8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7b60a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b09d68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b09d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71396c0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7b5bc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b006b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b006b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7101228"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7b730a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b284f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b284f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7218538"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7b714b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b244f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b244f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e73b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7b6bc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b1a030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b1a030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71ab538"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7b642f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b11e48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b11e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71706c0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7b5e8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b07ac8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b07ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7134538"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7b77ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b2b4f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b2b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7220228"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7b6f2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b21170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b21170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e2228"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7b69a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b19c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b19c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a6538"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7b59a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7afe330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7afe330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb70fb0b0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7b68ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b14dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b14dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7178418"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7b61670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b0a9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b0a9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb713c228"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7b5c750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b02330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b02330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7105d70"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7b54010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ace8a0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7b75c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b29170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b29170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721b0b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7b6d2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b20e48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b20e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71dd0b0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7b5d2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b03010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b03010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7108938"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7b6c750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7b1cd30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7b1cd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71ae010"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7b66ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b12ac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b12ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7173228"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7b5f4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b08790"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b08790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71370b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7b5a670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7aff030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7aff030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7100c08"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7b808e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b2c228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b2c228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7228e18"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7b71ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7b24e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7b24e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e6d70"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7b6a670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7b1a988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7b1a988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a9010"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7b64ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7b107d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7b107d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb716e0b0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7b56ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7ad3dd8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7b62210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7b0b6f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7b0b6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7144de8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7b684b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7b186b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7b186b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71a4010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7b76750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7b2be48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7b2be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb721fc08"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7b6fd68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7b21ac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7b21ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71e1c08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7bb7d30"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7bb59c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7ba5438"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7ba2f18"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb796a2c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79e4f28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79fb898"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb79f8940"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb79e5110"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb79e5110"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7b77ce8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb79f73c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb79e5b18"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb79e5b18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7b772f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb79f7da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb79e45a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb79e45a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7b808e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb79da010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79d4100"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb79d4100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7916338"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79d7898"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79cf7d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb79d00d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb78e4d28"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79cf7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb79372c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb78f0688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb791e5d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb791c8d8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb79cc1c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb79cc1c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb79376f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb78eb6e0"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb79c2da0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb79c2da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7935160"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7935160"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb708fcd0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb79372c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7092d90"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb79376f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7090270"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb708ee90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb797ccb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb797ccb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb79729e0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb708a090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7976010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7976010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb796ed68"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb708a8b8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7976970"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7976970"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb796d798"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb70822e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb79744f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb79744f8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb796a728"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb7919298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb78ed948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb78b5788"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7899010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb78da470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb78b1100"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb78b1100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb72e8100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb78d8510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb78af178"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb78af178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb72e7178"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb78d8868"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78ae190"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb78ae190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb72e6190"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb78c2408"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73e66b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73e66b8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73dd100"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb78bcba8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb78ac948"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb78ac948"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb788c110"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb78dae30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb78b1ac0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb78b1ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb72e8ac0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78c9a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78ad230"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78ad230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7893760"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb78af4e8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb78af4e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb72e74e8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb78ccdb8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb73e3100"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb73e3100"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb73dbaf8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7899010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7303570"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb78ac120"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb72e5238"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb789cd78"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb72e6b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb78a99a0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb7896ee8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb7896ee8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb788c110"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7306f20"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7893760"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb73e7520"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb789b2c8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb788c730"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb788c730"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb7305e48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb78a6638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7893cf0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7893cf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb73e6060"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0xb72e04f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7894b80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72e5a88"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb78963c8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb78963c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb733f490"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb72e4220"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb7896b50"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb7896b50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb733fc18"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb72e1460"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb74e0970"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb72e45b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73e1668"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72e4dd8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73de4b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb72e2390"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb7839ed0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb7839ed0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb7834d08"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb72e1ba0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb7887570"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb7887570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb78832d0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb72e0bb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7303570"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7301098"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb73e6060"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb73dea40"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb7305e48"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb72f62a8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0xb733f490"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0xb73389b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7306f20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7301cb8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb788d860"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb733f0c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb733f0c0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0xb73385e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb73e7520"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb73e1f10"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7894b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7340308"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7340308"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7339718"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb788d0f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb73409d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb73409d0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb7339e58"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb788dc40"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb733e010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0xb733e010"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0xb7337540"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0xb733fc18"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0xb7337160"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7301098"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb788a498"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb788a498"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7886530"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb733eb68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7370390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7370390"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb736da20"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7370b00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7305748"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7305748"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb72f75e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb72f75e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7306478"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7306478"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb73024c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb73024c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb788aaa0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb788aaa0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7886b38"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb733e7b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7306b58"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7306b58"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7302c30"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7302c30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb735c2d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb735c2d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb735b7a0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb735cb28"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb78871b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb78871b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7434298"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7434298"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb74301c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7883ac0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7845f08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7845f08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb78345d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb787ec98"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb7840010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0xb7840010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0xb7833dc0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb787c740"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb74cdc10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb787c740"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7438840"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb7438840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb74317d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb74cdc10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb74b5890"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb7878da0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0xb74ca0f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0xb74ca0f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb74b5d88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0xb78805f8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb74ca808"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0xb74ca808"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0xb74b3570"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb787db60"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7871360"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7876a50"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb737c978"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb737c978"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7378478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0xb786ebc8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb737f608"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb737f608"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75fc100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7876e98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0xb786dda8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0xb786d598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0xb7873cb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0xb7836e60"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0xb7832920"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0xb782f400"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb77d00e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0xb77d00e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb77cda60"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb782ee00"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb76d0c48"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb76d0c48"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b73a98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb782d840"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb76cea50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb76cea50"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7b74670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb782c300"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0xb76cde78"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0xb76cde78"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0xb7b75c08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb78273e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0xb76c3ef0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0xb76c3ef0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb766fb80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb781dbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb751c9a0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb751c9a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7646340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb781ea20"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0xb7519010"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb7519010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb781ee38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0xb7519a18"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb7519a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb781d7c8"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0xb751a8e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb751a8e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb781d2a8"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0xb7519d70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb7519d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb781f768"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0xb7514db8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb7514db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb781fc70"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0xb7513f18"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb7513f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb782a188"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0xb7512368"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb7512368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb782a6a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0xb7517e50"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7517e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb782abc8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb75162b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb75162b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb782b010"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0xb7510a00"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7510a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb7823a08"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0xb75105c8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb75105c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7820158"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0xb7514880"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7514880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7820650"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0xb75166e8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb75166e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7820b58"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb7514010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7514010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0xb781cbd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75065c0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75065c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7646340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0xb781c428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb74f2010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb74f2010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7646340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7825390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb74e0970"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb7830dc8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb74d41e8"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0xb7815538"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0xb7816cb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb77d3af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76d44b8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb76d44b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76d67a0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77cda60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7040450"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb7040450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb703ab48"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0xb7036870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb703c190"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb703c190"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7032ee8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7037630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7722e30"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb7722e30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb771b7f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb702d920"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77bc2f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb77bc2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77aa860"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb702abf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb77ad1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb77b3208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb77a6b58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb77b9010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb77a5888"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb77ad1b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb77a2760"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb77ad1b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb77a0428"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb77ad1b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb779d0b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0xb779cc20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7976010"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb774a428"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77bc2f0"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb7708ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb771dc38"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb771dc38"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7718470"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb770d630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77bc2f0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb76cf660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7b6d2f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb76ce068"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0xb7b5fea8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb76d0270"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7b64ce8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb76cd490"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7b658e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb76c37f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb76c2ad0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb76c5618"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb76b68e0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0xb76c1220"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb77b9010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb76b6ed8"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0xb76a46f8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0xb76a46f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7676840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0xb766c250"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb76d0270"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xb76a8af0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7682e68"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0xb76a55d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb767b408"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0xb76a3010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb7674a08"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xb76a6418"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb767f010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0xb76a5e58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb76785e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xb76a8270"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb76a1cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xb76a6c98"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb767d228"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb768e510"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0xb76a0b50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7681630"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0xb769f010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb767f7c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0xb769f488"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb767d9e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0xb769f900"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb767bbc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0xb769fd78"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7678da0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0xb769e2b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7675010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0xb769e728"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb7673270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0xb769eba0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0xb766bac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb751ac38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb75136a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb7513ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb750dcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb750eb20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb75196c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb750e2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb7511468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb751a070"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb76429b0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb75184e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb7518840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb7518c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb750e6e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7516b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb750d880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb750d010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb75118a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb7510e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb75127a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb750c190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb751a588"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb7517a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb7514448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7513270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7517010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb75176c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb7518190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7510190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb750d448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb7511cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7519368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb7511030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb7512bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7517368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb750ca68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0xb7645340"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb763fc28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0xb7645d88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb763e6a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0xb7644600"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb763ee48"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7646340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb763f1f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb763d630"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0xb763b308"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75fee40"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb75fee40"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75fc100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb763da70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7600ea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7600ea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75368e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb763ca88"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb75fd5a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb75fd5a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb75ebd50"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb7637dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb75fd8d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb75fd8d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb75e6648"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb763bab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0xb7633818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb75fc100"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75f9758"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb75e6648"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb75e0d10"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb75ebd50"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb75e0370"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7600b70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb75eb9d0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb75eb9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb75e0010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0xb75330d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75e6d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb7533800"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b73a98"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb75e6010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb75e06f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb75e6d98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb75df488"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb75dd158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb756e170"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb756e170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6faf180"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb75cb7b8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb756ecb8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb756ecb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6fafcc8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb75ce4d0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb75a23d0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb75a23d0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb759e7e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb75cbc38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7ba2148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb75b9860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb7598ea0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7ba2148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb7597658"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7b73a98"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb7599050"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7b714b0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb7599a38"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7b71ea8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb75984a0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7b708e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb756e8b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb6faf8c0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6fae218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb7538208"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6fae640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb6fb1170"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb6faec38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb74ff5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb7505920"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7501af8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74fe448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb74fe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb74f8b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74f9a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb7504368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74f9190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb7500448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7500cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb74fb2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb74fecb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb7506c78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb7502190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb75024e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb75028c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74f95c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb7504a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7500880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb7500010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb75055c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb74f86e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74f9e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb74fb6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb74facb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb74fc5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb74f6010"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb7505270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb75016c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb74ff190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb74fc190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb74ffb00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb7505c78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb74fe010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7502c18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb7501368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb74fa880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb74fa448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb7504d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb74fa010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb74f82b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb74fbb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb7504010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb74fce38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb75046c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb74fca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7501010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb74f68e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb74ece38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb74f1368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb74ed4b8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74ebcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb74ea190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb74e4448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74e52b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb74f1d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74e6a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb74edd28"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb74ec5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb74e9b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb74ea5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb74f26c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb74f0b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb74f0ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb74ef308"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74e6e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb74f04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb74ec190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb74ed8f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb74f1010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb74e4010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74e56e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb74e8010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb74e65c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb74eae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb74e4880"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb74f2be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb74ed080"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb74eca00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb74eaa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb74eb468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb74f16c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb74eb8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb74ef660"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb74efd10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb74e6190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb74e8cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb74f0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb74e8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb74e5b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb74e8448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb74f1a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb74e96e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb74f0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb74e92b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb74ef9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb74e3190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0xb74c98e0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0xb74b3e68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0xb74c9d48"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0xb74b2300"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0xb74b28c8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0xb77d00e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0xb74a6eb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0xb76d0270"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb74ac9a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb76d0c48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0xb74ab3d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0xb76cd490"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0xb74a6840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0xb76c37f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb74abe10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb744d950"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb744d950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7646340"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb74a7588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb744c030"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb744c030"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb74a5d28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb744c548"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb744c548"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb74a4168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0xb744b368"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb744b368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb74a4598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0xb744b6c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb744b6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb74a49c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0xb744a4e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb744a4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb74a5840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0xb7446010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb7446010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb74a7b48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0xb743ea68"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb743ea68"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74a5338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74402b0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74402b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb74a4e08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0xb74472b0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb74472b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb74a3850"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb7445270"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7445270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74a3d70"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb74456a8"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb74456a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb74a3410"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0xb7448368"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb7448368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb74a2ca8"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0xb743f880"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb743f880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb74a2300"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb7440b20"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7440b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74a27c8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb743f010"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb743f010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb749da60"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb7438ce0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0xb7438ce0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0xb7431c70"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb74b02f8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74b0b38"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74af2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73e66b8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb74a6170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb73e2888"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb73e2888"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb73d8308"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb749f010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb7446880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb744cbf8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb7448e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb7445ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb743fcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb74476e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb7442468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb7445f18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb744a840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb744ac18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74406e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb744bd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb7447b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb744c8a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb74428a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb7441e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb74447a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb743e190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb7448a18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb7446448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb7444368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb7446db8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb744b010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7448010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb74486c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7441a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb74415c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb744a190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7441190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb743f448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb7442cd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb7442030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb744ba18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb7444bd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0xb7434730"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0xb7430658"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7425838"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0xb7430a30"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0xb76d0c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0xb742f4c0"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0xb76cf660"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0xb742fed0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0xb76ce068"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0xb742e978"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0xb76c5618"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb742d0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb73e8ed0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb73e8ed0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7646340"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb742d820"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0xb73945c8"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0xb73945c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb742c440"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0xb73a05b8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0xb73a05b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb742c010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0xb73a0c68"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0xb73a0c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb742c878"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb742b108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb742a980"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73e66b8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0xb742b680"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0xb7839ed0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb7427580"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0xb739b5c8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0xb739b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb7427aa0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0xb739ba00"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0xb739ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb7427140"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0xb739e3d8"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0xb739e3d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb74269b8"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0xb7394190"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0xb7394190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7426010"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0xb7395010"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0xb7395010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb74264d8"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0xb7395448"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0xb7395448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7426eb8"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7396b20"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7396b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb74253d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0xb73a2ab8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0xb73a2ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0xb741eb88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb73a8010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7722e30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0xb73d71e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb73a95d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb73d7c38"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb79d00d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb73a6378"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb79da010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0xb739cbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0xb73a1190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0xb739d270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0xb739be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0xb73a1b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73966e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0xb739dae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0xb739c368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0xb7398880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0xb739a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0xb73a25a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0xb73a0910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0xb739e080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0xb73a0260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0xb739df18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0xb739d6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0xb73a2e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0xb7395cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0xb7398cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0xb73962b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0xb739ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0xb739ede0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0xb739c7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0xb739a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0xb739b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0xb73a14e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0xb739ea88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0xb7397e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0xb7397a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73975c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0xb7395880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0xb7645d88"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0xb7397190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0xb73a1840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0xb7398448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0xb73a1ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0xb7398010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0xb7644600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0xb739e730"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0xb7394ea0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0xb7645340"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb737c0b8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb737bb18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7380e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb737b5f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb736a570"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7370b00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb736ac40"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb736cab8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb736cab8"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75fc100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7369430"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb737c978"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73698d0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0xb735c700"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0xb735bbc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7358358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb735cb28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7358718"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7337cb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb733eb68"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb73364c0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb733e7b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0xb7336858"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7335108"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb73356c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb733bd28"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0xb731b250"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0xb7303be0"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb72fad20"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0xb72fad20"/></from>
      <to><interface-ref name="State" scoped="" ref="0xb75fc100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb72f6a60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7893760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6f25cf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6f1b670"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6f223f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78d8868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb72483f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6f22a88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f22a88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb7247010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb6f216b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6f216b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78c9a90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6f1bd38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb727e688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6f1a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb727e688"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7279538"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7279ca8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb78da470"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb72513f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7250010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78d8868"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb72506e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb7250b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7245d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb78d8868"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb72444d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioRouteC" loc="21:RadioRouteC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioRouteAppC.timer0" loc="44(RadioRouteAppC.timer0):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb79c4900"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioRouteAppC.timer1" loc="44(RadioRouteAppC.timer1):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0xb7bbbea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioRouteAppC.AMSenderC" loc="47(RadioRouteAppC.AMSenderC):/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioRouteAppC.AMSenderC.SenderC" loc="47(RadioRouteAppC.AMSenderC.SenderC):/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioRouteAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RadioRouteAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioRouteAppC.AMReceiverC" loc="43(RadioRouteAppC.AMReceiverC):/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b53dc8" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b50010" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b50228" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7b48238" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7b48460" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7b48688" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7b48878" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7af93d0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7af95f8" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7af9820" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7af9a10" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb79c4900" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb79c4900"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb79c4ac0" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb79bbc00" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb79bbc00"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb79bbdc0" loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7931138" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7931138"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7918600" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7918600"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb79187e0" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb78ecce0" loc="46:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb78ecce0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb774b7c8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb774b7c8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb774b9e8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb773e538" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb773e538"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb773e980" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb773e980"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb773eb40" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb7719a68" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb7719a68"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb7719eb0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7719eb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb771cdd8" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb771cdd8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb7707258" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb7707258"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb77074c0" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb77074c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb7707930" loc="58:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb7707930"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb7707b98" loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb7706038" loc="60:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb7706038"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb7720bb8" loc="52:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb7720bb8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb76f4038" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb76f4038"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb76f42a0" loc="54:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb76f42a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb76f4710" loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb76f4710"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb76f4978" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0xb76a2c20" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0xb76a2e48" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0xb768d088" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb768d278" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-main-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb7570b48" loc="83:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb756b940" loc="42:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb78dbde0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb728f8f0" loc="47:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb728a3a8" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb727bb90" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb7246340" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7b8c480" loc="58:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7b8c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b8c658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7b91808" loc="57:/opt/tinyos-main-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b91808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7b919e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b87ea0" loc="52:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b87ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b8a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b8cd78" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b8cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b8b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7b87740" loc="50:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7b87740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7b87918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7b879f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7b87ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7b87bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7b87c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7b85630" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7b85630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b85808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b85250" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b85250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b85428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7b85a38" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7b85a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b85c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b82e18" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b82e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7b82a48" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7b82a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b82c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7b7e8f8" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7b7e8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b7ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7b7bef8" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7b7bef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b7e0e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b7e1c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b7e2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b7e380"/>
        <function-ref name="get" scoped="" ref="0xb7b7e460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b7e540"/>
        <function-ref name="set" scoped="" ref="0xb7b7e620"/>
        <function-ref name="clr" scoped="" ref="0xb7b7e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7b819c8" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7b819c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b81ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7b574b0" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7b574b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b57888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b57968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b57a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b57b28"/>
        <function-ref name="get" scoped="" ref="0xb7b57c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b57ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b57dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b57ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7b67a28" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7b67a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b67c00"/>
        <function-ref name="isInput" scoped="" ref="0xb7b67ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b67dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b67ea0"/>
        <function-ref name="get" scoped="" ref="0xb7b66010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b660f0"/>
        <function-ref name="set" scoped="" ref="0xb7b661d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7b600a0" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7b600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b60278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b60358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b60438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b60518"/>
        <function-ref name="get" scoped="" ref="0xb7b605f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b606d8"/>
        <function-ref name="set" scoped="" ref="0xb7b607b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b60898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7b5b210" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7b5b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5b3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5b4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5b688"/>
        <function-ref name="get" scoped="" ref="0xb7b5b768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5b848"/>
        <function-ref name="set" scoped="" ref="0xb7b5b928"/>
        <function-ref name="clr" scoped="" ref="0xb7b5ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7b74670" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7b74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b74848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b74928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b74a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b74ae8"/>
        <function-ref name="get" scoped="" ref="0xb7b74bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b74ca8"/>
        <function-ref name="set" scoped="" ref="0xb7b74d88"/>
        <function-ref name="clr" scoped="" ref="0xb7b74e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7b5dce8" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7b5dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5dec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5c010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5c1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b5c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5c390"/>
        <function-ref name="set" scoped="" ref="0xb7b5c470"/>
        <function-ref name="clr" scoped="" ref="0xb7b5c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7b73a98" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7b73a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b73c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b73d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b73e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b73f10"/>
        <function-ref name="get" scoped="" ref="0xb7b71010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b710f0"/>
        <function-ref name="set" scoped="" ref="0xb7b711d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7b6b210" loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7b6b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6b3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6b4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6b688"/>
        <function-ref name="get" scoped="" ref="0xb7b6b768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6b848"/>
        <function-ref name="set" scoped="" ref="0xb7b6b928"/>
        <function-ref name="clr" scoped="" ref="0xb7b6ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7b658e0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7b658e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b65ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b65b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b65c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b65d58"/>
        <function-ref name="get" scoped="" ref="0xb7b65e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b65f18"/>
        <function-ref name="set" scoped="" ref="0xb7b64010"/>
        <function-ref name="clr" scoped="" ref="0xb7b640f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7b5fea8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7b5fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5e0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5e1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5e280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5e360"/>
        <function-ref name="get" scoped="" ref="0xb7b5e440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5e520"/>
        <function-ref name="set" scoped="" ref="0xb7b5e600"/>
        <function-ref name="clr" scoped="" ref="0xb7b5e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7b772f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7b772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b774c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b775a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b77688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b77768"/>
        <function-ref name="get" scoped="" ref="0xb7b77848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b77928"/>
        <function-ref name="set" scoped="" ref="0xb7b77a08"/>
        <function-ref name="clr" scoped="" ref="0xb7b77ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7b708e0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7b708e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b70ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b70b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b70c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b70d58"/>
        <function-ref name="get" scoped="" ref="0xb7b70e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b70f18"/>
        <function-ref name="set" scoped="" ref="0xb7b6f010"/>
        <function-ref name="clr" scoped="" ref="0xb7b6f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7b690a0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7b690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b69278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b69358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b69438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b69518"/>
        <function-ref name="get" scoped="" ref="0xb7b695f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b696d8"/>
        <function-ref name="set" scoped="" ref="0xb7b697b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b69898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7b63750" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7b63750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b63928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b63a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b63ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b63bc8"/>
        <function-ref name="get" scoped="" ref="0xb7b63ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b63d88"/>
        <function-ref name="set" scoped="" ref="0xb7b63e68"/>
        <function-ref name="clr" scoped="" ref="0xb7b62010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7b590a0" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7b590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b59278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b59358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b59438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b59518"/>
        <function-ref name="get" scoped="" ref="0xb7b595f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b596d8"/>
        <function-ref name="set" scoped="" ref="0xb7b597b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b59898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7b55590" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7b55590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b55768"/>
        <function-ref name="isInput" scoped="" ref="0xb7b55848"/>
        <function-ref name="toggle" scoped="" ref="0xb7b55928"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b55a08"/>
        <function-ref name="get" scoped="" ref="0xb7b55ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b55bc8"/>
        <function-ref name="set" scoped="" ref="0xb7b55ca8"/>
        <function-ref name="clr" scoped="" ref="0xb7b55d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7b62c08" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7b62c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b62de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b62ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b61010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b610f0"/>
        <function-ref name="get" scoped="" ref="0xb7b611d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b612b0"/>
        <function-ref name="set" scoped="" ref="0xb7b61390"/>
        <function-ref name="clr" scoped="" ref="0xb7b61470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7b75210" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7b75210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b753e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b754c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b755a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b75688"/>
        <function-ref name="get" scoped="" ref="0xb7b75768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b75848"/>
        <function-ref name="set" scoped="" ref="0xb7b75928"/>
        <function-ref name="clr" scoped="" ref="0xb7b75a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7b6e830" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7b6e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6ea08"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6eae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6ebc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6eca8"/>
        <function-ref name="get" scoped="" ref="0xb7b6ed88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6ee68"/>
        <function-ref name="set" scoped="" ref="0xb7b6d010"/>
        <function-ref name="clr" scoped="" ref="0xb7b6d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7b560c0" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7b560c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b56298"/>
        <function-ref name="isInput" scoped="" ref="0xb7b56378"/>
        <function-ref name="toggle" scoped="" ref="0xb7b56458"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b56538"/>
        <function-ref name="get" scoped="" ref="0xb7b56618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b566f8"/>
        <function-ref name="set" scoped="" ref="0xb7b567d8"/>
        <function-ref name="clr" scoped="" ref="0xb7b568b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7b6dce8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7b6dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6dec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6c010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6c1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b6c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6c390"/>
        <function-ref name="set" scoped="" ref="0xb7b6c470"/>
        <function-ref name="clr" scoped="" ref="0xb7b6c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7b664b0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7b664b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b66688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b66768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b66848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b66928"/>
        <function-ref name="get" scoped="" ref="0xb7b66a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b66ae8"/>
        <function-ref name="set" scoped="" ref="0xb7b66bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b66ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7b60a98" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7b60a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b60c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b60d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b60e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b60f10"/>
        <function-ref name="get" scoped="" ref="0xb7b5f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5f0f0"/>
        <function-ref name="set" scoped="" ref="0xb7b5f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7b5bc08" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7b5bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5bde0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5bec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5a0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b5a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5a2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b5a390"/>
        <function-ref name="clr" scoped="" ref="0xb7b5a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7b730a0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7b730a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b73278"/>
        <function-ref name="isInput" scoped="" ref="0xb7b73358"/>
        <function-ref name="toggle" scoped="" ref="0xb7b73438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b73518"/>
        <function-ref name="get" scoped="" ref="0xb7b735f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b736d8"/>
        <function-ref name="set" scoped="" ref="0xb7b737b8"/>
        <function-ref name="clr" scoped="" ref="0xb7b73898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7b714b0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7b714b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b71688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b71768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b71848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b71928"/>
        <function-ref name="get" scoped="" ref="0xb7b71a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b71ae8"/>
        <function-ref name="set" scoped="" ref="0xb7b71bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b71ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7b6bc08" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7b6bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6bde0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6bec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6a0f0"/>
        <function-ref name="get" scoped="" ref="0xb7b6a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6a2b0"/>
        <function-ref name="set" scoped="" ref="0xb7b6a390"/>
        <function-ref name="clr" scoped="" ref="0xb7b6a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7b642f0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7b642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b644c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b645a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b64688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b64768"/>
        <function-ref name="get" scoped="" ref="0xb7b64848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b64928"/>
        <function-ref name="set" scoped="" ref="0xb7b64a08"/>
        <function-ref name="clr" scoped="" ref="0xb7b64ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7b5e8e0" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7b5e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5eab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5eb98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5ec78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5ed58"/>
        <function-ref name="get" scoped="" ref="0xb7b5ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5ef18"/>
        <function-ref name="set" scoped="" ref="0xb7b5d010"/>
        <function-ref name="clr" scoped="" ref="0xb7b5d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7b77ce8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7b77ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b77ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b76010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b760f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b761d0"/>
        <function-ref name="get" scoped="" ref="0xb7b762b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b76390"/>
        <function-ref name="set" scoped="" ref="0xb7b76470"/>
        <function-ref name="clr" scoped="" ref="0xb7b76550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7b6f2f0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7b6f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6f548"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6f628"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6f708"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6f7e8"/>
        <function-ref name="get" scoped="" ref="0xb7b6f8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6f9a8"/>
        <function-ref name="set" scoped="" ref="0xb7b6fa88"/>
        <function-ref name="clr" scoped="" ref="0xb7b6fb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7b69a98" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7b69a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b69c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b69d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b69e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b69f10"/>
        <function-ref name="get" scoped="" ref="0xb7b68010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b680f0"/>
        <function-ref name="set" scoped="" ref="0xb7b681d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7b59a98" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7b59a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b59c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7b59d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7b59e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b59f10"/>
        <function-ref name="get" scoped="" ref="0xb7b57010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b570f0"/>
        <function-ref name="set" scoped="" ref="0xb7b571d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7b68ea8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7b68ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b67208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b672e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b673c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b674a8"/>
        <function-ref name="get" scoped="" ref="0xb7b67588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b67668"/>
        <function-ref name="set" scoped="" ref="0xb7b67748"/>
        <function-ref name="clr" scoped="" ref="0xb7b67828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7b61670" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7b61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b61848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b61928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b61a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b61ae8"/>
        <function-ref name="get" scoped="" ref="0xb7b61bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b61ca8"/>
        <function-ref name="set" scoped="" ref="0xb7b61d88"/>
        <function-ref name="clr" scoped="" ref="0xb7b61e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7b5c750" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7b5c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5c928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5ca08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5cae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5cbc8"/>
        <function-ref name="get" scoped="" ref="0xb7b5cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5cd88"/>
        <function-ref name="set" scoped="" ref="0xb7b5ce68"/>
        <function-ref name="clr" scoped="" ref="0xb7b5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7b54010" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7b54010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b541e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b542c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b543a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b54488"/>
        <function-ref name="get" scoped="" ref="0xb7b54568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b54648"/>
        <function-ref name="set" scoped="" ref="0xb7b54728"/>
        <function-ref name="clr" scoped="" ref="0xb7b54808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7b75c08" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7b75c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b75de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b75ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b74010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b740f0"/>
        <function-ref name="get" scoped="" ref="0xb7b741d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b742b0"/>
        <function-ref name="set" scoped="" ref="0xb7b74390"/>
        <function-ref name="clr" scoped="" ref="0xb7b74470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7b6d2f0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7b6d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6d4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6d5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6d688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6d768"/>
        <function-ref name="get" scoped="" ref="0xb7b6d848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6d928"/>
        <function-ref name="set" scoped="" ref="0xb7b6da08"/>
        <function-ref name="clr" scoped="" ref="0xb7b6dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7b5d2f0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7b5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5d4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5d5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5d688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5d768"/>
        <function-ref name="get" scoped="" ref="0xb7b5d848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5d928"/>
        <function-ref name="set" scoped="" ref="0xb7b5da08"/>
        <function-ref name="clr" scoped="" ref="0xb7b5dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7b6c750" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7b6c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6c928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6ca08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6cae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6cbc8"/>
        <function-ref name="get" scoped="" ref="0xb7b6cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6cd88"/>
        <function-ref name="set" scoped="" ref="0xb7b6ce68"/>
        <function-ref name="clr" scoped="" ref="0xb7b6b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7b66ea8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7b66ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b650c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b651a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b65280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b65360"/>
        <function-ref name="get" scoped="" ref="0xb7b65440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b65520"/>
        <function-ref name="set" scoped="" ref="0xb7b65600"/>
        <function-ref name="clr" scoped="" ref="0xb7b656e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7b5f4b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7b5f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5f688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5f768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5f848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5f928"/>
        <function-ref name="get" scoped="" ref="0xb7b5fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5fae8"/>
        <function-ref name="set" scoped="" ref="0xb7b5fbc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b5fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7b5a670" loc="96:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7b5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b5a848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b5a928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b5aa08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b5aae8"/>
        <function-ref name="get" scoped="" ref="0xb7b5abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b5aca8"/>
        <function-ref name="set" scoped="" ref="0xb7b5ad88"/>
        <function-ref name="clr" scoped="" ref="0xb7b5ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7b808e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7b808e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b80ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b80b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7b80c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b80d58"/>
        <function-ref name="get" scoped="" ref="0xb7b80e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b80f18"/>
        <function-ref name="set" scoped="" ref="0xb7b77010"/>
        <function-ref name="clr" scoped="" ref="0xb7b770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7b71ea8" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7b71ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b700c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b701a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b70280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b70360"/>
        <function-ref name="get" scoped="" ref="0xb7b70440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b70520"/>
        <function-ref name="set" scoped="" ref="0xb7b70600"/>
        <function-ref name="clr" scoped="" ref="0xb7b706e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7b6a670" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7b6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6a848"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6a928"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6aa08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6aae8"/>
        <function-ref name="get" scoped="" ref="0xb7b6abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6aca8"/>
        <function-ref name="set" scoped="" ref="0xb7b6ad88"/>
        <function-ref name="clr" scoped="" ref="0xb7b6ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7b64ce8" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7b64ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b64ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b63010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b630f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b631d0"/>
        <function-ref name="get" scoped="" ref="0xb7b632b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b63390"/>
        <function-ref name="set" scoped="" ref="0xb7b63470"/>
        <function-ref name="clr" scoped="" ref="0xb7b63550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7b56ab8" loc="102:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7b56ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b56c90"/>
        <function-ref name="isInput" scoped="" ref="0xb7b56d70"/>
        <function-ref name="toggle" scoped="" ref="0xb7b56e50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b55010"/>
        <function-ref name="get" scoped="" ref="0xb7b550f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b551d0"/>
        <function-ref name="set" scoped="" ref="0xb7b552b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b55390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7b62210" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7b62210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b623e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b624c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b625a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b62688"/>
        <function-ref name="get" scoped="" ref="0xb7b62768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b62848"/>
        <function-ref name="set" scoped="" ref="0xb7b62928"/>
        <function-ref name="clr" scoped="" ref="0xb7b62a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7b684b0" loc="71:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7b684b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b68688"/>
        <function-ref name="isInput" scoped="" ref="0xb7b68768"/>
        <function-ref name="toggle" scoped="" ref="0xb7b68848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b68928"/>
        <function-ref name="get" scoped="" ref="0xb7b68a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b68ae8"/>
        <function-ref name="set" scoped="" ref="0xb7b68bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b68ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7b76750" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7b76750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b76928"/>
        <function-ref name="isInput" scoped="" ref="0xb7b76a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7b76ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b76bc8"/>
        <function-ref name="get" scoped="" ref="0xb7b76ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b76d88"/>
        <function-ref name="set" scoped="" ref="0xb7b76e68"/>
        <function-ref name="clr" scoped="" ref="0xb7b75010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7b6fd68" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7b6fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b6e010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b6e0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b6e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b6e2b0"/>
        <function-ref name="get" scoped="" ref="0xb7b6e390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b6e470"/>
        <function-ref name="set" scoped="" ref="0xb7b6e550"/>
        <function-ref name="clr" scoped="" ref="0xb7b6e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b2b4f0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b2b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2b6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2b7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2b888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2b968"/>
        <function-ref name="get" scoped="" ref="0xb7b2ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2bb28"/>
        <function-ref name="set" scoped="" ref="0xb7b2bc08"/>
        <function-ref name="clr" scoped="" ref="0xb7b2bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b29170" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b29170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b29348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b29428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b29508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b295e8"/>
        <function-ref name="get" scoped="" ref="0xb7b296c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b297a8"/>
        <function-ref name="set" scoped="" ref="0xb7b29888"/>
        <function-ref name="clr" scoped="" ref="0xb7b29968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b2c228" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b2c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2c400"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2c4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2c6a0"/>
        <function-ref name="get" scoped="" ref="0xb7b2c780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2c860"/>
        <function-ref name="set" scoped="" ref="0xb7b2c940"/>
        <function-ref name="clr" scoped="" ref="0xb7b2ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b2be48" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b2be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2a050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2a130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2a210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2a2f0"/>
        <function-ref name="get" scoped="" ref="0xb7b2a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2a4b0"/>
        <function-ref name="set" scoped="" ref="0xb7b2a590"/>
        <function-ref name="clr" scoped="" ref="0xb7b2a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b29ac8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b29ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b29ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b29d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b29e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b28010"/>
        <function-ref name="get" scoped="" ref="0xb7b280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b281d0"/>
        <function-ref name="set" scoped="" ref="0xb7b282b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b28390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b2cb80" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b2cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2cd58"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2ce38"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2cf18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2b010"/>
        <function-ref name="get" scoped="" ref="0xb7b2b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2b1d0"/>
        <function-ref name="set" scoped="" ref="0xb7b2b2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b2b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b2a7d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b2a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b2a9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b2aa88"/>
        <function-ref name="toggle" scoped="" ref="0xb7b2ab68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b2ac48"/>
        <function-ref name="get" scoped="" ref="0xb7b2ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b2ae08"/>
        <function-ref name="set" scoped="" ref="0xb7b2aee8"/>
        <function-ref name="clr" scoped="" ref="0xb7b29010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b284f0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b284f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b286c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b287a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b28888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b28968"/>
        <function-ref name="get" scoped="" ref="0xb7b28a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b28b28"/>
        <function-ref name="set" scoped="" ref="0xb7b28c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b28ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7228e18" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7228e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7223010"/>
        <function-ref name="isInput" scoped="" ref="0xb72230f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72231d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72232b0"/>
        <function-ref name="get" scoped="" ref="0xb7223390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7223470"/>
        <function-ref name="set" scoped="" ref="0xb7223550"/>
        <function-ref name="clr" scoped="" ref="0xb7223630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb72227f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb72227f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72229d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7222ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7222b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7222c70"/>
        <function-ref name="get" scoped="" ref="0xb7222d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7222e30"/>
        <function-ref name="set" scoped="" ref="0xb7222f10"/>
        <function-ref name="clr" scoped="" ref="0xb7221010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7220228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7220228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7220400"/>
        <function-ref name="isInput" scoped="" ref="0xb72204e0"/>
        <function-ref name="toggle" scoped="" ref="0xb72205c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72206a0"/>
        <function-ref name="get" scoped="" ref="0xb7220780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7220860"/>
        <function-ref name="set" scoped="" ref="0xb7220940"/>
        <function-ref name="clr" scoped="" ref="0xb7220a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721fc08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721fde0"/>
        <function-ref name="isInput" scoped="" ref="0xb721fec0"/>
        <function-ref name="toggle" scoped="" ref="0xb721e010"/>
        <function-ref name="isOutput" scoped="" ref="0xb721e0f0"/>
        <function-ref name="get" scoped="" ref="0xb721e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721e2b0"/>
        <function-ref name="set" scoped="" ref="0xb721e390"/>
        <function-ref name="clr" scoped="" ref="0xb721e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721d6c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721d898"/>
        <function-ref name="isInput" scoped="" ref="0xb721d978"/>
        <function-ref name="toggle" scoped="" ref="0xb721da58"/>
        <function-ref name="isOutput" scoped="" ref="0xb721db38"/>
        <function-ref name="get" scoped="" ref="0xb721dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721dcf8"/>
        <function-ref name="set" scoped="" ref="0xb721ddd8"/>
        <function-ref name="clr" scoped="" ref="0xb721deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721b0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721b288"/>
        <function-ref name="isInput" scoped="" ref="0xb721b368"/>
        <function-ref name="toggle" scoped="" ref="0xb721b448"/>
        <function-ref name="isOutput" scoped="" ref="0xb721b528"/>
        <function-ref name="get" scoped="" ref="0xb721b608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721b6e8"/>
        <function-ref name="set" scoped="" ref="0xb721b7c8"/>
        <function-ref name="clr" scoped="" ref="0xb721b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb721aa88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb721aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721ac60"/>
        <function-ref name="isInput" scoped="" ref="0xb721ad40"/>
        <function-ref name="toggle" scoped="" ref="0xb721ae20"/>
        <function-ref name="isOutput" scoped="" ref="0xb721af00"/>
        <function-ref name="get" scoped="" ref="0xb7219010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72190f0"/>
        <function-ref name="set" scoped="" ref="0xb72191d0"/>
        <function-ref name="clr" scoped="" ref="0xb72192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7218538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7218538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7218710"/>
        <function-ref name="isInput" scoped="" ref="0xb72187f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72188d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72189b0"/>
        <function-ref name="get" scoped="" ref="0xb7218a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7218b70"/>
        <function-ref name="set" scoped="" ref="0xb7218c50"/>
        <function-ref name="clr" scoped="" ref="0xb7218d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b24e48" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b24e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b22050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b22130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b22210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b222f0"/>
        <function-ref name="get" scoped="" ref="0xb7b223d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b224b0"/>
        <function-ref name="set" scoped="" ref="0xb7b22590"/>
        <function-ref name="clr" scoped="" ref="0xb7b22670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b21ac8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b21ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b21ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b21d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b21e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b20010"/>
        <function-ref name="get" scoped="" ref="0xb7b200f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b201d0"/>
        <function-ref name="set" scoped="" ref="0xb7b202b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b20390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b25b00" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b25b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b25cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b25db8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b25e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b24010"/>
        <function-ref name="get" scoped="" ref="0xb7b240f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b241d0"/>
        <function-ref name="set" scoped="" ref="0xb7b242b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b24390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b227d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b227d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b229a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b22a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7b22b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b22c48"/>
        <function-ref name="get" scoped="" ref="0xb7b22d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b22e08"/>
        <function-ref name="set" scoped="" ref="0xb7b22ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7b21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b204f0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b204f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b206c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b207a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b20888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b20968"/>
        <function-ref name="get" scoped="" ref="0xb7b20a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b20b28"/>
        <function-ref name="set" scoped="" ref="0xb7b20c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b20ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b244f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b244f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b246c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b247a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b24888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b24968"/>
        <function-ref name="get" scoped="" ref="0xb7b24a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b24b28"/>
        <function-ref name="set" scoped="" ref="0xb7b24c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b24ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b21170" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b21170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b21348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b21428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b21508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b215e8"/>
        <function-ref name="get" scoped="" ref="0xb7b216c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b217a8"/>
        <function-ref name="set" scoped="" ref="0xb7b21888"/>
        <function-ref name="clr" scoped="" ref="0xb7b21968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b20e48" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b20e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1f050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1f130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1f210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1f2f0"/>
        <function-ref name="get" scoped="" ref="0xb7b1f3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b1f4b0"/>
        <function-ref name="set" scoped="" ref="0xb7b1f590"/>
        <function-ref name="clr" scoped="" ref="0xb7b1f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e9938" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e9b10"/>
        <function-ref name="isInput" scoped="" ref="0xb71e9bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e9cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e9db0"/>
        <function-ref name="get" scoped="" ref="0xb71e9e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e8010"/>
        <function-ref name="set" scoped="" ref="0xb71e80f0"/>
        <function-ref name="clr" scoped="" ref="0xb71e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e73b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e7588"/>
        <function-ref name="isInput" scoped="" ref="0xb71e7668"/>
        <function-ref name="toggle" scoped="" ref="0xb71e7748"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e7828"/>
        <function-ref name="get" scoped="" ref="0xb71e7908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e79e8"/>
        <function-ref name="set" scoped="" ref="0xb71e7ac8"/>
        <function-ref name="clr" scoped="" ref="0xb71e7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e6d70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e5010"/>
        <function-ref name="isInput" scoped="" ref="0xb71e50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e52b0"/>
        <function-ref name="get" scoped="" ref="0xb71e5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e5470"/>
        <function-ref name="set" scoped="" ref="0xb71e5550"/>
        <function-ref name="clr" scoped="" ref="0xb71e5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e47f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e49d0"/>
        <function-ref name="isInput" scoped="" ref="0xb71e4ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e4b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e4c70"/>
        <function-ref name="get" scoped="" ref="0xb71e4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e4e30"/>
        <function-ref name="set" scoped="" ref="0xb71e4f10"/>
        <function-ref name="clr" scoped="" ref="0xb71e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e2228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e2400"/>
        <function-ref name="isInput" scoped="" ref="0xb71e24e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e25c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e26a0"/>
        <function-ref name="get" scoped="" ref="0xb71e2780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e2860"/>
        <function-ref name="set" scoped="" ref="0xb71e2940"/>
        <function-ref name="clr" scoped="" ref="0xb71e2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71e1c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71e1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71e1de0"/>
        <function-ref name="isInput" scoped="" ref="0xb71e1ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb71e0010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71e00f0"/>
        <function-ref name="get" scoped="" ref="0xb71e01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71e02b0"/>
        <function-ref name="set" scoped="" ref="0xb71e0390"/>
        <function-ref name="clr" scoped="" ref="0xb71e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71df6c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71df6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71df898"/>
        <function-ref name="isInput" scoped="" ref="0xb71df978"/>
        <function-ref name="toggle" scoped="" ref="0xb71dfa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb71dfb38"/>
        <function-ref name="get" scoped="" ref="0xb71dfc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71dfcf8"/>
        <function-ref name="set" scoped="" ref="0xb71dfdd8"/>
        <function-ref name="clr" scoped="" ref="0xb71dfeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71dd0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71dd0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71dd288"/>
        <function-ref name="isInput" scoped="" ref="0xb71dd368"/>
        <function-ref name="toggle" scoped="" ref="0xb71dd448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71dd528"/>
        <function-ref name="get" scoped="" ref="0xb71dd608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71dd6e8"/>
        <function-ref name="set" scoped="" ref="0xb71dd7c8"/>
        <function-ref name="clr" scoped="" ref="0xb71dd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b1b6b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b1b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1b888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1b968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1ba48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1bb28"/>
        <function-ref name="get" scoped="" ref="0xb7b1bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b1bce8"/>
        <function-ref name="set" scoped="" ref="0xb7b1bdc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b1bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b19330" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b19330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b19508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b195e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b196c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b197a8"/>
        <function-ref name="get" scoped="" ref="0xb7b19888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b19968"/>
        <function-ref name="set" scoped="" ref="0xb7b19a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b19b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b1c3d8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b1c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1c5b0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1c690"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1c770"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1c850"/>
        <function-ref name="get" scoped="" ref="0xb7b1c930"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b1ca10"/>
        <function-ref name="set" scoped="" ref="0xb7b1caf0"/>
        <function-ref name="clr" scoped="" ref="0xb7b1cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b1a030" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b1a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1a208"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1a2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1a3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1a4a8"/>
        <function-ref name="get" scoped="" ref="0xb7b1a588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b1a668"/>
        <function-ref name="set" scoped="" ref="0xb7b1a748"/>
        <function-ref name="clr" scoped="" ref="0xb7b1a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b19c88" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b19c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b19e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b18010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b180f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b181d0"/>
        <function-ref name="get" scoped="" ref="0xb7b182b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b18390"/>
        <function-ref name="set" scoped="" ref="0xb7b18470"/>
        <function-ref name="clr" scoped="" ref="0xb7b18550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b1cd30" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b1cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1cf08"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1b010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1b1d0"/>
        <function-ref name="get" scoped="" ref="0xb7b1b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b1b390"/>
        <function-ref name="set" scoped="" ref="0xb7b1b470"/>
        <function-ref name="clr" scoped="" ref="0xb7b1b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b1a988" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b1a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b1ab60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b1ac40"/>
        <function-ref name="toggle" scoped="" ref="0xb7b1ad20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b1ae00"/>
        <function-ref name="get" scoped="" ref="0xb7b1aee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b19010"/>
        <function-ref name="set" scoped="" ref="0xb7b190f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b191d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b186b0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b186b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b18888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b18968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b18a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b18b28"/>
        <function-ref name="get" scoped="" ref="0xb7b18c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b18ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b18dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b18ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71b0538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71b0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b0710"/>
        <function-ref name="isInput" scoped="" ref="0xb71b07f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71b08d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b09b0"/>
        <function-ref name="get" scoped="" ref="0xb71b0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b0b70"/>
        <function-ref name="set" scoped="" ref="0xb71b0c50"/>
        <function-ref name="clr" scoped="" ref="0xb71b0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ae010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ae1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71ae2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71ae3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ae488"/>
        <function-ref name="get" scoped="" ref="0xb71ae568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ae648"/>
        <function-ref name="set" scoped="" ref="0xb71ae728"/>
        <function-ref name="clr" scoped="" ref="0xb71ae808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ad9e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ad9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71adbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb71adca0"/>
        <function-ref name="toggle" scoped="" ref="0xb71add80"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ade60"/>
        <function-ref name="get" scoped="" ref="0xb71ac010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ac0f0"/>
        <function-ref name="set" scoped="" ref="0xb71ac1d0"/>
        <function-ref name="clr" scoped="" ref="0xb71ac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ab538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ab538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ab710"/>
        <function-ref name="isInput" scoped="" ref="0xb71ab7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71ab8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ab9b0"/>
        <function-ref name="get" scoped="" ref="0xb71aba90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71abb70"/>
        <function-ref name="set" scoped="" ref="0xb71abc50"/>
        <function-ref name="clr" scoped="" ref="0xb71abd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a9010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a91e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71a92c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71a93a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a9488"/>
        <function-ref name="get" scoped="" ref="0xb71a9568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a9648"/>
        <function-ref name="set" scoped="" ref="0xb71a9728"/>
        <function-ref name="clr" scoped="" ref="0xb71a9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a89e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a8bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb71a8ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb71a8d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a8e60"/>
        <function-ref name="get" scoped="" ref="0xb71a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a70f0"/>
        <function-ref name="set" scoped="" ref="0xb71a71d0"/>
        <function-ref name="clr" scoped="" ref="0xb71a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a6538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a6710"/>
        <function-ref name="isInput" scoped="" ref="0xb71a67f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71a68d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a69b0"/>
        <function-ref name="get" scoped="" ref="0xb71a6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a6b70"/>
        <function-ref name="set" scoped="" ref="0xb71a6c50"/>
        <function-ref name="clr" scoped="" ref="0xb71a6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a4010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a41e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71a42c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71a43a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a4488"/>
        <function-ref name="get" scoped="" ref="0xb71a4568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a4648"/>
        <function-ref name="set" scoped="" ref="0xb71a4728"/>
        <function-ref name="clr" scoped="" ref="0xb71a4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b12170" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b12170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b12348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b12428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b12508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b125e8"/>
        <function-ref name="get" scoped="" ref="0xb7b126c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b127a8"/>
        <function-ref name="set" scoped="" ref="0xb7b12888"/>
        <function-ref name="clr" scoped="" ref="0xb7b12968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b11e48" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b11e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b10050"/>
        <function-ref name="isInput" scoped="" ref="0xb7b10130"/>
        <function-ref name="toggle" scoped="" ref="0xb7b10210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b102f0"/>
        <function-ref name="get" scoped="" ref="0xb7b103d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b104b0"/>
        <function-ref name="set" scoped="" ref="0xb7b10590"/>
        <function-ref name="clr" scoped="" ref="0xb7b10670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b14dc8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b14dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b13010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b130f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b131d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b132b0"/>
        <function-ref name="get" scoped="" ref="0xb7b13390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b13470"/>
        <function-ref name="set" scoped="" ref="0xb7b13550"/>
        <function-ref name="clr" scoped="" ref="0xb7b13630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b12ac8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b12ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b12ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b12d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b12e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b11010"/>
        <function-ref name="get" scoped="" ref="0xb7b110f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b111d0"/>
        <function-ref name="set" scoped="" ref="0xb7b112b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b11390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b107d0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b107d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b109a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b10a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7b10b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b10c48"/>
        <function-ref name="get" scoped="" ref="0xb7b10d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b10e08"/>
        <function-ref name="set" scoped="" ref="0xb7b10ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7b0f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b13790" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b13790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b13968"/>
        <function-ref name="isInput" scoped="" ref="0xb7b13a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7b13b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b13c08"/>
        <function-ref name="get" scoped="" ref="0xb7b13ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b13dc8"/>
        <function-ref name="set" scoped="" ref="0xb7b13ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7b12010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b114f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b116c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b117a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b11888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b11968"/>
        <function-ref name="get" scoped="" ref="0xb7b11a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b11b28"/>
        <function-ref name="set" scoped="" ref="0xb7b11c08"/>
        <function-ref name="clr" scoped="" ref="0xb7b11ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b0f170" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b0f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b0f348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b0f428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b0f508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b0f5e8"/>
        <function-ref name="get" scoped="" ref="0xb7b0f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b0f7a8"/>
        <function-ref name="set" scoped="" ref="0xb7b0f888"/>
        <function-ref name="clr" scoped="" ref="0xb7b0f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7178418" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7178418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71785f0"/>
        <function-ref name="isInput" scoped="" ref="0xb71786d0"/>
        <function-ref name="toggle" scoped="" ref="0xb71787b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7178890"/>
        <function-ref name="get" scoped="" ref="0xb7178970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7178a50"/>
        <function-ref name="set" scoped="" ref="0xb7178b30"/>
        <function-ref name="clr" scoped="" ref="0xb7178c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7177de0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7177de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7176010"/>
        <function-ref name="isInput" scoped="" ref="0xb71760f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71761d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71762b0"/>
        <function-ref name="get" scoped="" ref="0xb7176390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7176470"/>
        <function-ref name="set" scoped="" ref="0xb7176550"/>
        <function-ref name="clr" scoped="" ref="0xb7176630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71757f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71757f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71759d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7175ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7175b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7175c70"/>
        <function-ref name="get" scoped="" ref="0xb7175d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7175e30"/>
        <function-ref name="set" scoped="" ref="0xb7175f10"/>
        <function-ref name="clr" scoped="" ref="0xb7174010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7173228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7173228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7173400"/>
        <function-ref name="isInput" scoped="" ref="0xb71734e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71735c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71736a0"/>
        <function-ref name="get" scoped="" ref="0xb7173780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7173860"/>
        <function-ref name="set" scoped="" ref="0xb7173940"/>
        <function-ref name="clr" scoped="" ref="0xb7173a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7172c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7172c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7172de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7172ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7171010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71710f0"/>
        <function-ref name="get" scoped="" ref="0xb71711d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71712b0"/>
        <function-ref name="set" scoped="" ref="0xb7171390"/>
        <function-ref name="clr" scoped="" ref="0xb7171470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71706c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7170898"/>
        <function-ref name="isInput" scoped="" ref="0xb7170978"/>
        <function-ref name="toggle" scoped="" ref="0xb7170a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7170b38"/>
        <function-ref name="get" scoped="" ref="0xb7170c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7170cf8"/>
        <function-ref name="set" scoped="" ref="0xb7170dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7170eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb716e0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb716e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716e288"/>
        <function-ref name="isInput" scoped="" ref="0xb716e368"/>
        <function-ref name="toggle" scoped="" ref="0xb716e448"/>
        <function-ref name="isOutput" scoped="" ref="0xb716e528"/>
        <function-ref name="get" scoped="" ref="0xb716e608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716e6e8"/>
        <function-ref name="set" scoped="" ref="0xb716e7c8"/>
        <function-ref name="clr" scoped="" ref="0xb716e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb716da88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb716da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716dc60"/>
        <function-ref name="isInput" scoped="" ref="0xb716dd40"/>
        <function-ref name="toggle" scoped="" ref="0xb716de20"/>
        <function-ref name="isOutput" scoped="" ref="0xb716df00"/>
        <function-ref name="get" scoped="" ref="0xb716c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716c0f0"/>
        <function-ref name="set" scoped="" ref="0xb716c1d0"/>
        <function-ref name="clr" scoped="" ref="0xb716c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b0a9e8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b0a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b0abc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b0aca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b0ad80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b0ae60"/>
        <function-ref name="get" scoped="" ref="0xb7b09010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b090f0"/>
        <function-ref name="set" scoped="" ref="0xb7b091d0"/>
        <function-ref name="clr" scoped="" ref="0xb7b092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7b08790" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7b08790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b08968"/>
        <function-ref name="isInput" scoped="" ref="0xb7b08a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7b08b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b08c08"/>
        <function-ref name="get" scoped="" ref="0xb7b08ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b08dc8"/>
        <function-ref name="set" scoped="" ref="0xb7b08ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7b07010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b0b6f8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b0b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b0b8d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b0b9b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b0ba90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b0bb70"/>
        <function-ref name="get" scoped="" ref="0xb7b0bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b0bd30"/>
        <function-ref name="set" scoped="" ref="0xb7b0be10"/>
        <function-ref name="clr" scoped="" ref="0xb7b0bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b09410" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b09410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b095e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b096c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b097a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b09888"/>
        <function-ref name="get" scoped="" ref="0xb7b09968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b09a48"/>
        <function-ref name="set" scoped="" ref="0xb7b09b28"/>
        <function-ref name="clr" scoped="" ref="0xb7b09c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7b07170" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7b07170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b07348"/>
        <function-ref name="isInput" scoped="" ref="0xb7b07428"/>
        <function-ref name="toggle" scoped="" ref="0xb7b07508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b075e8"/>
        <function-ref name="get" scoped="" ref="0xb7b076c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b077a8"/>
        <function-ref name="set" scoped="" ref="0xb7b07888"/>
        <function-ref name="clr" scoped="" ref="0xb7b07968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b0a090" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b0a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b0a268"/>
        <function-ref name="isInput" scoped="" ref="0xb7b0a348"/>
        <function-ref name="toggle" scoped="" ref="0xb7b0a428"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b0a508"/>
        <function-ref name="get" scoped="" ref="0xb7b0a5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b0a6c8"/>
        <function-ref name="set" scoped="" ref="0xb7b0a7a8"/>
        <function-ref name="clr" scoped="" ref="0xb7b0a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b09d68" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b09d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b08010"/>
        <function-ref name="isInput" scoped="" ref="0xb7b080f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7b081d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b082b0"/>
        <function-ref name="get" scoped="" ref="0xb7b08390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b08470"/>
        <function-ref name="set" scoped="" ref="0xb7b08550"/>
        <function-ref name="clr" scoped="" ref="0xb7b08630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7b07ac8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7b07ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b07ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7b07d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7b07e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b06010"/>
        <function-ref name="get" scoped="" ref="0xb7b060f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b061d0"/>
        <function-ref name="set" scoped="" ref="0xb7b062b0"/>
        <function-ref name="clr" scoped="" ref="0xb7b06390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7144de8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7144de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713f010"/>
        <function-ref name="isInput" scoped="" ref="0xb713f0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb713f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb713f2b0"/>
        <function-ref name="get" scoped="" ref="0xb713f390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713f470"/>
        <function-ref name="set" scoped="" ref="0xb713f550"/>
        <function-ref name="clr" scoped="" ref="0xb713f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713e7f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713e9d0"/>
        <function-ref name="isInput" scoped="" ref="0xb713eab0"/>
        <function-ref name="toggle" scoped="" ref="0xb713eb90"/>
        <function-ref name="isOutput" scoped="" ref="0xb713ec70"/>
        <function-ref name="get" scoped="" ref="0xb713ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713ee30"/>
        <function-ref name="set" scoped="" ref="0xb713ef10"/>
        <function-ref name="clr" scoped="" ref="0xb713d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713c228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713c400"/>
        <function-ref name="isInput" scoped="" ref="0xb713c4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb713c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb713c6a0"/>
        <function-ref name="get" scoped="" ref="0xb713c780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713c860"/>
        <function-ref name="set" scoped="" ref="0xb713c940"/>
        <function-ref name="clr" scoped="" ref="0xb713ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb713bc08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb713bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb713bde0"/>
        <function-ref name="isInput" scoped="" ref="0xb713bec0"/>
        <function-ref name="toggle" scoped="" ref="0xb713a010"/>
        <function-ref name="isOutput" scoped="" ref="0xb713a0f0"/>
        <function-ref name="get" scoped="" ref="0xb713a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb713a2b0"/>
        <function-ref name="set" scoped="" ref="0xb713a390"/>
        <function-ref name="clr" scoped="" ref="0xb713a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71396c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71396c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7139898"/>
        <function-ref name="isInput" scoped="" ref="0xb7139978"/>
        <function-ref name="toggle" scoped="" ref="0xb7139a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb7139b38"/>
        <function-ref name="get" scoped="" ref="0xb7139c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7139cf8"/>
        <function-ref name="set" scoped="" ref="0xb7139dd8"/>
        <function-ref name="clr" scoped="" ref="0xb7139eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71370b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71370b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7137288"/>
        <function-ref name="isInput" scoped="" ref="0xb7137368"/>
        <function-ref name="toggle" scoped="" ref="0xb7137448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7137528"/>
        <function-ref name="get" scoped="" ref="0xb7137608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71376e8"/>
        <function-ref name="set" scoped="" ref="0xb71377c8"/>
        <function-ref name="clr" scoped="" ref="0xb71378a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7136a88" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7136a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7136c60"/>
        <function-ref name="isInput" scoped="" ref="0xb7136d40"/>
        <function-ref name="toggle" scoped="" ref="0xb7136e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7136f00"/>
        <function-ref name="get" scoped="" ref="0xb7135010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71350f0"/>
        <function-ref name="set" scoped="" ref="0xb71351d0"/>
        <function-ref name="clr" scoped="" ref="0xb71352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7134538" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7134538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7134710"/>
        <function-ref name="isInput" scoped="" ref="0xb71347f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71348d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71349b0"/>
        <function-ref name="get" scoped="" ref="0xb7134a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7134b70"/>
        <function-ref name="set" scoped="" ref="0xb7134c50"/>
        <function-ref name="clr" scoped="" ref="0xb7134d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7b02330" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7b02330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b02508"/>
        <function-ref name="isInput" scoped="" ref="0xb7b025e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b026c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b027a8"/>
        <function-ref name="get" scoped="" ref="0xb7b02888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b02968"/>
        <function-ref name="set" scoped="" ref="0xb7b02a48"/>
        <function-ref name="clr" scoped="" ref="0xb7b02b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7aff030" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7aff030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aff208"/>
        <function-ref name="isInput" scoped="" ref="0xb7aff2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7aff3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aff4a8"/>
        <function-ref name="get" scoped="" ref="0xb7aff588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aff668"/>
        <function-ref name="set" scoped="" ref="0xb7aff748"/>
        <function-ref name="clr" scoped="" ref="0xb7aff828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7b03010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7b03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b031e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7b032c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7b033a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b03488"/>
        <function-ref name="get" scoped="" ref="0xb7b03568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b03648"/>
        <function-ref name="set" scoped="" ref="0xb7b03728"/>
        <function-ref name="clr" scoped="" ref="0xb7b03808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7b02c88" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7b02c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b02e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7b00010"/>
        <function-ref name="toggle" scoped="" ref="0xb7b000f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b001d0"/>
        <function-ref name="get" scoped="" ref="0xb7b002b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b00390"/>
        <function-ref name="set" scoped="" ref="0xb7b00470"/>
        <function-ref name="clr" scoped="" ref="0xb7b00550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7aff988" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7aff988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7affb60"/>
        <function-ref name="isInput" scoped="" ref="0xb7affc40"/>
        <function-ref name="toggle" scoped="" ref="0xb7affd20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7affe00"/>
        <function-ref name="get" scoped="" ref="0xb7affee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afe010"/>
        <function-ref name="set" scoped="" ref="0xb7afe0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7afe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7b03968" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7b03968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b03b40"/>
        <function-ref name="isInput" scoped="" ref="0xb7b03c20"/>
        <function-ref name="toggle" scoped="" ref="0xb7b03d00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b03de0"/>
        <function-ref name="get" scoped="" ref="0xb7b03ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b02010"/>
        <function-ref name="set" scoped="" ref="0xb7b020f0"/>
        <function-ref name="clr" scoped="" ref="0xb7b021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7b006b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7b006b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7b00888"/>
        <function-ref name="isInput" scoped="" ref="0xb7b00968"/>
        <function-ref name="toggle" scoped="" ref="0xb7b00a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7b00b28"/>
        <function-ref name="get" scoped="" ref="0xb7b00c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7b00ce8"/>
        <function-ref name="set" scoped="" ref="0xb7b00dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7b00ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7afe330" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7afe330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afe508"/>
        <function-ref name="isInput" scoped="" ref="0xb7afe5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7afe6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afe7a8"/>
        <function-ref name="get" scoped="" ref="0xb7afe888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afe968"/>
        <function-ref name="set" scoped="" ref="0xb7afea48"/>
        <function-ref name="clr" scoped="" ref="0xb7afeb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7108938" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7108938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7108b10"/>
        <function-ref name="isInput" scoped="" ref="0xb7108bf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7108cd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7108db0"/>
        <function-ref name="get" scoped="" ref="0xb7108e90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7107010"/>
        <function-ref name="set" scoped="" ref="0xb71070f0"/>
        <function-ref name="clr" scoped="" ref="0xb71071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71063b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71063b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7106588"/>
        <function-ref name="isInput" scoped="" ref="0xb7106668"/>
        <function-ref name="toggle" scoped="" ref="0xb7106748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7106828"/>
        <function-ref name="get" scoped="" ref="0xb7106908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71069e8"/>
        <function-ref name="set" scoped="" ref="0xb7106ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7106ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7105d70" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7105d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7104010"/>
        <function-ref name="isInput" scoped="" ref="0xb71040f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71041d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71042b0"/>
        <function-ref name="get" scoped="" ref="0xb7104390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7104470"/>
        <function-ref name="set" scoped="" ref="0xb7104550"/>
        <function-ref name="clr" scoped="" ref="0xb7104630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71037f8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71037f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71039d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7103ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7103b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7103c70"/>
        <function-ref name="get" scoped="" ref="0xb7103d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7103e30"/>
        <function-ref name="set" scoped="" ref="0xb7103f10"/>
        <function-ref name="clr" scoped="" ref="0xb7102010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7101228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7101228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7101400"/>
        <function-ref name="isInput" scoped="" ref="0xb71014e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71015c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71016a0"/>
        <function-ref name="get" scoped="" ref="0xb7101780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7101860"/>
        <function-ref name="set" scoped="" ref="0xb7101940"/>
        <function-ref name="clr" scoped="" ref="0xb7101a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7100c08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7100c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7100de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7100ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb70ff010"/>
        <function-ref name="isOutput" scoped="" ref="0xb70ff0f0"/>
        <function-ref name="get" scoped="" ref="0xb70ff1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70ff2b0"/>
        <function-ref name="set" scoped="" ref="0xb70ff390"/>
        <function-ref name="clr" scoped="" ref="0xb70ff470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70fe6c0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70fe6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70fe898"/>
        <function-ref name="isInput" scoped="" ref="0xb70fe978"/>
        <function-ref name="toggle" scoped="" ref="0xb70fea58"/>
        <function-ref name="isOutput" scoped="" ref="0xb70feb38"/>
        <function-ref name="get" scoped="" ref="0xb70fec18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70fecf8"/>
        <function-ref name="set" scoped="" ref="0xb70fedd8"/>
        <function-ref name="clr" scoped="" ref="0xb70feeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb70fb0b0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb70fb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb70fb288"/>
        <function-ref name="isInput" scoped="" ref="0xb70fb368"/>
        <function-ref name="toggle" scoped="" ref="0xb70fb448"/>
        <function-ref name="isOutput" scoped="" ref="0xb70fb528"/>
        <function-ref name="get" scoped="" ref="0xb70fb608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb70fb6e8"/>
        <function-ref name="set" scoped="" ref="0xb70fb7c8"/>
        <function-ref name="clr" scoped="" ref="0xb70fb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7afb2d0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7afb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7afb4a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7afb588"/>
        <function-ref name="toggle" scoped="" ref="0xb7afb668"/>
        <function-ref name="isOutput" scoped="" ref="0xb7afb748"/>
        <function-ref name="get" scoped="" ref="0xb7afb828"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7afb908"/>
        <function-ref name="set" scoped="" ref="0xb7afb9e8"/>
        <function-ref name="clr" scoped="" ref="0xb7afbac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7aec8a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7aec8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7aeca78"/>
        <function-ref name="isInput" scoped="" ref="0xb7aecb58"/>
        <function-ref name="toggle" scoped="" ref="0xb7aecc38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aecd18"/>
        <function-ref name="get" scoped="" ref="0xb7aecdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aeced8"/>
        <function-ref name="set" scoped="" ref="0xb7aeb010"/>
        <function-ref name="clr" scoped="" ref="0xb7aeb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ae9ec0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ae9ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae80c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae81a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae8280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae8360"/>
        <function-ref name="get" scoped="" ref="0xb7ae8440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae8520"/>
        <function-ref name="set" scoped="" ref="0xb7ae8600"/>
        <function-ref name="clr" scoped="" ref="0xb7ae86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ae6538" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ae6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae6710"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae67f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae68d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae69b0"/>
        <function-ref name="get" scoped="" ref="0xb7ae6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae6b70"/>
        <function-ref name="set" scoped="" ref="0xb7ae6c50"/>
        <function-ref name="clr" scoped="" ref="0xb7ae6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ae4b68" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ae4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae4d40"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae4e20"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae4f00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae3010"/>
        <function-ref name="get" scoped="" ref="0xb7ae30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae31d0"/>
        <function-ref name="set" scoped="" ref="0xb7ae32b0"/>
        <function-ref name="clr" scoped="" ref="0xb7ae3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ae0228" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ae0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ae0400"/>
        <function-ref name="isInput" scoped="" ref="0xb7ae04e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ae05c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ae06a0"/>
        <function-ref name="get" scoped="" ref="0xb7ae0780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ae0860"/>
        <function-ref name="set" scoped="" ref="0xb7ae0940"/>
        <function-ref name="clr" scoped="" ref="0xb7ae0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ade8f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ade8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7adeac8"/>
        <function-ref name="isInput" scoped="" ref="0xb7adeba8"/>
        <function-ref name="toggle" scoped="" ref="0xb7adec88"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aded68"/>
        <function-ref name="get" scoped="" ref="0xb7adee48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7adef28"/>
        <function-ref name="set" scoped="" ref="0xb7add018"/>
        <function-ref name="clr" scoped="" ref="0xb7add0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7adcec0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7adcec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ada0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ada1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ada280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ada360"/>
        <function-ref name="get" scoped="" ref="0xb7ada440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ada520"/>
        <function-ref name="set" scoped="" ref="0xb7ada600"/>
        <function-ref name="clr" scoped="" ref="0xb7ada6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ad83e8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ad83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad85c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad86a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad8780"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad8860"/>
        <function-ref name="get" scoped="" ref="0xb7ad8940"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad8a20"/>
        <function-ref name="set" scoped="" ref="0xb7ad8b00"/>
        <function-ref name="clr" scoped="" ref="0xb7ad8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ad68f0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ad68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad6ac8"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad6ba8"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad6c88"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad6d68"/>
        <function-ref name="get" scoped="" ref="0xb7ad6e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad6f28"/>
        <function-ref name="set" scoped="" ref="0xb7ad5018"/>
        <function-ref name="clr" scoped="" ref="0xb7ad50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ad3dd8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ad3dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad2010"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad20f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad21d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad22b0"/>
        <function-ref name="get" scoped="" ref="0xb7ad2390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad2470"/>
        <function-ref name="set" scoped="" ref="0xb7ad2550"/>
        <function-ref name="clr" scoped="" ref="0xb7ad2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ad03b0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ad03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7ad0588"/>
        <function-ref name="isInput" scoped="" ref="0xb7ad0668"/>
        <function-ref name="toggle" scoped="" ref="0xb7ad0748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7ad0828"/>
        <function-ref name="get" scoped="" ref="0xb7ad0908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7ad09e8"/>
        <function-ref name="set" scoped="" ref="0xb7ad0ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7ad0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7ace8a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7ace8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7acea78"/>
        <function-ref name="isInput" scoped="" ref="0xb7aceb58"/>
        <function-ref name="toggle" scoped="" ref="0xb7acec38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7aced18"/>
        <function-ref name="get" scoped="" ref="0xb7acedf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7aceed8"/>
        <function-ref name="set" scoped="" ref="0xb7acd010"/>
        <function-ref name="clr" scoped="" ref="0xb7acd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7aad858" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7aad858"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7c347d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7c347d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7aada30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7aadc08" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7aadc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7aadde0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7aadec0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7aac010"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7aac0f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7aac1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7a9a010" loc="60:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7a9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a9a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7a9b1c8" loc="57:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7a9b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7a9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7a9bb28" loc="59:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7a9bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a9bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7a9b560" loc="58:/opt/tinyos-main-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7a9b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7a9b738"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7a9b818"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7a9b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7c2b600" loc="48:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7c2b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7c2b7d8"/>
        <function-ref name="runTask" scoped="" ref="0xb7c2b8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7c31ed8" loc="47:/opt/tinyos-main-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7c31ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c330c0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7c331a0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7c33280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7bb7d30" loc="56:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7bb7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7bb7f08"/>
        <function-ref name="runTask" scoped="" ref="0xb7bb5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7bb59c0" loc="57:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7bb59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7bb5b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7bb74f8" loc="55:/opt/tinyos-main-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7bb74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bb76d0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7bb77b0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7bb7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7ba2f18" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7ba2f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7ba4108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7ba5438" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7ba5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7ba5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7ba2148" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7ba2148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7ba2320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0xb7a4c528" loc="31:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0xb7a4c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7a90048"/>
        <function-ref name="fired" scoped="" ref="0xb7a932c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7a939c8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7a93770"/>
        <function-ref name="getdt" scoped="" ref="0xb7a904f8"/>
        <function-ref name="gett0" scoped="" ref="0xb7a902a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7a93518"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7a4cb50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7a93ce8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7a4cdd0"/>
        <function-ref name="stop" scoped="" ref="0xb7a93068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0xb7a91a10" loc="26:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0xb7a91a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a91be8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a91cc8"/>
        <function-ref name="start" scoped="" ref="0xb7a91da8"/>
        <function-ref name="stop" scoped="" ref="0xb7a91e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7a950b0" loc="25:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7a950b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7a95288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7a59380" loc="27:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7a59380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7a59558"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a59638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a59718"/>
        <function-ref name="cancel" scoped="" ref="0xb7a597f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7a598d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7a52470" loc="29:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a52470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a52648"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a52728"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a52808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a528e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a529c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0xb7a90870" loc="32:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0xb7a90870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7a49368"/>
        <function-ref name="fired" scoped="" ref="0xb7a4b608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7a4bd10"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7a4bab8"/>
        <function-ref name="getdt" scoped="" ref="0xb7a49818"/>
        <function-ref name="gett0" scoped="" ref="0xb7a495c0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7a4b860"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7a90e98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7a49048"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7a4b130"/>
        <function-ref name="stop" scoped="" ref="0xb7a4b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7a574b0" loc="28:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7a574b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a57688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7a41a18" loc="33:RadioRouteC.nc">
      <component-ref qname="RadioRouteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7a41a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7a41bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7a41cd0"/>
        <function-ref name="led1On" scoped="" ref="0xb7a41db0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7a41e90"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7a48010"/>
        <function-ref name="get" scoped="" ref="0xb7a480f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7a481d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb7a48550"/>
        <function-ref name="set" scoped="" ref="0xb7a482b0"/>
        <function-ref name="led0On" scoped="" ref="0xb7a48390"/>
        <function-ref name="led2On" scoped="" ref="0xb7a48470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7b92500" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7b92500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7b926d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7b927b8"/>
        <function-ref name="led1On" scoped="" ref="0xb7b92898"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7b92978"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7b92a58"/>
        <function-ref name="get" scoped="" ref="0xb7b92b38"/>
        <function-ref name="led1Off" scoped="" ref="0xb7b92c18"/>
        <function-ref name="led2Off" scoped="" ref="0xb79fb010"/>
        <function-ref name="set" scoped="" ref="0xb7b92cf8"/>
        <function-ref name="led0On" scoped="" ref="0xb7b92dd8"/>
        <function-ref name="led2On" scoped="" ref="0xb7b92eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb79f8940" loc="50:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb79f8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79f8b18"/>
        <function-ref name="isInput" scoped="" ref="0xb79f8bf8"/>
        <function-ref name="toggle" scoped="" ref="0xb79f8cd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb79f8db8"/>
        <function-ref name="get" scoped="" ref="0xb79f8e98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79f7010"/>
        <function-ref name="set" scoped="" ref="0xb79f70f0"/>
        <function-ref name="clr" scoped="" ref="0xb79f71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79fb898" loc="46:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79fb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79fba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb79f73c0" loc="51:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb79f73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79f7598"/>
        <function-ref name="isInput" scoped="" ref="0xb79f7678"/>
        <function-ref name="toggle" scoped="" ref="0xb79f7758"/>
        <function-ref name="isOutput" scoped="" ref="0xb79f7838"/>
        <function-ref name="get" scoped="" ref="0xb79f7918"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79f79f8"/>
        <function-ref name="set" scoped="" ref="0xb79f7ad8"/>
        <function-ref name="clr" scoped="" ref="0xb79f7bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb79fbbe0" loc="47:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb79fbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb79fbdb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb79fbe98"/>
        <function-ref name="led1On" scoped="" ref="0xb79f8010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb79f80f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb79f81d0"/>
        <function-ref name="get" scoped="" ref="0xb79f82b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb79f8390"/>
        <function-ref name="led2Off" scoped="" ref="0xb79f8710"/>
        <function-ref name="set" scoped="" ref="0xb79f8470"/>
        <function-ref name="led0On" scoped="" ref="0xb79f8550"/>
        <function-ref name="led2On" scoped="" ref="0xb79f8630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb79f7da8" loc="52:/opt/tinyos-main-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb79f7da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79f5010"/>
        <function-ref name="isInput" scoped="" ref="0xb79f50f0"/>
        <function-ref name="toggle" scoped="" ref="0xb79f51d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb79f52b0"/>
        <function-ref name="get" scoped="" ref="0xb79f5390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79f5470"/>
        <function-ref name="set" scoped="" ref="0xb79f5550"/>
        <function-ref name="clr" scoped="" ref="0xb79f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb79e5110" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb79e5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79e52e8"/>
        <function-ref name="isInput" scoped="" ref="0xb79e53c8"/>
        <function-ref name="toggle" scoped="" ref="0xb79e54a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb79e5588"/>
        <function-ref name="get" scoped="" ref="0xb79e5668"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79e5748"/>
        <function-ref name="set" scoped="" ref="0xb79e5828"/>
        <function-ref name="clr" scoped="" ref="0xb79e5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb79e5b18" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb79e5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79e5cf0"/>
        <function-ref name="isInput" scoped="" ref="0xb79e5dd0"/>
        <function-ref name="toggle" scoped="" ref="0xb79e5eb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb79e4010"/>
        <function-ref name="get" scoped="" ref="0xb79e40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79e41d0"/>
        <function-ref name="set" scoped="" ref="0xb79e42b0"/>
        <function-ref name="clr" scoped="" ref="0xb79e4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb79e4f28" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79e4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79e3110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb79e45a0" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb79e45a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb79e4778"/>
        <function-ref name="isInput" scoped="" ref="0xb79e4858"/>
        <function-ref name="toggle" scoped="" ref="0xb79e4938"/>
        <function-ref name="isOutput" scoped="" ref="0xb79e4a18"/>
        <function-ref name="get" scoped="" ref="0xb79e4af8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb79e4bd8"/>
        <function-ref name="set" scoped="" ref="0xb79e4cb8"/>
        <function-ref name="clr" scoped="" ref="0xb79e4d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb79e1010" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioRouteAppC.timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb79e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb79dbb00"/>
        <function-ref name="fired" scoped="" ref="0xb79e1d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb79db4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb79db268"/>
        <function-ref name="getdt" scoped="" ref="0xb78e0010"/>
        <function-ref name="gett0" scoped="" ref="0xb79dbd58"/>
        <function-ref name="isRunning" scoped="" ref="0xb79db010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb79e1638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb79db7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb79e18b8"/>
        <function-ref name="stop" scoped="" ref="0xb79e1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb79da010" loc="49:/opt/tinyos-main-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb79da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb79d9b00"/>
        <function-ref name="fired" scoped="" ref="0xb79dad90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb79d94c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb79d9268"/>
        <function-ref name="getdt" scoped="" ref="0xb79d7010"/>
        <function-ref name="gett0" scoped="" ref="0xb79d9d58"/>
        <function-ref name="isRunning" scoped="" ref="0xb79d9010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb79da638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb79d97e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb79da8b8"/>
        <function-ref name="stop" scoped="" ref="0xb79dab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb79d4100" loc="46:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb79d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb79d3be0"/>
        <function-ref name="fired" scoped="" ref="0xb79d4e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb79d35a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb79d3348"/>
        <function-ref name="getdt" scoped="" ref="0xb79d10b8"/>
        <function-ref name="gett0" scoped="" ref="0xb79d3e38"/>
        <function-ref name="isRunning" scoped="" ref="0xb79d30f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb79d4728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb79d38c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb79d49a8"/>
        <function-ref name="stop" scoped="" ref="0xb79d4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb79d00d0" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb79d00d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79d0718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79d7898" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79d7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79d7a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb79c2da0" loc="29:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb79c2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79c5508"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb79c59f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb79c5780"/>
        <function-ref name="overflow" scoped="" ref="0xb79c5c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79cf7d8" loc="27:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79cf7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb79cf9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb79cc1c8" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb79cc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb79cb690"/>
        <function-ref name="fired" scoped="" ref="0xb79cce30"/>
        <function-ref name="startAt" scoped="" ref="0xb79cb350"/>
        <function-ref name="isRunning" scoped="" ref="0xb79cb0d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb79cb908"/>
        <function-ref name="start" scoped="" ref="0xb79cc918"/>
        <function-ref name="stop" scoped="" ref="0xb79ccbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb79376f8" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb79376f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7936ba0"/>
        <function-ref name="fired" scoped="" ref="0xb7936370"/>
        <function-ref name="startAt" scoped="" ref="0xb7936860"/>
        <function-ref name="isRunning" scoped="" ref="0xb79365e8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7936e18"/>
        <function-ref name="start" scoped="" ref="0xb7937e48"/>
        <function-ref name="stop" scoped="" ref="0xb79360f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb79372c0" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb79372c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c345d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c345d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7937498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7935160" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7935160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79358b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7935da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7935b28"/>
        <function-ref name="overflow" scoped="" ref="0xb7934048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb708a090" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb708a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb708a268"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb708a348"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb708a428"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb708a508"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb708a5e8"/>
        <function-ref name="setControl" scoped="" ref="0xb708a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7090270" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7090270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb708f728"/>
        <function-ref name="fired" scoped="" ref="0xb7090ed8"/>
        <function-ref name="startAt" scoped="" ref="0xb708f3e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb708f170"/>
        <function-ref name="getAlarm" scoped="" ref="0xb708f9a0"/>
        <function-ref name="start" scoped="" ref="0xb70909c0"/>
        <function-ref name="stop" scoped="" ref="0xb7090c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7092d90" loc="25:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7092d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7090010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb708fcd0" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb708fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb708e438"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb708e928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb708e6b0"/>
        <function-ref name="overflow" scoped="" ref="0xb708eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb70822e8" loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb70822e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb70824c0"/>
        <function-ref name="compareBusy" scoped="" ref="0xb70825a0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb7082680"/>
        <function-ref name="countBusy" scoped="" ref="0xb7082760"/>
        <function-ref name="getAssr" scoped="" ref="0xb7082840"/>
        <function-ref name="setAssr" scoped="" ref="0xb7082920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb708a8b8" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb708a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7089e20"/>
        <function-ref name="fired" scoped="" ref="0xb7089440"/>
        <function-ref name="get" scoped="" ref="0xb708af00"/>
        <function-ref name="reset" scoped="" ref="0xb70896b8"/>
        <function-ref name="isOn" scoped="" ref="0xb70820b8"/>
        <function-ref name="set" scoped="" ref="0xb70891a0"/>
        <function-ref name="start" scoped="" ref="0xb7089930"/>
        <function-ref name="stop" scoped="" ref="0xb7089ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb708ee90" loc="30:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb708ee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb708b908"/>
        <function-ref name="test" scoped="" ref="0xb708b418"/>
        <function-ref name="get" scoped="" ref="0xb708c4f8"/>
        <function-ref name="setScale" scoped="" ref="0xb708bb80"/>
        <function-ref name="getScale" scoped="" ref="0xb708be20"/>
        <function-ref name="reset" scoped="" ref="0xb708cc88"/>
        <function-ref name="overflow" scoped="" ref="0xb708ca10"/>
        <function-ref name="isOn" scoped="" ref="0xb708b690"/>
        <function-ref name="set" scoped="" ref="0xb708c770"/>
        <function-ref name="start" scoped="" ref="0xb708cf00"/>
        <function-ref name="stop" scoped="" ref="0xb708b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7976010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7976010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb79761e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb79762c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb79763a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7976488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7976568"/>
        <function-ref name="setControl" scoped="" ref="0xb7976648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb79744f8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb79744f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb79746d0"/>
        <function-ref name="compareBusy" scoped="" ref="0xb79747b0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb7974890"/>
        <function-ref name="countBusy" scoped="" ref="0xb7974970"/>
        <function-ref name="getAssr" scoped="" ref="0xb7974a50"/>
        <function-ref name="setAssr" scoped="" ref="0xb7974b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7976970" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7976970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7975f08"/>
        <function-ref name="fired" scoped="" ref="0xb7975528"/>
        <function-ref name="get" scoped="" ref="0xb7975010"/>
        <function-ref name="reset" scoped="" ref="0xb79757a0"/>
        <function-ref name="isOn" scoped="" ref="0xb79741a0"/>
        <function-ref name="set" scoped="" ref="0xb7975288"/>
        <function-ref name="start" scoped="" ref="0xb7975a18"/>
        <function-ref name="stop" scoped="" ref="0xb7975c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb797ccb0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb797ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7977778"/>
        <function-ref name="test" scoped="" ref="0xb7977288"/>
        <function-ref name="get" scoped="" ref="0xb7979308"/>
        <function-ref name="setScale" scoped="" ref="0xb79779f0"/>
        <function-ref name="getScale" scoped="" ref="0xb7977c90"/>
        <function-ref name="reset" scoped="" ref="0xb7979a98"/>
        <function-ref name="overflow" scoped="" ref="0xb7979820"/>
        <function-ref name="isOn" scoped="" ref="0xb7977500"/>
        <function-ref name="set" scoped="" ref="0xb7979580"/>
        <function-ref name="start" scoped="" ref="0xb7979d10"/>
        <function-ref name="stop" scoped="" ref="0xb7977010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb796ed68" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb796ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb796d010"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb796d0f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb796d1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb796d2b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb796d390"/>
        <function-ref name="setControl" scoped="" ref="0xb796d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb796a2c8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb796a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb796a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb796a728" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb796a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0xb796a900"/>
        <function-ref name="compareBusy" scoped="" ref="0xb796a9e0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0xb796aac0"/>
        <function-ref name="countBusy" scoped="" ref="0xb796aba0"/>
        <function-ref name="getAssr" scoped="" ref="0xb796ac80"/>
        <function-ref name="setAssr" scoped="" ref="0xb796ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb796d798" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb796d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb796cce8"/>
        <function-ref name="fired" scoped="" ref="0xb796c308"/>
        <function-ref name="get" scoped="" ref="0xb796dde0"/>
        <function-ref name="reset" scoped="" ref="0xb796c580"/>
        <function-ref name="isOn" scoped="" ref="0xb796a010"/>
        <function-ref name="set" scoped="" ref="0xb796c068"/>
        <function-ref name="start" scoped="" ref="0xb796c7f8"/>
        <function-ref name="stop" scoped="" ref="0xb796ca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb79729e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb79729e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb796e500"/>
        <function-ref name="test" scoped="" ref="0xb796e010"/>
        <function-ref name="get" scoped="" ref="0xb796f048"/>
        <function-ref name="setScale" scoped="" ref="0xb796e778"/>
        <function-ref name="getScale" scoped="" ref="0xb796ea18"/>
        <function-ref name="reset" scoped="" ref="0xb796f7d8"/>
        <function-ref name="overflow" scoped="" ref="0xb796f560"/>
        <function-ref name="isOn" scoped="" ref="0xb796e288"/>
        <function-ref name="set" scoped="" ref="0xb796f2c0"/>
        <function-ref name="start" scoped="" ref="0xb796fa50"/>
        <function-ref name="stop" scoped="" ref="0xb796fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb7919298" loc="74:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb7919298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7919470"/>
        <function-ref name="runTask" scoped="" ref="0xb7919550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb791c8d8" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb791c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb791bd90"/>
        <function-ref name="fired" scoped="" ref="0xb791b560"/>
        <function-ref name="startAt" scoped="" ref="0xb791ba50"/>
        <function-ref name="isRunning" scoped="" ref="0xb791b7d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7919048"/>
        <function-ref name="start" scoped="" ref="0xb791b048"/>
        <function-ref name="stop" scoped="" ref="0xb791b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb791e5d8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb791e5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb791c0d8"/>
        <function-ref name="fired" scoped="" ref="0xb791d368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb791da70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb791d818"/>
        <function-ref name="getdt" scoped="" ref="0xb791c588"/>
        <function-ref name="gett0" scoped="" ref="0xb791c330"/>
        <function-ref name="isRunning" scoped="" ref="0xb791d5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb791ec00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb791dd90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb791ee80"/>
        <function-ref name="stop" scoped="" ref="0xb791d110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb78ed948" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb78ed948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb78edb20"/>
        <function-ref name="runTask" scoped="" ref="0xb78edc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb78f0688" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb78f0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78ed248"/>
        <function-ref name="fired" scoped="" ref="0xb78ee4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78eebf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb78ee998"/>
        <function-ref name="getdt" scoped="" ref="0xb78ed6f8"/>
        <function-ref name="gett0" scoped="" ref="0xb78ed4a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb78ee740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb78f0cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78eef10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb78ee010"/>
        <function-ref name="stop" scoped="" ref="0xb78ee290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7916338" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7916338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78f1ea8"/>
        <function-ref name="fired" scoped="" ref="0xb78f1110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78f1848"/>
        <function-ref name="isOneShot" scoped="" ref="0xb78f15e0"/>
        <function-ref name="getdt" scoped="" ref="0xb78f0398"/>
        <function-ref name="gett0" scoped="" ref="0xb78f0130"/>
        <function-ref name="isRunning" scoped="" ref="0xb78f1378"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7916970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78f1b78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7916c00"/>
        <function-ref name="stop" scoped="" ref="0xb7916e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb78e4d28" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb78e4d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78eb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb78eb6e0" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb78eb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78ebe30"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78e3350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78e30d8"/>
        <function-ref name="overflow" scoped="" ref="0xb78e35c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb78e0dc8" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioRouteAppC.timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78e0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb78de8e0"/>
        <function-ref name="fired" scoped="" ref="0xb78dfb60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb78de2a0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb78de048"/>
        <function-ref name="getdt" scoped="" ref="0xb78ded90"/>
        <function-ref name="gett0" scoped="" ref="0xb78deb38"/>
        <function-ref name="isRunning" scoped="" ref="0xb78dfdb8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb78df408"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb78de5c0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb78df688"/>
        <function-ref name="stop" scoped="" ref="0xb78df908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb78ddac0" loc="55:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb78ddac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb78ddc98"/>
        <function-ref name="stopDone" scoped="" ref="0xb78ddd78"/>
        <function-ref name="start" scoped="" ref="0xb78dde58"/>
        <function-ref name="stop" scoped="" ref="0xb78da010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb78da470" loc="57:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb78da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78da648"/>
        <function-ref name="getPayload" scoped="" ref="0xb78da728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78da808"/>
        <function-ref name="cancel" scoped="" ref="0xb78da8e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb78da9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb78d8510" loc="59:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb78d8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78d86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb78d8868" loc="61:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb78d8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb78d8a40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb78d8b20"/>
        <function-ref name="getPayload" scoped="" ref="0xb78d8c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78d8ce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb78d8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb78c2408" loc="64:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb78c2408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb78c2f08"/>
        <function-ref name="clear" scoped="" ref="0xb78cc2d0"/>
        <function-ref name="isValid" scoped="" ref="0xb78c2b58"/>
        <function-ref name="set" scoped="" ref="0xb78cc680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb78bcba8" loc="66:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb78bcba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb78bcd80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb78bce60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb78c0010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb78c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb78dae30" loc="58:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb78dae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78d8050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb78c9a90" loc="63:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78c9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb78c9c68"/>
        <function-ref name="noAck" scoped="" ref="0xb78c9d48"/>
        <function-ref name="wasAcked" scoped="" ref="0xb78c9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb78cb7b0" loc="62:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb78cb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb78cb988"/>
        <function-ref name="source" scoped="" ref="0xb78cba68"/>
        <function-ref name="address" scoped="" ref="0xb78cbb48"/>
        <function-ref name="destination" scoped="" ref="0xb78cbc28"/>
        <function-ref name="setSource" scoped="" ref="0xb78cbd08"/>
        <function-ref name="setDestination" scoped="" ref="0xb78cbde8"/>
        <function-ref name="type" scoped="" ref="0xb78cbec8"/>
        <function-ref name="setType" scoped="" ref="0xb78d6010"/>
        <function-ref name="isForMe" scoped="" ref="0xb78d60f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb78d61d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb78d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb78ccdb8" loc="65:/opt/tinyos-main-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb78ccdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb78c78c8"/>
        <function-ref name="clear" scoped="" ref="0xb78c7c78"/>
        <function-ref name="isValid" scoped="" ref="0xb78c7518"/>
        <function-ref name="set" scoped="" ref="0xb78c1048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb78b5788" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb78b5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb78b5960"/>
        <function-ref name="stopDone" scoped="" ref="0xb78b5a40"/>
        <function-ref name="start" scoped="" ref="0xb78b5b20"/>
        <function-ref name="stop" scoped="" ref="0xb78b5c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb78ac120" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb78ac120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb78ac2f8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb78ac3d8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb78ac4b8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb78ac598"/>
        <function-ref name="setCca" scoped="" ref="0xb78ac678"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb78ac758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb789cd78" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb789cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb78a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb78ae190" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb78ae190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb78ae368"/>
        <function-ref name="payloadLength" scoped="" ref="0xb78ae448"/>
        <function-ref name="getPayload" scoped="" ref="0xb78ae528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78ae608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb78ae6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb78b1100" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb78b1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78b12d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb78b13b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78b1498"/>
        <function-ref name="cancel" scoped="" ref="0xb78b1578"/>
        <function-ref name="sendDone" scoped="" ref="0xb78b1658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb78af178" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb78af178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78af350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb78a99a0" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb78a99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb78a9b78"/>
        <function-ref name="setNetwork" scoped="" ref="0xb78a9c58"/>
        <function-ref name="getRssi" scoped="" ref="0xb78a9d38"/>
        <function-ref name="getNetwork" scoped="" ref="0xb78a9e18"/>
        <function-ref name="getPower" scoped="" ref="0xb78a9ef8"/>
        <function-ref name="getLqi" scoped="" ref="0xb78ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb78ac948" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb78ac948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb78acb20"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb78acc00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb78acce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb78acdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb78b1ac0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb78b1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb78b1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb78ad230" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb78ad230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb78ad408"/>
        <function-ref name="noAck" scoped="" ref="0xb78ad4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb78ad5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb789b2c8" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb789b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb789b4a0"/>
        <function-ref name="setRetries" scoped="" ref="0xb789b580"/>
        <function-ref name="getRetries" scoped="" ref="0xb789b660"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb789b740"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb789b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb78af4e8" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb78af4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb78af6c0"/>
        <function-ref name="source" scoped="" ref="0xb78af7a0"/>
        <function-ref name="address" scoped="" ref="0xb78af880"/>
        <function-ref name="destination" scoped="" ref="0xb78af960"/>
        <function-ref name="setSource" scoped="" ref="0xb78afa40"/>
        <function-ref name="setDestination" scoped="" ref="0xb78afb20"/>
        <function-ref name="type" scoped="" ref="0xb78afc00"/>
        <function-ref name="setType" scoped="" ref="0xb78afce0"/>
        <function-ref name="isForMe" scoped="" ref="0xb78afdc0"/>
        <function-ref name="setGroup" scoped="" ref="0xb78afea0"/>
        <function-ref name="localGroup" scoped="" ref="0xb78ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb78a6638" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb78a6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb78a6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7899010" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7899010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb78991e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb78992c8"/>
        <function-ref name="start" scoped="" ref="0xb78993a8"/>
        <function-ref name="stop" scoped="" ref="0xb7899488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7893cf0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7893cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb7893ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb788c730" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb788c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb788c908"/>
        <function-ref name="setRetries" scoped="" ref="0xb788c9e8"/>
        <function-ref name="getRetries" scoped="" ref="0xb788cac8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb788cba8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb788cc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb7896ee8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb7896ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb78930e0"/>
        <function-ref name="setNetwork" scoped="" ref="0xb78931c0"/>
        <function-ref name="getRssi" scoped="" ref="0xb78932a0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7893380"/>
        <function-ref name="getPower" scoped="" ref="0xb7893460"/>
        <function-ref name="getLqi" scoped="" ref="0xb7893540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb78963c8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb78963c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb78965a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7896680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7896760"/>
        <function-ref name="cancel" scoped="" ref="0xb7896840"/>
        <function-ref name="sendDone" scoped="" ref="0xb7896920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb788c110" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb788c110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb788c2e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb788c3c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb788c4a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb788c588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb788d860" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb788d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb788da38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7893760" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7893760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7893938"/>
        <function-ref name="noAck" scoped="" ref="0xb7893a18"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7893af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7894b80" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7894b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7894d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7894e38"/>
        <function-ref name="request" scoped="" ref="0xb7894f18"/>
        <function-ref name="granted" scoped="" ref="0xb7897010"/>
        <function-ref name="isOwner" scoped="" ref="0xb78970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb788d0f0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb788d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb788d2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb788d3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb788d488"/>
        <function-ref name="cancel" scoped="" ref="0xb788d568"/>
        <function-ref name="sendDone" scoped="" ref="0xb788d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb788dc40" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb788dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb788de18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb788def8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7896010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb78960f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb78961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb7896b50" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb7896b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7896d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb788a498" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb788a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb788a670"/>
        <function-ref name="stopDone" scoped="" ref="0xb788a750"/>
        <function-ref name="start" scoped="" ref="0xb788a830"/>
        <function-ref name="stop" scoped="" ref="0xb788a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb7887570" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb7887570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb7887748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7887828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7887908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb78879e8"/>
        <function-ref name="setCca" scoped="" ref="0xb7887ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7887ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb788aaa0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb788aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb788ac78"/>
        <function-ref name="getPayload" scoped="" ref="0xb788ad58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb788ae38"/>
        <function-ref name="cancel" scoped="" ref="0xb788af18"/>
        <function-ref name="sendDone" scoped="" ref="0xb7887010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb78871b8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb78871b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7887390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7886530" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7886530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7886708"/>
        <function-ref name="stopDone" scoped="" ref="0xb78867e8"/>
        <function-ref name="start" scoped="" ref="0xb78868c8"/>
        <function-ref name="stop" scoped="" ref="0xb78869a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb78832d0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb78832d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb78834a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb7883588"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7883668"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7883748"/>
        <function-ref name="setCca" scoped="" ref="0xb7883828"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7883908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb78805f8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb78805f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb78807d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb78808b0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb7880990"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb7880a70"/>
        <function-ref name="setCca" scoped="" ref="0xb7880b50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb7880c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb787db60" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb787db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb787dd38"/>
        <function-ref name="setNetwork" scoped="" ref="0xb787de18"/>
        <function-ref name="getRssi" scoped="" ref="0xb787def8"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7877010"/>
        <function-ref name="getPower" scoped="" ref="0xb78770f0"/>
        <function-ref name="getLqi" scoped="" ref="0xb78771d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0xb7878da0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb7878da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7880010"/>
        <function-ref name="cancel" scoped="" ref="0xb78800f0"/>
        <function-ref name="modify" scoped="" ref="0xb78801d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb78802b0"/>
        <function-ref name="resend" scoped="" ref="0xb7880390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7886b38" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7886b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7886d10"/>
        <function-ref name="getPayload" scoped="" ref="0xb7886df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7886ed0"/>
        <function-ref name="cancel" scoped="" ref="0xb7883010"/>
        <function-ref name="sendDone" scoped="" ref="0xb78830f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7876a50" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7876a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7876c28"/>
        <function-ref name="rand32" scoped="" ref="0xb7876d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb787c740" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb787c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb787c918"/>
        <function-ref name="stop" scoped="" ref="0xb787c9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb7871360" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7871360"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb7871538"/>
        <function-ref name="getHeader" scoped="" ref="0xb7871618"/>
        <function-ref name="getMetadata" scoped="" ref="0xb78716f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0xb787ec98" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb787ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb787ee70"/>
        <function-ref name="rfOff" scoped="" ref="0xb7881010"/>
        <function-ref name="rxOn" scoped="" ref="0xb78810f0"/>
        <function-ref name="startVReg" scoped="" ref="0xb78811d0"/>
        <function-ref name="stopVReg" scoped="" ref="0xb78812b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb7881390"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7881470"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7881550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7876e98" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7876e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb787d0c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb787d1a0"/>
        <function-ref name="led1On" scoped="" ref="0xb787d280"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb787d360"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb787d440"/>
        <function-ref name="get" scoped="" ref="0xb787d520"/>
        <function-ref name="led1Off" scoped="" ref="0xb787d600"/>
        <function-ref name="led2Off" scoped="" ref="0xb787d980"/>
        <function-ref name="set" scoped="" ref="0xb787d6e0"/>
        <function-ref name="led0On" scoped="" ref="0xb787d7c0"/>
        <function-ref name="led2On" scoped="" ref="0xb787d8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb7883ac0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7883ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7883c98"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7883d78"/>
        <function-ref name="request" scoped="" ref="0xb7883e58"/>
        <function-ref name="granted" scoped="" ref="0xb7882010"/>
        <function-ref name="isOwner" scoped="" ref="0xb78820f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0xb786ebc8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0xb786ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb786ee20"/>
        <function-ref name="toIdle" scoped="" ref="0xb786ef00"/>
        <function-ref name="isState" scoped="" ref="0xb7874010"/>
        <function-ref name="isIdle" scoped="" ref="0xb78740f0"/>
        <function-ref name="requestState" scoped="" ref="0xb78741d0"/>
        <function-ref name="forceState" scoped="" ref="0xb78742b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0xb786dda8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0xb786dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb786c010"/>
        <function-ref name="runTask" scoped="" ref="0xb786c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0xb786d598" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0xb786d598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb786d770"/>
        <function-ref name="runTask" scoped="" ref="0xb786d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0xb7873cb8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0xb7873cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7873e90"/>
        <function-ref name="runTask" scoped="" ref="0xb786d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb7839ed0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb7839ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb78410c0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb78411a0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb7841280"/>
        <function-ref name="syncDone" scoped="" ref="0xb7841360"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb7841440"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb7841520"/>
        <function-ref name="setChannel" scoped="" ref="0xb7841600"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb78416e0"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb78417c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb78418a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb7841980"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb7841a60"/>
        <function-ref name="sync" scoped="" ref="0xb7841b40"/>
        <function-ref name="getChannel" scoped="" ref="0xb7841ca0"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb7841d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb7836e60" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb7836e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb78384b8"/>
        <function-ref name="readDone" scoped="" ref="0xb7838710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb7840010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb7840010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb78401e8"/>
        <function-ref name="rfOff" scoped="" ref="0xb78402c8"/>
        <function-ref name="rxOn" scoped="" ref="0xb78403a8"/>
        <function-ref name="startVReg" scoped="" ref="0xb7840488"/>
        <function-ref name="stopVReg" scoped="" ref="0xb7840568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb7840648"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7840728"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7840808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7845f08" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7845f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb78420f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb78421d0"/>
        <function-ref name="request" scoped="" ref="0xb78422b0"/>
        <function-ref name="granted" scoped="" ref="0xb7842390"/>
        <function-ref name="isOwner" scoped="" ref="0xb7842470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0xb7834d08" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb7834d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb7834ee0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb7833010"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb78330f0"/>
        <function-ref name="syncDone" scoped="" ref="0xb78331d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb78332b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb7833390"/>
        <function-ref name="setChannel" scoped="" ref="0xb7833470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb7833550"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb7833630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb7833710"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb78337f0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb78338d0"/>
        <function-ref name="sync" scoped="" ref="0xb78339b0"/>
        <function-ref name="getChannel" scoped="" ref="0xb7833b10"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb7833bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0xb7820158" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7820158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7820330"/>
        <function-ref name="write" scoped="" ref="0xb7820410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0xb7830dc8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb7830dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb782f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0xb782f400" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0xb782f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb782e8b8"/>
        <function-ref name="fired" scoped="" ref="0xb782e088"/>
        <function-ref name="startAt" scoped="" ref="0xb782e578"/>
        <function-ref name="isRunning" scoped="" ref="0xb782e300"/>
        <function-ref name="getAlarm" scoped="" ref="0xb782eb30"/>
        <function-ref name="start" scoped="" ref="0xb782fb50"/>
        <function-ref name="stop" scoped="" ref="0xb782fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0xb782a6a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb782a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb782a880"/>
        <function-ref name="write" scoped="" ref="0xb782a960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb782d840" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb782d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782da18"/>
        <function-ref name="isInput" scoped="" ref="0xb782daf8"/>
        <function-ref name="toggle" scoped="" ref="0xb782dbd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb782dcb8"/>
        <function-ref name="get" scoped="" ref="0xb782dd98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782de78"/>
        <function-ref name="set" scoped="" ref="0xb782c010"/>
        <function-ref name="clr" scoped="" ref="0xb782c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0xb7832920" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0xb7832920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7830010"/>
        <function-ref name="readDone" scoped="" ref="0xb7830268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0xb7815538" loc="126:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0xb7815538"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7815710"/>
        <function-ref name="runTask" scoped="" ref="0xb78157f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0xb7820650" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7820650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7820828"/>
        <function-ref name="write" scoped="" ref="0xb7820908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb7820b58" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7820b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7820d30"/>
        <function-ref name="write" scoped="" ref="0xb7820e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0xb781fc70" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb781fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb781fe48"/>
        <function-ref name="write" scoped="" ref="0xb781ff28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb7825390" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7825390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb7825568"/>
        <function-ref name="changed" scoped="" ref="0xb7825648"/>
        <function-ref name="amGroup" scoped="" ref="0xb7825728"/>
        <function-ref name="setAddress" scoped="" ref="0xb7825808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb782ee00" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb782ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782d010"/>
        <function-ref name="isInput" scoped="" ref="0xb782d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb782d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb782d2b0"/>
        <function-ref name="get" scoped="" ref="0xb782d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782d470"/>
        <function-ref name="set" scoped="" ref="0xb782d550"/>
        <function-ref name="clr" scoped="" ref="0xb782d630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0xb781d2a8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb781d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb781d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0xb782c300" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb782c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb782c4d8"/>
        <function-ref name="isInput" scoped="" ref="0xb782c5b8"/>
        <function-ref name="toggle" scoped="" ref="0xb782c698"/>
        <function-ref name="isOutput" scoped="" ref="0xb782c778"/>
        <function-ref name="get" scoped="" ref="0xb782c858"/>
        <function-ref name="makeOutput" scoped="" ref="0xb782c938"/>
        <function-ref name="set" scoped="" ref="0xb782ca18"/>
        <function-ref name="clr" scoped="" ref="0xb782caf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7834240" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7834240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7834418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb782abc8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb782abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb782ada0"/>
        <function-ref name="write" scoped="" ref="0xb782ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0xb781d7c8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb781d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb781d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb781dbe8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb781dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb781ddc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb781dea0"/>
        <function-ref name="request" scoped="" ref="0xb781c010"/>
        <function-ref name="granted" scoped="" ref="0xb781c0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb781c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0xb781cbd8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0xb781cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb781cdb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb781ce90"/>
        <function-ref name="request" scoped="" ref="0xb781b010"/>
        <function-ref name="granted" scoped="" ref="0xb781b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb781b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0xb7833dc0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0xb7833dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0xb7832010"/>
        <function-ref name="rfOff" scoped="" ref="0xb78320f0"/>
        <function-ref name="rxOn" scoped="" ref="0xb78321d0"/>
        <function-ref name="startVReg" scoped="" ref="0xb78322b0"/>
        <function-ref name="stopVReg" scoped="" ref="0xb7832390"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0xb7832470"/>
        <function-ref name="stopOscillator" scoped="" ref="0xb7832550"/>
        <function-ref name="startVRegDone" scoped="" ref="0xb7832630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0xb782a188" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb782a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb782a360"/>
        <function-ref name="write" scoped="" ref="0xb782a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0xb781f768" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb781f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb781f940"/>
        <function-ref name="write" scoped="" ref="0xb781fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0xb781ea20" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb781ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb781ebf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb781b360" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb781b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb781b538"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb781b618"/>
        <function-ref name="led1On" scoped="" ref="0xb781b6f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb781b7d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb781b8b8"/>
        <function-ref name="get" scoped="" ref="0xb781b998"/>
        <function-ref name="led1Off" scoped="" ref="0xb781ba78"/>
        <function-ref name="led2Off" scoped="" ref="0xb781bdf8"/>
        <function-ref name="set" scoped="" ref="0xb781bb58"/>
        <function-ref name="led0On" scoped="" ref="0xb781bc38"/>
        <function-ref name="led2On" scoped="" ref="0xb781bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0xb7816cb8" loc="125:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0xb7816cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7816e90"/>
        <function-ref name="runTask" scoped="" ref="0xb7815010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb78345d0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb78345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb78347a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7834888"/>
        <function-ref name="request" scoped="" ref="0xb7834968"/>
        <function-ref name="granted" scoped="" ref="0xb7834a48"/>
        <function-ref name="isOwner" scoped="" ref="0xb7834b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0xb782b010" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb782b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb782b1e8"/>
        <function-ref name="write" scoped="" ref="0xb782b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0xb7823a08" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb7823a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7823c60"/>
        <function-ref name="write" scoped="" ref="0xb7823d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0xb78273e0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb78273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb78275b8"/>
        <function-ref name="disable" scoped="" ref="0xb7827698"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb7827778"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb7827858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0xb781c428" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0xb781c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb781c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb781c6e0"/>
        <function-ref name="request" scoped="" ref="0xb781c7c0"/>
        <function-ref name="granted" scoped="" ref="0xb781c8a0"/>
        <function-ref name="isOwner" scoped="" ref="0xb781c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0xb781ee38" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb781ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb781d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb77d3af0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb77d3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb77d3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0xb77d00e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0xb77d00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77ce5c8"/>
        <function-ref name="fired" scoped="" ref="0xb77d0d48"/>
        <function-ref name="startAt" scoped="" ref="0xb77ce288"/>
        <function-ref name="isRunning" scoped="" ref="0xb77ce010"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77ce840"/>
        <function-ref name="start" scoped="" ref="0xb77d0830"/>
        <function-ref name="stop" scoped="" ref="0xb77d0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb77cda60" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77cda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb76d4010"/>
        <function-ref name="fired" scoped="" ref="0xb77cc718"/>
        <function-ref name="startAt" scoped="" ref="0xb77ccc08"/>
        <function-ref name="isRunning" scoped="" ref="0xb77cc990"/>
        <function-ref name="getAlarm" scoped="" ref="0xb76d4288"/>
        <function-ref name="start" scoped="" ref="0xb77cc200"/>
        <function-ref name="stop" scoped="" ref="0xb77cc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76d44b8" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76d44b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76d4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7040450" loc="28:/opt/tinyos-main-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7040450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb703f908"/>
        <function-ref name="fired" scoped="" ref="0xb703f0d8"/>
        <function-ref name="startAt" scoped="" ref="0xb703f5c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb703f350"/>
        <function-ref name="getAlarm" scoped="" ref="0xb703fb80"/>
        <function-ref name="start" scoped="" ref="0xb7040ba0"/>
        <function-ref name="stop" scoped="" ref="0xb7040e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb703c190" loc="30:/opt/tinyos-main-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb703c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb703b640"/>
        <function-ref name="fired" scoped="" ref="0xb703cdf8"/>
        <function-ref name="startAt" scoped="" ref="0xb703b300"/>
        <function-ref name="isRunning" scoped="" ref="0xb703b088"/>
        <function-ref name="getAlarm" scoped="" ref="0xb703b8b8"/>
        <function-ref name="start" scoped="" ref="0xb703c8e0"/>
        <function-ref name="stop" scoped="" ref="0xb703cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb77b3208" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb77b3208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb77b33e0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb77b34c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb77b35a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb77b3680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb77b3760"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb77b3840"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb77b3920"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb77b3a00"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb77b3ae0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb77b3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb77b9010" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb77b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb77aea88"/>
        <function-ref name="test" scoped="" ref="0xb77ae598"/>
        <function-ref name="get" scoped="" ref="0xb77b9658"/>
        <function-ref name="captured" scoped="" ref="0xb77b9b70"/>
        <function-ref name="reset" scoped="" ref="0xb77b9e10"/>
        <function-ref name="isOn" scoped="" ref="0xb77ae810"/>
        <function-ref name="set" scoped="" ref="0xb77b98d0"/>
        <function-ref name="start" scoped="" ref="0xb77ae0a8"/>
        <function-ref name="stop" scoped="" ref="0xb77ae320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb77ad1b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb77ad1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb77ac778"/>
        <function-ref name="fired" scoped="" ref="0xb77add10"/>
        <function-ref name="get" scoped="" ref="0xb77ad7f8"/>
        <function-ref name="reset" scoped="" ref="0xb77ac010"/>
        <function-ref name="isOn" scoped="" ref="0xb77ac9f0"/>
        <function-ref name="set" scoped="" ref="0xb77ada70"/>
        <function-ref name="start" scoped="" ref="0xb77ac288"/>
        <function-ref name="stop" scoped="" ref="0xb77ac500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77bc2f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb77bbd30"/>
        <function-ref name="test" scoped="" ref="0xb77bb840"/>
        <function-ref name="get" scoped="" ref="0xb77bc938"/>
        <function-ref name="setScale" scoped="" ref="0xb77ba010"/>
        <function-ref name="getScale" scoped="" ref="0xb77ba2b0"/>
        <function-ref name="reset" scoped="" ref="0xb77bb0d8"/>
        <function-ref name="overflow" scoped="" ref="0xb77bce50"/>
        <function-ref name="isOn" scoped="" ref="0xb77bbab8"/>
        <function-ref name="set" scoped="" ref="0xb77bcbb0"/>
        <function-ref name="start" scoped="" ref="0xb77bb350"/>
        <function-ref name="stop" scoped="" ref="0xb77bb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb77a6b58" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb77a6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb77a6d30"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0xb77a6e10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb77a6ef0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0xb77a5010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb77a50f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb77a51d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0xb77a52b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0xb77a5390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0xb77a5470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0xb77a5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0xb779cc20" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0xb779cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0xb779cdf8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb779ced8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb779a010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb779a0f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb779a1d0"/>
        <function-ref name="setControl" scoped="" ref="0xb779a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb77a2760" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb77a2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb77a1cc8"/>
        <function-ref name="fired" scoped="" ref="0xb77a12e8"/>
        <function-ref name="get" scoped="" ref="0xb77a2da8"/>
        <function-ref name="reset" scoped="" ref="0xb77a1560"/>
        <function-ref name="isOn" scoped="" ref="0xb77a0010"/>
        <function-ref name="set" scoped="" ref="0xb77a1048"/>
        <function-ref name="start" scoped="" ref="0xb77a17d8"/>
        <function-ref name="stop" scoped="" ref="0xb77a1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb77a5888" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb77a5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb77a2320"/>
        <function-ref name="test" scoped="" ref="0xb77a4e18"/>
        <function-ref name="get" scoped="" ref="0xb77a5ed0"/>
        <function-ref name="captured" scoped="" ref="0xb77a4410"/>
        <function-ref name="reset" scoped="" ref="0xb77a46b0"/>
        <function-ref name="isOn" scoped="" ref="0xb77a20a8"/>
        <function-ref name="set" scoped="" ref="0xb77a4170"/>
        <function-ref name="start" scoped="" ref="0xb77a4928"/>
        <function-ref name="stop" scoped="" ref="0xb77a4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb77a0428" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb77a0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb779e9f0"/>
        <function-ref name="fired" scoped="" ref="0xb779e010"/>
        <function-ref name="get" scoped="" ref="0xb77a0a70"/>
        <function-ref name="reset" scoped="" ref="0xb779e288"/>
        <function-ref name="isOn" scoped="" ref="0xb779ec68"/>
        <function-ref name="set" scoped="" ref="0xb77a0ce8"/>
        <function-ref name="start" scoped="" ref="0xb779e500"/>
        <function-ref name="stop" scoped="" ref="0xb779e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb779d0b8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb779d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb779c620"/>
        <function-ref name="fired" scoped="" ref="0xb779dc18"/>
        <function-ref name="get" scoped="" ref="0xb779d700"/>
        <function-ref name="reset" scoped="" ref="0xb779de90"/>
        <function-ref name="isOn" scoped="" ref="0xb779c898"/>
        <function-ref name="set" scoped="" ref="0xb779d978"/>
        <function-ref name="start" scoped="" ref="0xb779c130"/>
        <function-ref name="stop" scoped="" ref="0xb779c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77aa860" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77aa860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb77a62e0"/>
        <function-ref name="test" scoped="" ref="0xb77a7dd0"/>
        <function-ref name="get" scoped="" ref="0xb77aaea8"/>
        <function-ref name="setScale" scoped="" ref="0xb77a6558"/>
        <function-ref name="getScale" scoped="" ref="0xb77a67f8"/>
        <function-ref name="reset" scoped="" ref="0xb77a7668"/>
        <function-ref name="overflow" scoped="" ref="0xb77a73f0"/>
        <function-ref name="isOn" scoped="" ref="0xb77a6068"/>
        <function-ref name="set" scoped="" ref="0xb77a7150"/>
        <function-ref name="start" scoped="" ref="0xb77a78e0"/>
        <function-ref name="stop" scoped="" ref="0xb77a7b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb774a040" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb774a040"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7c345d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7c345d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb774a218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb774a428" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb774a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7749ee0"/>
        <function-ref name="test" scoped="" ref="0xb77499f0"/>
        <function-ref name="get" scoped="" ref="0xb774aa70"/>
        <function-ref name="setScale" scoped="" ref="0xb7740170"/>
        <function-ref name="getScale" scoped="" ref="0xb7740410"/>
        <function-ref name="reset" scoped="" ref="0xb7749288"/>
        <function-ref name="overflow" scoped="" ref="0xb7749010"/>
        <function-ref name="isOn" scoped="" ref="0xb7749c68"/>
        <function-ref name="set" scoped="" ref="0xb774ace8"/>
        <function-ref name="start" scoped="" ref="0xb7749500"/>
        <function-ref name="stop" scoped="" ref="0xb7749778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7032ee8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7032ee8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7c343d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7c343d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb702d3e8"/>
        <function-ref name="fired" scoped="" ref="0xb702eb98"/>
        <function-ref name="startAt" scoped="" ref="0xb702d0a8"/>
        <function-ref name="isRunning" scoped="" ref="0xb702ee10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb702d660"/>
        <function-ref name="start" scoped="" ref="0xb702e680"/>
        <function-ref name="stop" scoped="" ref="0xb702e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb702abf0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb702abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb70281a0"/>
        <function-ref name="fired" scoped="" ref="0xb7029790"/>
        <function-ref name="get" scoped="" ref="0xb7029278"/>
        <function-ref name="reset" scoped="" ref="0xb7029a08"/>
        <function-ref name="isOn" scoped="" ref="0xb7028418"/>
        <function-ref name="set" scoped="" ref="0xb70294f0"/>
        <function-ref name="start" scoped="" ref="0xb7029c80"/>
        <function-ref name="stop" scoped="" ref="0xb7029ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb702d920" loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb702d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb702a418"/>
        <function-ref name="test" scoped="" ref="0xb702cf08"/>
        <function-ref name="get" scoped="" ref="0xb702c010"/>
        <function-ref name="setScale" scoped="" ref="0xb702a690"/>
        <function-ref name="getScale" scoped="" ref="0xb702a930"/>
        <function-ref name="reset" scoped="" ref="0xb702c7a0"/>
        <function-ref name="overflow" scoped="" ref="0xb702c528"/>
        <function-ref name="isOn" scoped="" ref="0xb702a1a0"/>
        <function-ref name="set" scoped="" ref="0xb702c288"/>
        <function-ref name="start" scoped="" ref="0xb702ca18"/>
        <function-ref name="stop" scoped="" ref="0xb702cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7722e30" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7722e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb771e590"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb771ea80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb771e808"/>
        <function-ref name="overflow" scoped="" ref="0xb771ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb771dc38" loc="24:/opt/tinyos-main-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb771dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb771a3a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb771a890"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb771a618"/>
        <function-ref name="overflow" scoped="" ref="0xb771ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7718470" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7718470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7718bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb770d0d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7718e38"/>
        <function-ref name="overflow" scoped="" ref="0xb770d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb770d630" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb770d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb770b0a8"/>
        <function-ref name="test" scoped="" ref="0xb770cba0"/>
        <function-ref name="get" scoped="" ref="0xb770dc78"/>
        <function-ref name="setScale" scoped="" ref="0xb770b320"/>
        <function-ref name="getScale" scoped="" ref="0xb770b5c0"/>
        <function-ref name="reset" scoped="" ref="0xb770c438"/>
        <function-ref name="overflow" scoped="" ref="0xb770c1c0"/>
        <function-ref name="isOn" scoped="" ref="0xb770ce18"/>
        <function-ref name="set" scoped="" ref="0xb770def0"/>
        <function-ref name="start" scoped="" ref="0xb770c6b0"/>
        <function-ref name="stop" scoped="" ref="0xb770c928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb7708ae8" loc="63:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb7708ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb76f8308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb76f87f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb76f8580"/>
        <function-ref name="overflow" scoped="" ref="0xb76f8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb771b7f0" loc="62:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb771b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7708010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7708500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7708288"/>
        <function-ref name="overflow" scoped="" ref="0xb7708778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb703ab48" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb703ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7037068"/>
        <function-ref name="fired" scoped="" ref="0xb7039820"/>
        <function-ref name="startAt" scoped="" ref="0xb7039d10"/>
        <function-ref name="isRunning" scoped="" ref="0xb7039a98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb70372e0"/>
        <function-ref name="start" scoped="" ref="0xb7039308"/>
        <function-ref name="stop" scoped="" ref="0xb70395a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0xb7036870" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0xb7036870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="TOne" ref="0xb7bbb9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7035d58"/>
        <function-ref name="fired" scoped="" ref="0xb7035528"/>
        <function-ref name="startAt" scoped="" ref="0xb7035a18"/>
        <function-ref name="isRunning" scoped="" ref="0xb70357a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7034010"/>
        <function-ref name="start" scoped="" ref="0xb7035010"/>
        <function-ref name="stop" scoped="" ref="0xb70352b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb7037630" loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7037630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7037d80"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7036288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7036010"/>
        <function-ref name="overflow" scoped="" ref="0xb7036500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76d67a0" loc="18:/opt/tinyos-main-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76d67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76d6978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0xb76cf660" loc="87:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb76cf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76cf838"/>
        <function-ref name="isInput" scoped="" ref="0xb76cf918"/>
        <function-ref name="toggle" scoped="" ref="0xb76cf9f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb76cfad8"/>
        <function-ref name="get" scoped="" ref="0xb76cfbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76cfc98"/>
        <function-ref name="set" scoped="" ref="0xb76cfd78"/>
        <function-ref name="clr" scoped="" ref="0xb76cfe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0xb76ce068" loc="88:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb76ce068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76ce240"/>
        <function-ref name="isInput" scoped="" ref="0xb76ce320"/>
        <function-ref name="toggle" scoped="" ref="0xb76ce400"/>
        <function-ref name="isOutput" scoped="" ref="0xb76ce4e0"/>
        <function-ref name="get" scoped="" ref="0xb76ce5c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76ce6a0"/>
        <function-ref name="set" scoped="" ref="0xb76ce780"/>
        <function-ref name="clr" scoped="" ref="0xb76ce860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb76cea50" loc="89:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb76cea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76cec28"/>
        <function-ref name="isInput" scoped="" ref="0xb76ced08"/>
        <function-ref name="toggle" scoped="" ref="0xb76cede8"/>
        <function-ref name="isOutput" scoped="" ref="0xb76ceec8"/>
        <function-ref name="get" scoped="" ref="0xb76cd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76cd0f0"/>
        <function-ref name="set" scoped="" ref="0xb76cd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb76cd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0xb76d0c48" loc="86:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb76d0c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76d0e20"/>
        <function-ref name="isInput" scoped="" ref="0xb76d0f00"/>
        <function-ref name="toggle" scoped="" ref="0xb76cf010"/>
        <function-ref name="isOutput" scoped="" ref="0xb76cf0f0"/>
        <function-ref name="get" scoped="" ref="0xb76cf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76cf2b0"/>
        <function-ref name="set" scoped="" ref="0xb76cf390"/>
        <function-ref name="clr" scoped="" ref="0xb76cf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0xb76cde78" loc="91:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0xb76cde78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76cc070"/>
        <function-ref name="isInput" scoped="" ref="0xb76cc150"/>
        <function-ref name="toggle" scoped="" ref="0xb76cc230"/>
        <function-ref name="isOutput" scoped="" ref="0xb76cc310"/>
        <function-ref name="get" scoped="" ref="0xb76cc3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76cc4d0"/>
        <function-ref name="set" scoped="" ref="0xb76cc5b0"/>
        <function-ref name="clr" scoped="" ref="0xb76cc690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb76d0270" loc="85:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb76d0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76d0448"/>
        <function-ref name="isInput" scoped="" ref="0xb76d0528"/>
        <function-ref name="toggle" scoped="" ref="0xb76d0608"/>
        <function-ref name="isOutput" scoped="" ref="0xb76d06e8"/>
        <function-ref name="get" scoped="" ref="0xb76d07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76d08a8"/>
        <function-ref name="set" scoped="" ref="0xb76d0988"/>
        <function-ref name="clr" scoped="" ref="0xb76d0a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0xb76cd490" loc="90:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb76cd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76cd668"/>
        <function-ref name="isInput" scoped="" ref="0xb76cd748"/>
        <function-ref name="toggle" scoped="" ref="0xb76cd828"/>
        <function-ref name="isOutput" scoped="" ref="0xb76cd908"/>
        <function-ref name="get" scoped="" ref="0xb76cd9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb76cdac8"/>
        <function-ref name="set" scoped="" ref="0xb76cdba8"/>
        <function-ref name="clr" scoped="" ref="0xb76cdc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0xb76c37f0" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb76c37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb76c39c8"/>
        <function-ref name="disable" scoped="" ref="0xb76c3aa8"/>
        <function-ref name="captured" scoped="" ref="0xb76c3b88"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb76c3c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0xb76c3ef0" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0xb76c3ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76c50e0"/>
        <function-ref name="disable" scoped="" ref="0xb76c51c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb76c52a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb76c5380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0xb76c5618" loc="41:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb76c5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76c57f0"/>
        <function-ref name="disable" scoped="" ref="0xb76c58d0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb76c59b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb76c5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb76c2ad0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb76c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb76c2ca8"/>
        <function-ref name="disable" scoped="" ref="0xb76c2d88"/>
        <function-ref name="captured" scoped="" ref="0xb76c2e68"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb76c1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0xb76c1220" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0xb76c1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb76b8ca0"/>
        <function-ref name="test" scoped="" ref="0xb76b87b0"/>
        <function-ref name="get" scoped="" ref="0xb76c1868"/>
        <function-ref name="captured" scoped="" ref="0xb76c1d80"/>
        <function-ref name="reset" scoped="" ref="0xb76b8048"/>
        <function-ref name="isOn" scoped="" ref="0xb76b8a28"/>
        <function-ref name="set" scoped="" ref="0xb76c1ae0"/>
        <function-ref name="start" scoped="" ref="0xb76b82c0"/>
        <function-ref name="stop" scoped="" ref="0xb76b8538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb76b6ed8" loc="9:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb76b6ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76b50c0"/>
        <function-ref name="fired" scoped="" ref="0xb76b51a0"/>
        <function-ref name="disable" scoped="" ref="0xb76b5280"/>
        <function-ref name="edge" scoped="" ref="0xb76b5360"/>
        <function-ref name="enable" scoped="" ref="0xb76b5440"/>
        <function-ref name="getValue" scoped="" ref="0xb76b5520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb76b68e0" loc="8:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb76b68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76b6ab8"/>
        <function-ref name="disable" scoped="" ref="0xb76b6b98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb76b6c78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb76b6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0xb76a46f8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0xb76a46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a48d0"/>
        <function-ref name="fired" scoped="" ref="0xb76a49b0"/>
        <function-ref name="disable" scoped="" ref="0xb76a4a90"/>
        <function-ref name="edge" scoped="" ref="0xb76a4b70"/>
        <function-ref name="enable" scoped="" ref="0xb76a4c50"/>
        <function-ref name="getValue" scoped="" ref="0xb76a4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xb76a8af0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xb76a8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a8cc8"/>
        <function-ref name="fired" scoped="" ref="0xb76a8da8"/>
        <function-ref name="disable" scoped="" ref="0xb76a8e88"/>
        <function-ref name="edge" scoped="" ref="0xb76a6010"/>
        <function-ref name="enable" scoped="" ref="0xb76a60f0"/>
        <function-ref name="getValue" scoped="" ref="0xb76a61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0xb76a55d8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0xb76a55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a57b0"/>
        <function-ref name="fired" scoped="" ref="0xb76a5890"/>
        <function-ref name="disable" scoped="" ref="0xb76a5970"/>
        <function-ref name="edge" scoped="" ref="0xb76a5a50"/>
        <function-ref name="enable" scoped="" ref="0xb76a5b30"/>
        <function-ref name="getValue" scoped="" ref="0xb76a5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0xb76a3010" loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0xb76a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a31e8"/>
        <function-ref name="fired" scoped="" ref="0xb76a32c8"/>
        <function-ref name="disable" scoped="" ref="0xb76a33a8"/>
        <function-ref name="edge" scoped="" ref="0xb76a3488"/>
        <function-ref name="enable" scoped="" ref="0xb76a3568"/>
        <function-ref name="getValue" scoped="" ref="0xb76a3648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xb76a6418" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xb76a6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a65f0"/>
        <function-ref name="fired" scoped="" ref="0xb76a66d0"/>
        <function-ref name="disable" scoped="" ref="0xb76a67b0"/>
        <function-ref name="edge" scoped="" ref="0xb76a6890"/>
        <function-ref name="enable" scoped="" ref="0xb76a6970"/>
        <function-ref name="getValue" scoped="" ref="0xb76a6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0xb76a5e58" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0xb76a5e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a4050"/>
        <function-ref name="fired" scoped="" ref="0xb76a4130"/>
        <function-ref name="disable" scoped="" ref="0xb76a4210"/>
        <function-ref name="edge" scoped="" ref="0xb76a42f0"/>
        <function-ref name="enable" scoped="" ref="0xb76a43d0"/>
        <function-ref name="getValue" scoped="" ref="0xb76a44b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xb76a8270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xb76a8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a8448"/>
        <function-ref name="fired" scoped="" ref="0xb76a8528"/>
        <function-ref name="disable" scoped="" ref="0xb76a8608"/>
        <function-ref name="edge" scoped="" ref="0xb76a86e8"/>
        <function-ref name="enable" scoped="" ref="0xb76a87c8"/>
        <function-ref name="getValue" scoped="" ref="0xb76a88a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xb76a6c98" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xb76a6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a6e70"/>
        <function-ref name="fired" scoped="" ref="0xb76a5010"/>
        <function-ref name="disable" scoped="" ref="0xb76a50f0"/>
        <function-ref name="edge" scoped="" ref="0xb76a51d0"/>
        <function-ref name="enable" scoped="" ref="0xb76a52b0"/>
        <function-ref name="getValue" scoped="" ref="0xb76a5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0xb769e728" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0xb769e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769e900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0xb769f010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0xb769f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0xb769fd78" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0xb769fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0xb769eba0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0xb769eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0xb769f488" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0xb769f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0xb769e2b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0xb769e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0xb76a0b50" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0xb76a0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76a0d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0xb769f900" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0xb769f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb769fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb76a1cf0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb76a1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76a1ec8"/>
        <function-ref name="fired" scoped="" ref="0xb768e010"/>
        <function-ref name="disable" scoped="" ref="0xb768e0f0"/>
        <function-ref name="edge" scoped="" ref="0xb768e1d0"/>
        <function-ref name="enable" scoped="" ref="0xb768e2b0"/>
        <function-ref name="getValue" scoped="" ref="0xb768e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb768e510" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb768e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb768e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7682e68" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7682e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7681050"/>
        <function-ref name="fired" scoped="" ref="0xb7681130"/>
        <function-ref name="disable" scoped="" ref="0xb7681210"/>
        <function-ref name="edge" scoped="" ref="0xb76812f0"/>
        <function-ref name="enable" scoped="" ref="0xb76813d0"/>
        <function-ref name="getValue" scoped="" ref="0xb76814b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7681630" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7681630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7681808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb767f010" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb767f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb767f1e8"/>
        <function-ref name="fired" scoped="" ref="0xb767f2c8"/>
        <function-ref name="disable" scoped="" ref="0xb767f3a8"/>
        <function-ref name="edge" scoped="" ref="0xb767f488"/>
        <function-ref name="enable" scoped="" ref="0xb767f568"/>
        <function-ref name="getValue" scoped="" ref="0xb767f648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb767f7c8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb767f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb767f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb767d228" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb767d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb767d400"/>
        <function-ref name="fired" scoped="" ref="0xb767d4e0"/>
        <function-ref name="disable" scoped="" ref="0xb767d5c0"/>
        <function-ref name="edge" scoped="" ref="0xb767d6a0"/>
        <function-ref name="enable" scoped="" ref="0xb767d780"/>
        <function-ref name="getValue" scoped="" ref="0xb767d860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb767d9e0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb767d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb767dbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb767b408" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb767b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb767b5e0"/>
        <function-ref name="fired" scoped="" ref="0xb767b6c0"/>
        <function-ref name="disable" scoped="" ref="0xb767b7a0"/>
        <function-ref name="edge" scoped="" ref="0xb767b880"/>
        <function-ref name="enable" scoped="" ref="0xb767b960"/>
        <function-ref name="getValue" scoped="" ref="0xb767ba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb767bbc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb767bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb767bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb76785e8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb76785e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76787c0"/>
        <function-ref name="fired" scoped="" ref="0xb76788a0"/>
        <function-ref name="disable" scoped="" ref="0xb7678980"/>
        <function-ref name="edge" scoped="" ref="0xb7678a60"/>
        <function-ref name="enable" scoped="" ref="0xb7678b40"/>
        <function-ref name="getValue" scoped="" ref="0xb7678c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7678da0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7678da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7677010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7676840" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7676840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7676a18"/>
        <function-ref name="fired" scoped="" ref="0xb7676af8"/>
        <function-ref name="disable" scoped="" ref="0xb7676bd8"/>
        <function-ref name="edge" scoped="" ref="0xb7676cb8"/>
        <function-ref name="enable" scoped="" ref="0xb7676d98"/>
        <function-ref name="getValue" scoped="" ref="0xb7676e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7675010" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7675010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76751e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb7674a08" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb7674a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7674be0"/>
        <function-ref name="fired" scoped="" ref="0xb7674cc0"/>
        <function-ref name="disable" scoped="" ref="0xb7674da0"/>
        <function-ref name="edge" scoped="" ref="0xb7674e80"/>
        <function-ref name="enable" scoped="" ref="0xb7673010"/>
        <function-ref name="getValue" scoped="" ref="0xb76730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb7673270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb7673270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7673448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0xb766c250" loc="51:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0xb766c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb766c428"/>
        <function-ref name="isInput" scoped="" ref="0xb766c508"/>
        <function-ref name="toggle" scoped="" ref="0xb766c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb766c6c8"/>
        <function-ref name="get" scoped="" ref="0xb766c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb766c888"/>
        <function-ref name="set" scoped="" ref="0xb766c968"/>
        <function-ref name="clr" scoped="" ref="0xb766ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0xb766fb80" loc="47:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb766fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb766fd58"/>
        <function-ref name="disable" scoped="" ref="0xb766fe38"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb766ff18"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb766c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0xb766bac0" loc="69:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0xb766bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb766bc98"/>
        <function-ref name="runTask" scoped="" ref="0xb766bd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb7514880" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7514880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7514b58"/>
        <function-ref name="write" scoped="" ref="0xb7514c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb751ac38" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb751ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb751ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7517e50" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7517e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7516050"/>
        <function-ref name="write" scoped="" ref="0xb7516130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb75136a8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb75136a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7513880"/>
        <function-ref name="write" scoped="" ref="0xb7513960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb7513ae0" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb7513ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7513cb8"/>
        <function-ref name="write" scoped="" ref="0xb7513d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb750dcb8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb750dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750de90"/>
        <function-ref name="write" scoped="" ref="0xb750c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb750eb20" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb750eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750ecf8"/>
        <function-ref name="write" scoped="" ref="0xb750edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb75196c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb75196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7519898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb750e2b0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb750e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750e488"/>
        <function-ref name="write" scoped="" ref="0xb750e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb75166e8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb75166e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75168c0"/>
        <function-ref name="write" scoped="" ref="0xb75169a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7514010" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7514010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75141e8"/>
        <function-ref name="write" scoped="" ref="0xb75142c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb7511468" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb7511468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7511640"/>
        <function-ref name="write" scoped="" ref="0xb7511720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb7513f18" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb7513f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7512108"/>
        <function-ref name="write" scoped="" ref="0xb75121e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb751a070" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb751a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb751a248"/>
        <function-ref name="abortRelease" scoped="" ref="0xb751a328"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb751a408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb75184e8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb75184e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75186c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb7518840" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb7518840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7518a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb7518c18" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb7518c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7518df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb750e6e8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb750e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750e8c0"/>
        <function-ref name="write" scoped="" ref="0xb750e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb7519d70" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb7519d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7518010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7516b20" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7516b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7516cf8"/>
        <function-ref name="write" scoped="" ref="0xb7516dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb75162b0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb75162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7516488"/>
        <function-ref name="write" scoped="" ref="0xb7516568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb751a8e0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb751a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb751aab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb750d880" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb750d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750da58"/>
        <function-ref name="write" scoped="" ref="0xb750db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb750d010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb750d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750d1e8"/>
        <function-ref name="write" scoped="" ref="0xb750d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb75118a0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb75118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7511a78"/>
        <function-ref name="write" scoped="" ref="0xb7511b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb7510e38" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb7510e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750e050"/>
        <function-ref name="write" scoped="" ref="0xb750e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb75127a0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb75127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7512978"/>
        <function-ref name="write" scoped="" ref="0xb7512a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb750c190" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb750c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb750c568"/>
        <function-ref name="writeDone" scoped="" ref="0xb750c648"/>
        <function-ref name="write" scoped="" ref="0xb750c728"/>
        <function-ref name="beginRead" scoped="" ref="0xb750c808"/>
        <function-ref name="readDone" scoped="" ref="0xb750c8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb751a588" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb751a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb751a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb7517a18" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb7517a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7517bf0"/>
        <function-ref name="write" scoped="" ref="0xb7517cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb7514448" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb7514448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7514620"/>
        <function-ref name="write" scoped="" ref="0xb7514700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb7512368" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb7512368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7512540"/>
        <function-ref name="write" scoped="" ref="0xb7512620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb7514db8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb7514db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7513010"/>
        <function-ref name="write" scoped="" ref="0xb75130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb7519010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb7519010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75191e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb7513270" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7513270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7513448"/>
        <function-ref name="write" scoped="" ref="0xb7513528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb751c9a0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb751c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb751cb78"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb751cc58"/>
        <function-ref name="request" scoped="" ref="0xb751cd38"/>
        <function-ref name="granted" scoped="" ref="0xb751ce18"/>
        <function-ref name="isOwner" scoped="" ref="0xb751cef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb7517010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7517010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75171e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb75176c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb75176c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7517898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7510a00" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7510a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7510bd8"/>
        <function-ref name="write" scoped="" ref="0xb7510cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb75105c8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb75105c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75107a0"/>
        <function-ref name="write" scoped="" ref="0xb7510880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb7518190" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb7518190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7518368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb7510190" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7510190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7510368"/>
        <function-ref name="write" scoped="" ref="0xb7510448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb750d448" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb750d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb750d620"/>
        <function-ref name="write" scoped="" ref="0xb750d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb7511cd8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb7511cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7511eb0"/>
        <function-ref name="write" scoped="" ref="0xb7510010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7519368" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7519368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7519540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb7511030" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb7511030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7511208"/>
        <function-ref name="write" scoped="" ref="0xb75112e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb7519a18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb7519a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7519bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb7512bd8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb7512bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7512db0"/>
        <function-ref name="write" scoped="" ref="0xb7512e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7517368" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7517368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7517540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb750ca68" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb750ca68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb750cc40"/>
        <function-ref name="writeDone" scoped="" ref="0xb750cd20"/>
        <function-ref name="write" scoped="" ref="0xb750ce00"/>
        <function-ref name="beginRead" scoped="" ref="0xb750cee0"/>
        <function-ref name="readDone" scoped="" ref="0xb750b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb7645340" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb7645340"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb7645518"/>
        <function-ref name="writeDone" scoped="" ref="0xb76455f8"/>
        <function-ref name="write" scoped="" ref="0xb76456d8"/>
        <function-ref name="beginRead" scoped="" ref="0xb76457b8"/>
        <function-ref name="readDone" scoped="" ref="0xb7645898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb7646a90" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7646a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7646c68"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7646d48"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb7646e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb7645d88" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb7645d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7644010"/>
        <function-ref name="write" scoped="" ref="0xb76440f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb7644600" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb7644600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb76447d8"/>
        <function-ref name="write" scoped="" ref="0xb76448b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7646340" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7646340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7646518"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb76465f8"/>
        <function-ref name="request" scoped="" ref="0xb76466d8"/>
        <function-ref name="granted" scoped="" ref="0xb76467b8"/>
        <function-ref name="isOwner" scoped="" ref="0xb7646898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb7644dd8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb7644dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7642010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0xb7637dc8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb7637dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb763b010"/>
        <function-ref name="sendDone" scoped="" ref="0xb763b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0xb763fc28" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0xb763fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb763fe00"/>
        <function-ref name="writeDone" scoped="" ref="0xb763fee0"/>
        <function-ref name="write" scoped="" ref="0xb763e010"/>
        <function-ref name="beginRead" scoped="" ref="0xb763e0f0"/>
        <function-ref name="readDone" scoped="" ref="0xb763e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb76429b0" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb76429b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7642b88"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7642c68"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb7642d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb763ca88" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb763ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb763cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0xb763b308" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0xb763b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb763b4e0"/>
        <function-ref name="toIdle" scoped="" ref="0xb763b5c0"/>
        <function-ref name="isState" scoped="" ref="0xb763b6a0"/>
        <function-ref name="isIdle" scoped="" ref="0xb763b780"/>
        <function-ref name="requestState" scoped="" ref="0xb763b860"/>
        <function-ref name="forceState" scoped="" ref="0xb763b940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb763da70" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb763da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb763dc48"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb763dd28"/>
        <function-ref name="request" scoped="" ref="0xb763de08"/>
        <function-ref name="granted" scoped="" ref="0xb763dee8"/>
        <function-ref name="isOwner" scoped="" ref="0xb763c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0xb763e6a0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0xb763e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb763e878"/>
        <function-ref name="write" scoped="" ref="0xb763e958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0xb763ee48" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0xb763ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb763d050"/>
        <function-ref name="write" scoped="" ref="0xb763d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb763bab0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb763bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb763bc88"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb763bd68"/>
        <function-ref name="led1On" scoped="" ref="0xb763be48"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb763bf28"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb763a018"/>
        <function-ref name="get" scoped="" ref="0xb763a0f8"/>
        <function-ref name="led1Off" scoped="" ref="0xb763a1d8"/>
        <function-ref name="led2Off" scoped="" ref="0xb763a558"/>
        <function-ref name="set" scoped="" ref="0xb763a2b8"/>
        <function-ref name="led0On" scoped="" ref="0xb763a398"/>
        <function-ref name="led2On" scoped="" ref="0xb763a478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb763f1f8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb763f1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb763f3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb763f4b0"/>
        <function-ref name="request" scoped="" ref="0xb763f590"/>
        <function-ref name="granted" scoped="" ref="0xb763f670"/>
        <function-ref name="isOwner" scoped="" ref="0xb763f750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0xb7633818" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0xb7633818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76339f0"/>
        <function-ref name="runTask" scoped="" ref="0xb7633ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0xb763d630" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0xb763d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb763d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb75fee40" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb75fee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7601050"/>
        <function-ref name="toIdle" scoped="" ref="0xb7601130"/>
        <function-ref name="isState" scoped="" ref="0xb7601210"/>
        <function-ref name="isIdle" scoped="" ref="0xb76012f0"/>
        <function-ref name="requestState" scoped="" ref="0xb76013d0"/>
        <function-ref name="forceState" scoped="" ref="0xb76014b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb75fc100" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb75fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb75fc2d8"/>
        <function-ref name="toIdle" scoped="" ref="0xb75fc3b8"/>
        <function-ref name="isState" scoped="" ref="0xb75fc498"/>
        <function-ref name="isIdle" scoped="" ref="0xb75fc578"/>
        <function-ref name="requestState" scoped="" ref="0xb75fc658"/>
        <function-ref name="forceState" scoped="" ref="0xb75fc738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb75f9128" loc="66:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb75f9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75f9300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb75f9758" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb75f9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb75f9930"/>
        <function-ref name="toIdle" scoped="" ref="0xb75f9a10"/>
        <function-ref name="isState" scoped="" ref="0xb75f9af0"/>
        <function-ref name="isIdle" scoped="" ref="0xb75f9bd0"/>
        <function-ref name="requestState" scoped="" ref="0xb75f9cb0"/>
        <function-ref name="forceState" scoped="" ref="0xb75f9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb75fd8d8" loc="43:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75fd8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75fdab0"/>
        <function-ref name="sendDone" scoped="" ref="0xb75fdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb75fd5a0" loc="42:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75fd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75fd778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7600b70" loc="39:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7600b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7600d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7600ea8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7600ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75fd0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75fd1a0"/>
        <function-ref name="request" scoped="" ref="0xb75fd280"/>
        <function-ref name="granted" scoped="" ref="0xb75fd360"/>
        <function-ref name="isOwner" scoped="" ref="0xb75fd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb75e6648" loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75e6648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75e6820"/>
        <function-ref name="sendDone" scoped="" ref="0xb75e6900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb75ebd50" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75ebd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75ebf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb75eb9d0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb75eb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75ebba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb75e6010" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb75e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb75e61e8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb75e62c8"/>
        <function-ref name="splitRead" scoped="" ref="0xb75e63a8"/>
        <function-ref name="write" scoped="" ref="0xb75e6488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75e6d98" loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75e6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75e5010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75e50f0"/>
        <function-ref name="request" scoped="" ref="0xb75e51d0"/>
        <function-ref name="granted" scoped="" ref="0xb75e52b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75e5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb75b9860" loc="296:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb75b9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb75b9a38"/>
        <function-ref name="runTask" scoped="" ref="0xb75b9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb75e0d10" loc="94:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75e0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75e0ee8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75df010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb75dd158" loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb75dd158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75dd330"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75dd410"/>
        <function-ref name="request" scoped="" ref="0xb75dd4f0"/>
        <function-ref name="granted" scoped="" ref="0xb75dd5d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75dd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb75e0370" loc="92:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75e0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75e0548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb75e0010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb75e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75e01e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb75ce4d0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb75ce4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb75ce6a8"/>
        <function-ref name="sleep" scoped="" ref="0xb75deb10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb75ce868"/>
        <function-ref name="dataReady" scoped="" ref="0xb75debf0"/>
        <function-ref name="initMaster" scoped="" ref="0xb75cea28"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb75ceb08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb75cebe8"/>
        <function-ref name="read" scoped="" ref="0xb75cecc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb75ceda8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb75cee88"/>
        <function-ref name="setClock" scoped="" ref="0xb75de010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb75de0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb75de1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb75de330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb75de410"/>
        <function-ref name="write" scoped="" ref="0xb75de4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb75de5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb75de6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb75de790"/>
        <function-ref name="getClock" scoped="" ref="0xb75de870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb75de950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb75ce788"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb75ce948"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb75dea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb75e06f8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb75e06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb75e08d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb75e09b0"/>
        <function-ref name="splitRead" scoped="" ref="0xb75e0a90"/>
        <function-ref name="write" scoped="" ref="0xb75e0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75df488" loc="95:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75df488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75df660"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75df740"/>
        <function-ref name="request" scoped="" ref="0xb75df820"/>
        <function-ref name="granted" scoped="" ref="0xb75df900"/>
        <function-ref name="isOwner" scoped="" ref="0xb75df9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb75cb7b8" loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb75cb7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb75cb990"/>
        <function-ref name="userId" scoped="" ref="0xb75cba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb75cbc38" loc="101:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb75cbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb75cbe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb75a23d0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb75a23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb75a25a8"/>
        <function-ref name="sleep" scoped="" ref="0xb759fa30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb75a2768"/>
        <function-ref name="dataReady" scoped="" ref="0xb759fb10"/>
        <function-ref name="initMaster" scoped="" ref="0xb75a2928"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb75a2a08"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb75a2ae8"/>
        <function-ref name="read" scoped="" ref="0xb75a2bc8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb75a2ca8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb75a2d88"/>
        <function-ref name="setClock" scoped="" ref="0xb75a2e68"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb759f010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb759f0f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb759f250"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb759f330"/>
        <function-ref name="write" scoped="" ref="0xb759f410"/>
        <function-ref name="enableSpi" scoped="" ref="0xb759f4f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb759f5d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb759f6b0"/>
        <function-ref name="getClock" scoped="" ref="0xb759f790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb759f870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb75a2688"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb75a2848"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb759f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb75984a0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb75984a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7598678"/>
        <function-ref name="isInput" scoped="" ref="0xb7598758"/>
        <function-ref name="toggle" scoped="" ref="0xb7598838"/>
        <function-ref name="isOutput" scoped="" ref="0xb7598918"/>
        <function-ref name="get" scoped="" ref="0xb75989f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7598ad8"/>
        <function-ref name="set" scoped="" ref="0xb7598bb8"/>
        <function-ref name="clr" scoped="" ref="0xb7598c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb7599050" loc="79:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb7599050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7599228"/>
        <function-ref name="isInput" scoped="" ref="0xb7599308"/>
        <function-ref name="toggle" scoped="" ref="0xb75993e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb75994c8"/>
        <function-ref name="get" scoped="" ref="0xb75995a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7599688"/>
        <function-ref name="set" scoped="" ref="0xb7599768"/>
        <function-ref name="clr" scoped="" ref="0xb7599848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb7597658" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb7597658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7597830"/>
        <function-ref name="isInput" scoped="" ref="0xb7597910"/>
        <function-ref name="toggle" scoped="" ref="0xb75979f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7597ad0"/>
        <function-ref name="get" scoped="" ref="0xb7597bb0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7597c90"/>
        <function-ref name="set" scoped="" ref="0xb7597d70"/>
        <function-ref name="clr" scoped="" ref="0xb7597e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb7597198" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb7597198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7597370"/>
        <function-ref name="stop" scoped="" ref="0xb7597450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb7598ea0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb7598ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb75960c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb759e7e0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb759e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb759e9b8"/>
        <function-ref name="sleep" scoped="" ref="0xb759bdb0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb759eb78"/>
        <function-ref name="dataReady" scoped="" ref="0xb759be90"/>
        <function-ref name="initMaster" scoped="" ref="0xb759ed38"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb759ee18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb759eef8"/>
        <function-ref name="read" scoped="" ref="0xb759b010"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb759b0f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb759b1d0"/>
        <function-ref name="setClock" scoped="" ref="0xb759b2b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb759b390"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb759b470"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb759b5d0"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb759b6b0"/>
        <function-ref name="write" scoped="" ref="0xb759b790"/>
        <function-ref name="enableSpi" scoped="" ref="0xb759b870"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb759b950"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb759ba30"/>
        <function-ref name="getClock" scoped="" ref="0xb759bb10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb759bbf0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb759ea98"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb759ec58"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb759bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb7599a38" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb7599a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7599c10"/>
        <function-ref name="isInput" scoped="" ref="0xb7599cf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7599dd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7599eb0"/>
        <function-ref name="get" scoped="" ref="0xb7598010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75980f0"/>
        <function-ref name="set" scoped="" ref="0xb75981d0"/>
        <function-ref name="clr" scoped="" ref="0xb75982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb756e8b0" loc="86:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb756e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb756ea98"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb756eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb7538208" loc="89:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb7538208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb75383f0"/>
        <function-ref name="configure" scoped="" ref="0xb75384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb756e170" loc="85:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb756e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb756e358"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb756e438"/>
        <function-ref name="request" scoped="" ref="0xb756e518"/>
        <function-ref name="granted" scoped="" ref="0xb756e5f8"/>
        <function-ref name="isOwner" scoped="" ref="0xb756e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb756ecb8" loc="87:/opt/tinyos-main-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb756ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb756ee90"/>
        <function-ref name="userId" scoped="" ref="0xb7538010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6fb3df0" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6fb3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6fb1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb6fb1170" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb6fb1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6fb1348"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6fb1428"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6fb1508"/>
        <function-ref name="dequeue" scoped="" ref="0xb6fb15e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6faf8c0" loc="52:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6faf8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6fafaa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6fafb88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6fae218" loc="56:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6fae218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6fae400"/>
        <function-ref name="configure" scoped="" ref="0xb6fae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6fae640" loc="57:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6fae640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6fae818"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6fae8f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6fae9d8"/>
        <function-ref name="dequeue" scoped="" ref="0xb6faeab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6faf180" loc="51:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6faf180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6faf368"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6faf448"/>
        <function-ref name="request" scoped="" ref="0xb6faf528"/>
        <function-ref name="granted" scoped="" ref="0xb6faf608"/>
        <function-ref name="isOwner" scoped="" ref="0xb6faf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6fafcc8" loc="53:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6fafcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6fafea0"/>
        <function-ref name="userId" scoped="" ref="0xb6fae010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb6faec38" loc="69:/opt/tinyos-main-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb6faec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6faee10"/>
        <function-ref name="runTask" scoped="" ref="0xb6faeef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb7533800" loc="45:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb7533800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75339d8"/>
        <function-ref name="isInput" scoped="" ref="0xb7533ab8"/>
        <function-ref name="toggle" scoped="" ref="0xb7533b98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7533c78"/>
        <function-ref name="get" scoped="" ref="0xb7533d58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7533e38"/>
        <function-ref name="set" scoped="" ref="0xb7533f18"/>
        <function-ref name="clr" scoped="" ref="0xb7532010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75368e8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75368e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7536ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7536ba0"/>
        <function-ref name="request" scoped="" ref="0xb7536c80"/>
        <function-ref name="granted" scoped="" ref="0xb7536d60"/>
        <function-ref name="isOwner" scoped="" ref="0xb7536e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0xb75330d0" loc="44:/opt/tinyos-main-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0xb75330d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75332a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7533388"/>
        <function-ref name="request" scoped="" ref="0xb7533468"/>
        <function-ref name="granted" scoped="" ref="0xb7533548"/>
        <function-ref name="isOwner" scoped="" ref="0xb7533628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb74ff5c8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb74ff5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff8a0"/>
        <function-ref name="write" scoped="" ref="0xb74ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb7505920" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb7505920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7505af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7501af8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7501af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7501cd0"/>
        <function-ref name="write" scoped="" ref="0xb7501db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb74fe448" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74fe448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fe620"/>
        <function-ref name="write" scoped="" ref="0xb74fe700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb74fe880" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb74fe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fea58"/>
        <function-ref name="write" scoped="" ref="0xb74feb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb74f8b20" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb74f8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f8cf8"/>
        <function-ref name="write" scoped="" ref="0xb74f8dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb74f9a00" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74f9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f9bd8"/>
        <function-ref name="write" scoped="" ref="0xb74f9cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb7504368" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb7504368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7504540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb74f9190" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74f9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f9368"/>
        <function-ref name="write" scoped="" ref="0xb74f9448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb7500448" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb7500448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7500620"/>
        <function-ref name="write" scoped="" ref="0xb7500700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7500cb8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7500cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7500e90"/>
        <function-ref name="write" scoped="" ref="0xb74ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb74fb2b0" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb74fb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fb488"/>
        <function-ref name="write" scoped="" ref="0xb74fb568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb74fecb8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb74fecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fee90"/>
        <function-ref name="write" scoped="" ref="0xb74fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb7506c78" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb7506c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb7506e50"/>
        <function-ref name="abortRelease" scoped="" ref="0xb7505010"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb75050f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb7502190" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb7502190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7502368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb75024e8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb75024e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7502740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb75028c0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb75028c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7502a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb74f95c8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74f95c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f97a0"/>
        <function-ref name="write" scoped="" ref="0xb74f9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb7504a18" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb7504a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7504bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7500880" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7500880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7500a58"/>
        <function-ref name="write" scoped="" ref="0xb7500b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb7500010" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb7500010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb75001e8"/>
        <function-ref name="write" scoped="" ref="0xb75002c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb75055c8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb75055c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75057a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb74f86e8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb74f86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f88c0"/>
        <function-ref name="write" scoped="" ref="0xb74f89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb74f9e38" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74f9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f8050"/>
        <function-ref name="write" scoped="" ref="0xb74f8130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb74fb6e8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb74fb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fb8c0"/>
        <function-ref name="write" scoped="" ref="0xb74fb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb74facb8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb74facb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fae90"/>
        <function-ref name="write" scoped="" ref="0xb74f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb74fc5c8" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb74fc5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fc7a0"/>
        <function-ref name="write" scoped="" ref="0xb74fc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb74f6010" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb74f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74f63e8"/>
        <function-ref name="writeDone" scoped="" ref="0xb74f64c8"/>
        <function-ref name="write" scoped="" ref="0xb74f65a8"/>
        <function-ref name="beginRead" scoped="" ref="0xb74f6688"/>
        <function-ref name="readDone" scoped="" ref="0xb74f6768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb7505270" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb7505270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7505448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb75016c0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb75016c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7501898"/>
        <function-ref name="write" scoped="" ref="0xb7501978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb74ff190" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb74ff190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ff368"/>
        <function-ref name="write" scoped="" ref="0xb74ff448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb74fc190" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb74fc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fc368"/>
        <function-ref name="write" scoped="" ref="0xb74fc448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb74ffb00" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb74ffb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ffcd8"/>
        <function-ref name="write" scoped="" ref="0xb74ffdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb7505c78" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb7505c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7505e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb74fe010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb74fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fe1e8"/>
        <function-ref name="write" scoped="" ref="0xb74fe2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb75065c0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb75065c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7506798"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7506878"/>
        <function-ref name="request" scoped="" ref="0xb7506958"/>
        <function-ref name="granted" scoped="" ref="0xb7506a38"/>
        <function-ref name="isOwner" scoped="" ref="0xb7506b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb7502c18" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7502c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7502df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb7501368" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb7501368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7501540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb74fa880" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb74fa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74faa58"/>
        <function-ref name="write" scoped="" ref="0xb74fab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb74fa448" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb74fa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fa620"/>
        <function-ref name="write" scoped="" ref="0xb74fa700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb7504d70" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb7504d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7502010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb74fa010" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb74fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fa1e8"/>
        <function-ref name="write" scoped="" ref="0xb74fa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb74f82b0" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb74f82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74f8488"/>
        <function-ref name="write" scoped="" ref="0xb74f8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb74fbb20" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb74fbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fbcf8"/>
        <function-ref name="write" scoped="" ref="0xb74fbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb7504010" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb7504010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75041e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb74fce38" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb74fce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fb050"/>
        <function-ref name="write" scoped="" ref="0xb74fb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb75046c0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb75046c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7504898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb74fca00" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb74fca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74fcbd8"/>
        <function-ref name="write" scoped="" ref="0xb74fccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7501010" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7501010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb75011e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb74f68e8" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb74f68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74f6ac0"/>
        <function-ref name="writeDone" scoped="" ref="0xb74f6ba0"/>
        <function-ref name="write" scoped="" ref="0xb74f6c80"/>
        <function-ref name="beginRead" scoped="" ref="0xb74f6d60"/>
        <function-ref name="readDone" scoped="" ref="0xb74f6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb74ece38" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb74ece38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74eb208"/>
        <function-ref name="write" scoped="" ref="0xb74eb2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb74f1368" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb74f1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f1540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb74ed4b8" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb74ed4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ed690"/>
        <function-ref name="write" scoped="" ref="0xb74ed770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb74ebcd8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74ebcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ebeb0"/>
        <function-ref name="write" scoped="" ref="0xb74ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb74ea190" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb74ea190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ea368"/>
        <function-ref name="write" scoped="" ref="0xb74ea448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb74e4448" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb74e4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e4620"/>
        <function-ref name="write" scoped="" ref="0xb74e4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb74e52b0" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74e52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e5488"/>
        <function-ref name="write" scoped="" ref="0xb74e5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb74f1d70" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb74f1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb74e6a00" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74e6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e6bd8"/>
        <function-ref name="write" scoped="" ref="0xb74e6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb74edd28" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb74edd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74edf00"/>
        <function-ref name="write" scoped="" ref="0xb74ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb74ec5c8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb74ec5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ec7a0"/>
        <function-ref name="write" scoped="" ref="0xb74ec880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb74e9b20" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb74e9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e9cf8"/>
        <function-ref name="write" scoped="" ref="0xb74e9dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb74ea5c8" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb74ea5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ea7a0"/>
        <function-ref name="write" scoped="" ref="0xb74ea880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb74f26c8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb74f26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb74f28a0"/>
        <function-ref name="abortRelease" scoped="" ref="0xb74f2980"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb74f2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb74f0b98" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb74f0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb74f0ef0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb74f0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74ef188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb74ef308" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb74ef308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74ef4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb74e6e38" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74e6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e5050"/>
        <function-ref name="write" scoped="" ref="0xb74e5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb74f04e8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb74f04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb74ec190" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb74ec190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ec368"/>
        <function-ref name="write" scoped="" ref="0xb74ec448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb74ed8f0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb74ed8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74edac8"/>
        <function-ref name="write" scoped="" ref="0xb74edba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb74f1010" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb74f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb74e4010" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb74e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e41e8"/>
        <function-ref name="write" scoped="" ref="0xb74e42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb74e56e8" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74e56e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e58c0"/>
        <function-ref name="write" scoped="" ref="0xb74e59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb74e8010" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb74e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e81e8"/>
        <function-ref name="write" scoped="" ref="0xb74e82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb74e65c8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb74e65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e67a0"/>
        <function-ref name="write" scoped="" ref="0xb74e6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb74eae38" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb74eae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e9050"/>
        <function-ref name="write" scoped="" ref="0xb74e9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb74e4880" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb74e4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74e4c58"/>
        <function-ref name="writeDone" scoped="" ref="0xb74e4d38"/>
        <function-ref name="write" scoped="" ref="0xb74e4e18"/>
        <function-ref name="beginRead" scoped="" ref="0xb74e4ef8"/>
        <function-ref name="readDone" scoped="" ref="0xb74e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb74f2be0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb74f2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb74ed080" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb74ed080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ed258"/>
        <function-ref name="write" scoped="" ref="0xb74ed338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb74eca00" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb74eca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74ecbd8"/>
        <function-ref name="write" scoped="" ref="0xb74eccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb74eaa00" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb74eaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74eabd8"/>
        <function-ref name="write" scoped="" ref="0xb74eacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb74eb468" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb74eb468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74eb640"/>
        <function-ref name="write" scoped="" ref="0xb74eb720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb74f16c0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb74f16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb74eb8a0" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb74eb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74eba78"/>
        <function-ref name="write" scoped="" ref="0xb74ebb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb74f2010" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb74f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74f21e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74f22c8"/>
        <function-ref name="request" scoped="" ref="0xb74f23a8"/>
        <function-ref name="granted" scoped="" ref="0xb74f2488"/>
        <function-ref name="isOwner" scoped="" ref="0xb74f2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb74ef660" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb74ef660"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74ef838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb74efd10" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb74efd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74efee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb74e6190" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb74e6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e6368"/>
        <function-ref name="write" scoped="" ref="0xb74e6448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb74e8cb8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb74e8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e8e90"/>
        <function-ref name="write" scoped="" ref="0xb74e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb74f0840" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb74f0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb74e8880" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb74e8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e8a58"/>
        <function-ref name="write" scoped="" ref="0xb74e8b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb74e5b20" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb74e5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e5cf8"/>
        <function-ref name="write" scoped="" ref="0xb74e5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb74e8448" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb74e8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e8620"/>
        <function-ref name="write" scoped="" ref="0xb74e8700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb74f1a18" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb74f1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb74e96e8" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb74e96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e98c0"/>
        <function-ref name="write" scoped="" ref="0xb74e99a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb74f0190" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb74f0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74f0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb74e92b0" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb74e92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74e9488"/>
        <function-ref name="write" scoped="" ref="0xb74e9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb74ef9b8" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb74ef9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb74e3190" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb74e3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74e3368"/>
        <function-ref name="writeDone" scoped="" ref="0xb74e3448"/>
        <function-ref name="write" scoped="" ref="0xb74e3528"/>
        <function-ref name="beginRead" scoped="" ref="0xb74e3608"/>
        <function-ref name="readDone" scoped="" ref="0xb74e36e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb74e0970" loc="54:/opt/tinyos-main-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb74e0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb74e0b48"/>
        <function-ref name="changed" scoped="" ref="0xb74e0c28"/>
        <function-ref name="amGroup" scoped="" ref="0xb74e0d08"/>
        <function-ref name="setAddress" scoped="" ref="0xb74e0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0xb74d41e8" loc="40:/opt/tinyos-main-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0xb74d41e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0xb74d43c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb74ca808" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb74ca808"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb74ca9e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb74caac0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb74caba0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb74cac80"/>
        <function-ref name="setCca" scoped="" ref="0xb74cad60"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb74cae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb74c98e0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb74c98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74c9ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0xb74ca0f0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0xb74ca0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74ca2c8"/>
        <function-ref name="cancel" scoped="" ref="0xb74ca3a8"/>
        <function-ref name="modify" scoped="" ref="0xb74ca488"/>
        <function-ref name="sendDone" scoped="" ref="0xb74ca568"/>
        <function-ref name="resend" scoped="" ref="0xb74ca648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb74cdc10" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb74cdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74cdde8"/>
        <function-ref name="stop" scoped="" ref="0xb74cdec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb74c9d48" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb74c9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74c9f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb74b3570" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb74b3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb74b3748"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb74b3828"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb74b3908"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb74b39e8"/>
        <function-ref name="setCca" scoped="" ref="0xb74b3ac8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb74b3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb74af2b0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb74af2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74afdb0"/>
        <function-ref name="clear" scoped="" ref="0xb74ad170"/>
        <function-ref name="isValid" scoped="" ref="0xb74afa00"/>
        <function-ref name="set" scoped="" ref="0xb74ad520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb74a3d70" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74a3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a2010"/>
        <function-ref name="write" scoped="" ref="0xb74a20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb74a2300" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb74a2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a24d8"/>
        <function-ref name="write" scoped="" ref="0xb74a25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0xb74b3e68" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0xb74b3e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74b2050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0xb74a4598" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb74a4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74a4770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0xb74a6840" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0xb74a6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb74a6a18"/>
        <function-ref name="disable" scoped="" ref="0xb74a6af8"/>
        <function-ref name="captured" scoped="" ref="0xb74a6bd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb74a6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0xb74b28c8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0xb74b28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb74b1d90"/>
        <function-ref name="fired" scoped="" ref="0xb74b1560"/>
        <function-ref name="startAt" scoped="" ref="0xb74b1a50"/>
        <function-ref name="isRunning" scoped="" ref="0xb74b17d8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb74b0048"/>
        <function-ref name="start" scoped="" ref="0xb74b1048"/>
        <function-ref name="stop" scoped="" ref="0xb74b12e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb74b02f8" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb74b02f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb74b04d0"/>
        <function-ref name="setNetwork" scoped="" ref="0xb74b05b0"/>
        <function-ref name="getRssi" scoped="" ref="0xb74b0690"/>
        <function-ref name="getNetwork" scoped="" ref="0xb74b0770"/>
        <function-ref name="getPower" scoped="" ref="0xb74b0850"/>
        <function-ref name="getLqi" scoped="" ref="0xb74b0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0xb74a5338" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74a5338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a5510"/>
        <function-ref name="write" scoped="" ref="0xb74a55f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0xb74a5840" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb74a5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a5a18"/>
        <function-ref name="write" scoped="" ref="0xb74a5af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0xb749da60" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb749da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb749dc38"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb749dd18"/>
        <function-ref name="sfd" scoped="" ref="0xb749ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb74b5d88" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb74b5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74b3010"/>
        <function-ref name="cancel" scoped="" ref="0xb74b30f0"/>
        <function-ref name="modify" scoped="" ref="0xb74b31d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb74b32b0"/>
        <function-ref name="resend" scoped="" ref="0xb74b3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0xb74a7588" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb74a7588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb74a7760"/>
        <function-ref name="abortRelease" scoped="" ref="0xb74a7840"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb74a7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0xb74a49c8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb74a49c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74a4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb74ac9a8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb74ac9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74acb80"/>
        <function-ref name="isInput" scoped="" ref="0xb74acc60"/>
        <function-ref name="toggle" scoped="" ref="0xb74acd40"/>
        <function-ref name="isOutput" scoped="" ref="0xb74ace20"/>
        <function-ref name="get" scoped="" ref="0xb74acf00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74ab010"/>
        <function-ref name="set" scoped="" ref="0xb74ab0f0"/>
        <function-ref name="clr" scoped="" ref="0xb74ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74b54f0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74b54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74b56c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb74b0b38" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb74b0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb74b0d10"/>
        <function-ref name="getHeader" scoped="" ref="0xb74b0df0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb74b0ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb74a6170" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb74a6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb74a6348"/>
        <function-ref name="isSet" scoped="" ref="0xb74a6428"/>
        <function-ref name="cancel" scoped="" ref="0xb74a6508"/>
        <function-ref name="set" scoped="" ref="0xb74a65e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0xb74a4e08" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb74a4e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a30f0"/>
        <function-ref name="write" scoped="" ref="0xb74a31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb74abe10" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb74abe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb74a7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb74a70f0"/>
        <function-ref name="request" scoped="" ref="0xb74a71d0"/>
        <function-ref name="granted" scoped="" ref="0xb74a72b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb74a7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0xb74a6eb8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0xb74a6eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74ac188"/>
        <function-ref name="isInput" scoped="" ref="0xb74ac268"/>
        <function-ref name="toggle" scoped="" ref="0xb74ac348"/>
        <function-ref name="isOutput" scoped="" ref="0xb74ac428"/>
        <function-ref name="get" scoped="" ref="0xb74ac508"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74ac5e8"/>
        <function-ref name="set" scoped="" ref="0xb74ac6c8"/>
        <function-ref name="clr" scoped="" ref="0xb74ac7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb74a27c8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74a27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a29a0"/>
        <function-ref name="write" scoped="" ref="0xb74a2a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0xb74a2ca8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb74a2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a2e80"/>
        <function-ref name="write" scoped="" ref="0xb74a0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb74a5d28" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb74a5d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74a5f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0xb74ab3d0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0xb74ab3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74ab5a8"/>
        <function-ref name="isInput" scoped="" ref="0xb74ab688"/>
        <function-ref name="toggle" scoped="" ref="0xb74ab768"/>
        <function-ref name="isOutput" scoped="" ref="0xb74ab848"/>
        <function-ref name="get" scoped="" ref="0xb74ab928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74aba08"/>
        <function-ref name="set" scoped="" ref="0xb74abae8"/>
        <function-ref name="clr" scoped="" ref="0xb74abbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb749f010" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb749f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb749f1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb749f2c8"/>
        <function-ref name="led1On" scoped="" ref="0xb749f3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb749f488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb749f568"/>
        <function-ref name="get" scoped="" ref="0xb749f648"/>
        <function-ref name="led1Off" scoped="" ref="0xb749f728"/>
        <function-ref name="led2Off" scoped="" ref="0xb749faa8"/>
        <function-ref name="set" scoped="" ref="0xb749f808"/>
        <function-ref name="led0On" scoped="" ref="0xb749f8e8"/>
        <function-ref name="led2On" scoped="" ref="0xb749f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb74a3850" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb74a3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74a3a28"/>
        <function-ref name="write" scoped="" ref="0xb74a3b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb74b5890" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb74b5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74b5a68"/>
        <function-ref name="stop" scoped="" ref="0xb74b5b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0xb74a7b48" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb74a7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb74a7d20"/>
        <function-ref name="writeDone" scoped="" ref="0xb74a7e00"/>
        <function-ref name="write" scoped="" ref="0xb74a7ee0"/>
        <function-ref name="beginRead" scoped="" ref="0xb74a5010"/>
        <function-ref name="readDone" scoped="" ref="0xb74a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0xb74a4168" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb74a4168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74a4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0xb74a3410" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb74a3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74a35e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0xb74b2300" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0xb74b2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb74b24d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb7446880" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb7446880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7446b58"/>
        <function-ref name="write" scoped="" ref="0xb7446c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb744cbf8" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb744cbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb7448e50" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb7448e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7447050"/>
        <function-ref name="write" scoped="" ref="0xb7447130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb74456a8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb74456a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7445880"/>
        <function-ref name="write" scoped="" ref="0xb7445960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb7445ae0" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb7445ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7445cb8"/>
        <function-ref name="write" scoped="" ref="0xb7445d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb743fcb8" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb743fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb743fe90"/>
        <function-ref name="write" scoped="" ref="0xb743e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb7440b20" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7440b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7440cf8"/>
        <function-ref name="write" scoped="" ref="0xb7440dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb744b6c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb744b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb74402b0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb74402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7440488"/>
        <function-ref name="write" scoped="" ref="0xb7440568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb74476e8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb74476e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74478c0"/>
        <function-ref name="write" scoped="" ref="0xb74479a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb7446010" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb7446010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74461e8"/>
        <function-ref name="write" scoped="" ref="0xb74462c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb7442468" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb7442468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7442640"/>
        <function-ref name="write" scoped="" ref="0xb7442720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb7445f18" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb7445f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7444108"/>
        <function-ref name="write" scoped="" ref="0xb74441e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb744c030" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb744c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb744c208"/>
        <function-ref name="abortRelease" scoped="" ref="0xb744c2e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb744c3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb744a4e8" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb744a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb744a840" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb744a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb744ac18" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb744ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb74406e8" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb74406e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74408c0"/>
        <function-ref name="write" scoped="" ref="0xb74409a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb744bd70" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb744bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb7447b20" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb7447b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7447cf8"/>
        <function-ref name="write" scoped="" ref="0xb7447dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb74472b0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb74472b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7447488"/>
        <function-ref name="write" scoped="" ref="0xb7447568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb744c8a0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb744c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744ca78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb743f880" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb743f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb743fa58"/>
        <function-ref name="write" scoped="" ref="0xb743fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb743f010" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb743f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb743f1e8"/>
        <function-ref name="write" scoped="" ref="0xb743f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb74428a0" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb74428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7442a78"/>
        <function-ref name="write" scoped="" ref="0xb7442b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb7441e38" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb7441e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7440050"/>
        <function-ref name="write" scoped="" ref="0xb7440130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb74447a0" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb74447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7444978"/>
        <function-ref name="write" scoped="" ref="0xb7444a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb743e190" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb743e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb743e568"/>
        <function-ref name="writeDone" scoped="" ref="0xb743e648"/>
        <function-ref name="write" scoped="" ref="0xb743e728"/>
        <function-ref name="beginRead" scoped="" ref="0xb743e808"/>
        <function-ref name="readDone" scoped="" ref="0xb743e8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb744c548" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb744c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb7448a18" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb7448a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7448bf0"/>
        <function-ref name="write" scoped="" ref="0xb7448cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb7446448" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb7446448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7446620"/>
        <function-ref name="write" scoped="" ref="0xb7446700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb7444368" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb7444368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7444540"/>
        <function-ref name="write" scoped="" ref="0xb7444620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb7446db8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb7446db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7445010"/>
        <function-ref name="write" scoped="" ref="0xb74450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb744b010" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb744b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb7445270" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7445270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7445448"/>
        <function-ref name="write" scoped="" ref="0xb7445528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb744d950" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb744d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb744db28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb744dc08"/>
        <function-ref name="request" scoped="" ref="0xb744dce8"/>
        <function-ref name="granted" scoped="" ref="0xb744ddc8"/>
        <function-ref name="isOwner" scoped="" ref="0xb744dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb7448010" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7448010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74481e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb74486c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb74486c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7448898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7441a00" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7441a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7441bd8"/>
        <function-ref name="write" scoped="" ref="0xb7441cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb74415c8" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb74415c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74417a0"/>
        <function-ref name="write" scoped="" ref="0xb7441880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb744a190" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb744a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb7441190" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb7441190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7441368"/>
        <function-ref name="write" scoped="" ref="0xb7441448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb743f448" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb743f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb743f620"/>
        <function-ref name="write" scoped="" ref="0xb743f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb7442cd8" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb7442cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7442eb0"/>
        <function-ref name="write" scoped="" ref="0xb7441010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb744b368" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb744b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb7442030" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb7442030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7442208"/>
        <function-ref name="write" scoped="" ref="0xb74422e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb744ba18" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb744ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb744bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb7444bd8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb7444bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7444db0"/>
        <function-ref name="write" scoped="" ref="0xb7444e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb7448368" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb7448368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7448540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb743ea68" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb743ea68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb743ec40"/>
        <function-ref name="writeDone" scoped="" ref="0xb743ed20"/>
        <function-ref name="write" scoped="" ref="0xb743ee00"/>
        <function-ref name="beginRead" scoped="" ref="0xb743eee0"/>
        <function-ref name="readDone" scoped="" ref="0xb743d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb7438ce0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb7438ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7438eb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb7434010"/>
        <function-ref name="sfd" scoped="" ref="0xb74340f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7434298" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7434298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7434470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb7434730" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb7434730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7434908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7438840" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7438840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7438a18"/>
        <function-ref name="stop" scoped="" ref="0xb7438af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0xb742f4c0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0xb742f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb742f698"/>
        <function-ref name="isInput" scoped="" ref="0xb742f778"/>
        <function-ref name="toggle" scoped="" ref="0xb742f858"/>
        <function-ref name="isOutput" scoped="" ref="0xb742f938"/>
        <function-ref name="get" scoped="" ref="0xb742fa18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb742faf8"/>
        <function-ref name="set" scoped="" ref="0xb742fbd8"/>
        <function-ref name="clr" scoped="" ref="0xb742fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb742b680" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb742b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb742b858"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb742b938"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb742ba18"/>
        <function-ref name="syncDone" scoped="" ref="0xb742baf8"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb742bbd8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb742bcb8"/>
        <function-ref name="setChannel" scoped="" ref="0xb742bd98"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb742be78"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb742a010"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb742a0f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb742a1d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb742a2b0"/>
        <function-ref name="sync" scoped="" ref="0xb742a390"/>
        <function-ref name="getChannel" scoped="" ref="0xb742a4f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb742a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0xb741eb88" loc="148:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0xb741eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb741ed60"/>
        <function-ref name="runTask" scoped="" ref="0xb741ee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb742a980" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb742a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74294a8"/>
        <function-ref name="clear" scoped="" ref="0xb7429858"/>
        <function-ref name="isValid" scoped="" ref="0xb74290f8"/>
        <function-ref name="set" scoped="" ref="0xb7429c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0xb742fed0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0xb742fed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb742e0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb742e1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb742e280"/>
        <function-ref name="isOutput" scoped="" ref="0xb742e360"/>
        <function-ref name="get" scoped="" ref="0xb742e440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb742e520"/>
        <function-ref name="set" scoped="" ref="0xb742e600"/>
        <function-ref name="clr" scoped="" ref="0xb742e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0xb7427aa0" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb7427aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7427c78"/>
        <function-ref name="write" scoped="" ref="0xb7427d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0xb7426010" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7426010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74261e8"/>
        <function-ref name="write" scoped="" ref="0xb74262c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0xb74269b8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb74269b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7426b90"/>
        <function-ref name="write" scoped="" ref="0xb7426c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb742c878" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb742c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb742ca50"/>
        <function-ref name="setNetwork" scoped="" ref="0xb742cb30"/>
        <function-ref name="getRssi" scoped="" ref="0xb742cc10"/>
        <function-ref name="getNetwork" scoped="" ref="0xb742ccf0"/>
        <function-ref name="getPower" scoped="" ref="0xb742cdd0"/>
        <function-ref name="getLqi" scoped="" ref="0xb742ceb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0xb7431c70" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0xb7431c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7431e48"/>
        <function-ref name="sfd_dropped" scoped="" ref="0xb7431f28"/>
        <function-ref name="sfd" scoped="" ref="0xb7430018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0xb742c010" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb742c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb742c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0xb7430a30" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0xb7430a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7430c08"/>
        <function-ref name="isInput" scoped="" ref="0xb7430ce8"/>
        <function-ref name="toggle" scoped="" ref="0xb7430dc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7430ea8"/>
        <function-ref name="get" scoped="" ref="0xb742f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb742f0f0"/>
        <function-ref name="set" scoped="" ref="0xb742f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb742f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0xb7426eb8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7426eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74250c0"/>
        <function-ref name="write" scoped="" ref="0xb74251a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7431430" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7431430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7431608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb742b108" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb742b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb742b2e0"/>
        <function-ref name="getHeader" scoped="" ref="0xb742b3c0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb742b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb74301c0" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb74301c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7430398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb742d0a0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb742d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb742d278"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb742d358"/>
        <function-ref name="request" scoped="" ref="0xb742d438"/>
        <function-ref name="granted" scoped="" ref="0xb742d518"/>
        <function-ref name="isOwner" scoped="" ref="0xb742d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0xb74264d8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb74264d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb74266b0"/>
        <function-ref name="write" scoped="" ref="0xb7426790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0xb742d820" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb742d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb742d9f8"/>
        <function-ref name="writeDone" scoped="" ref="0xb742dad8"/>
        <function-ref name="write" scoped="" ref="0xb742dbb8"/>
        <function-ref name="beginRead" scoped="" ref="0xb742dc98"/>
        <function-ref name="readDone" scoped="" ref="0xb742dd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0xb74253d0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb74253d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb74256a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0xb7430658" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0xb7430658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0xb7430830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7425838" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7425838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7425a10"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7425af0"/>
        <function-ref name="led1On" scoped="" ref="0xb7425bd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7425cb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7425d90"/>
        <function-ref name="get" scoped="" ref="0xb7425e70"/>
        <function-ref name="led1Off" scoped="" ref="0xb7424010"/>
        <function-ref name="led2Off" scoped="" ref="0xb7424390"/>
        <function-ref name="set" scoped="" ref="0xb74240f0"/>
        <function-ref name="led0On" scoped="" ref="0xb74241d0"/>
        <function-ref name="led2On" scoped="" ref="0xb74242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0xb7427580" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb7427580"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7427758"/>
        <function-ref name="write" scoped="" ref="0xb7427838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0xb7427140" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb7427140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb7427318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0xb742e978" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0xb742e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb742eb50"/>
        <function-ref name="disable" scoped="" ref="0xb742ec30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb742ed10"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb742edf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0xb742c440" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb742c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb742c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb74317d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb74317d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb74319a8"/>
        <function-ref name="stop" scoped="" ref="0xb7431a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb73e6060" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb73e6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb73e6238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb73eaba0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb73eaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb73ead78"/>
        <function-ref name="setNetwork" scoped="" ref="0xb73eae58"/>
        <function-ref name="getRssi" scoped="" ref="0xb73e7010"/>
        <function-ref name="getNetwork" scoped="" ref="0xb73e70f0"/>
        <function-ref name="getPower" scoped="" ref="0xb73e71d0"/>
        <function-ref name="getLqi" scoped="" ref="0xb73e72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb73e66b8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73e66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb73e51d8"/>
        <function-ref name="clear" scoped="" ref="0xb73e5588"/>
        <function-ref name="isValid" scoped="" ref="0xb73e6e08"/>
        <function-ref name="set" scoped="" ref="0xb73e5938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb73e7aa0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73e7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb73e7c78"/>
        <function-ref name="getHeader" scoped="" ref="0xb73e7d58"/>
        <function-ref name="getMetadata" scoped="" ref="0xb73e7e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb73e2888" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb73e2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73e2a60"/>
        <function-ref name="isSet" scoped="" ref="0xb73e2b40"/>
        <function-ref name="cancel" scoped="" ref="0xb73e2c20"/>
        <function-ref name="set" scoped="" ref="0xb73e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb73e3100" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb73e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb73e3c00"/>
        <function-ref name="clear" scoped="" ref="0xb73e2010"/>
        <function-ref name="isValid" scoped="" ref="0xb73e3850"/>
        <function-ref name="set" scoped="" ref="0xb73e23c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb73e7520" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb73e7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb73e76f8"/>
        <function-ref name="noAck" scoped="" ref="0xb73e77d8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb73e78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb73dea40" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb73dea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb73dec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0xb73e1668" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb73e1668"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb73e1840"/>
        <function-ref name="setNetwork" scoped="" ref="0xb73e1920"/>
        <function-ref name="getRssi" scoped="" ref="0xb73e1a00"/>
        <function-ref name="getNetwork" scoped="" ref="0xb73e1ae0"/>
        <function-ref name="getPower" scoped="" ref="0xb73e1bc0"/>
        <function-ref name="getLqi" scoped="" ref="0xb73e1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb73d8930" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb73d8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb73d8b08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb73d8be8"/>
        <function-ref name="getPayload" scoped="" ref="0xb73d8cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb73d8da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb73d8e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0xb73dd100" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0xb73dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb73ddc00"/>
        <function-ref name="clear" scoped="" ref="0xb73db010"/>
        <function-ref name="isValid" scoped="" ref="0xb73dd850"/>
        <function-ref name="set" scoped="" ref="0xb73db3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0xb73de4b0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73de4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb73de688"/>
        <function-ref name="getHeader" scoped="" ref="0xb73de768"/>
        <function-ref name="getMetadata" scoped="" ref="0xb73de848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb73d8308" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb73d8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73d84e0"/>
        <function-ref name="isSet" scoped="" ref="0xb73d85c0"/>
        <function-ref name="cancel" scoped="" ref="0xb73d86a0"/>
        <function-ref name="set" scoped="" ref="0xb73d8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0xb73d71e0" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0xb73d71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73d7828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb73d7c38" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb73d7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73d6298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb73dbaf8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb73dbaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb73da6b8"/>
        <function-ref name="clear" scoped="" ref="0xb73daa68"/>
        <function-ref name="isValid" scoped="" ref="0xb73da308"/>
        <function-ref name="set" scoped="" ref="0xb73dae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb73e1f10" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb73e1f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb73de108"/>
        <function-ref name="noAck" scoped="" ref="0xb73de1e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb73de2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb73a95d8" loc="48:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb73a95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73a9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb73a8010" loc="49:/opt/tinyos-main-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb73a8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdcd40"/>
            <typename><typedef-ref name="T32khz" ref="0xb7bdcf08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb73a8760"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb73a8c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb73a89d8"/>
        <function-ref name="overflow" scoped="" ref="0xb73a8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb73a6378" loc="45:/opt/tinyos-main-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb73a6378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7bdc900"/>
            <typename><typedef-ref name="TMilli" ref="0xb7bdcac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb73a5e58"/>
        <function-ref name="fired" scoped="" ref="0xb73a5110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb73a5818"/>
        <function-ref name="isOneShot" scoped="" ref="0xb73a55c0"/>
        <function-ref name="getdt" scoped="" ref="0xb73a3348"/>
        <function-ref name="gett0" scoped="" ref="0xb73a30f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb73a5368"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb73a69a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb73a5b38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb73a6c20"/>
        <function-ref name="stop" scoped="" ref="0xb73a6ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0xb739cbd8" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0xb739cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739ceb0"/>
        <function-ref name="write" scoped="" ref="0xb739b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0xb73a1190" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0xb73a1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a1368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0xb739d270" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0xb739d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739d448"/>
        <function-ref name="write" scoped="" ref="0xb739d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0xb739ba00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0xb739ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739bbd8"/>
        <function-ref name="write" scoped="" ref="0xb739bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0xb739be38" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0xb739be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739a050"/>
        <function-ref name="write" scoped="" ref="0xb739a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0xb7394190" loc="94:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0xb7394190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7394368"/>
        <function-ref name="write" scoped="" ref="0xb7394448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0xb7395010" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0xb7395010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73951e8"/>
        <function-ref name="write" scoped="" ref="0xb73952c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0xb73a1b98" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0xb73a1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a1d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0xb73966e8" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0xb73966e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73968c0"/>
        <function-ref name="write" scoped="" ref="0xb73969a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0xb739dae0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0xb739dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739dcb8"/>
        <function-ref name="write" scoped="" ref="0xb739dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0xb739c368" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0xb739c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739c540"/>
        <function-ref name="write" scoped="" ref="0xb739c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0xb7398880" loc="79:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0xb7398880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7398a58"/>
        <function-ref name="write" scoped="" ref="0xb7398b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0xb739a2b0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0xb739a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739a488"/>
        <function-ref name="write" scoped="" ref="0xb739a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0xb73a25a0" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0xb73a25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0xb73a2778"/>
        <function-ref name="abortRelease" scoped="" ref="0xb73a2858"/>
        <function-ref name="attemptRelease" scoped="" ref="0xb73a2938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0xb73a0910" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0xb73a0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0xb73a0c68" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0xb73a0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a0ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0xb739e080" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0xb739e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb739e258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0xb7396b20" loc="89:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0xb7396b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7396cf8"/>
        <function-ref name="write" scoped="" ref="0xb7396dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0xb73a0260" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0xb73a0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a0438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0xb739df18" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0xb739df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739c108"/>
        <function-ref name="write" scoped="" ref="0xb739c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0xb739d6a8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0xb739d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739d880"/>
        <function-ref name="write" scoped="" ref="0xb739d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0xb73a2e10" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0xb73a2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0xb7395cb8" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0xb7395cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7395e90"/>
        <function-ref name="write" scoped="" ref="0xb7394010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0xb7395448" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0xb7395448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7395620"/>
        <function-ref name="write" scoped="" ref="0xb7395700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0xb7398cb8" loc="80:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0xb7398cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7398e90"/>
        <function-ref name="write" scoped="" ref="0xb7397010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0xb73962b0" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0xb73962b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7396488"/>
        <function-ref name="write" scoped="" ref="0xb7396568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0xb739ab20" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0xb739ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739acf8"/>
        <function-ref name="write" scoped="" ref="0xb739add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0xb73945c8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0xb73945c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73949a0"/>
        <function-ref name="writeDone" scoped="" ref="0xb7394a80"/>
        <function-ref name="write" scoped="" ref="0xb7394b60"/>
        <function-ref name="beginRead" scoped="" ref="0xb7394c40"/>
        <function-ref name="readDone" scoped="" ref="0xb7394d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0xb73a2ab8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0xb73a2ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0xb739ede0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0xb739ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739d010"/>
        <function-ref name="write" scoped="" ref="0xb739d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0xb739c7a0" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0xb739c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739c978"/>
        <function-ref name="write" scoped="" ref="0xb739ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0xb739a6e8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0xb739a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739a8c0"/>
        <function-ref name="write" scoped="" ref="0xb739a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0xb739b190" loc="70:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0xb739b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739b368"/>
        <function-ref name="write" scoped="" ref="0xb739b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0xb73a14e8" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0xb73a14e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a16c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0xb739b5c8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0xb739b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb739b7a0"/>
        <function-ref name="write" scoped="" ref="0xb739b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb73e8ed0" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb73e8ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73a20c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73a21a0"/>
        <function-ref name="request" scoped="" ref="0xb73a2280"/>
        <function-ref name="granted" scoped="" ref="0xb73a2360"/>
        <function-ref name="isOwner" scoped="" ref="0xb73a2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0xb739e3d8" loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0xb739e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb739e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0xb739ea88" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0xb739ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb739ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0xb7397e38" loc="86:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0xb7397e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7396050"/>
        <function-ref name="write" scoped="" ref="0xb7396130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0xb7397a00" loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0xb7397a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7397bd8"/>
        <function-ref name="write" scoped="" ref="0xb7397cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0xb73a05b8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0xb73a05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0xb73975c8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0xb73975c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73977a0"/>
        <function-ref name="write" scoped="" ref="0xb7397880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0xb7395880" loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0xb7395880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7395a58"/>
        <function-ref name="write" scoped="" ref="0xb7395b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0xb7397190" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0xb7397190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7397368"/>
        <function-ref name="write" scoped="" ref="0xb7397448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0xb73a1840" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0xb73a1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0xb7398448" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0xb7398448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7398620"/>
        <function-ref name="write" scoped="" ref="0xb7398700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0xb73a1ef0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0xb73a1ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb73a00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0xb7398010" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0xb7398010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb73981e8"/>
        <function-ref name="write" scoped="" ref="0xb73982c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0xb739e730" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0xb739e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0xb739e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0xb7394ea0" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0xb7394ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0xb73930c0"/>
        <function-ref name="writeDone" scoped="" ref="0xb73931a0"/>
        <function-ref name="write" scoped="" ref="0xb7393280"/>
        <function-ref name="beginRead" scoped="" ref="0xb7393360"/>
        <function-ref name="readDone" scoped="" ref="0xb7393440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb737c978" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb737c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb737cb50"/>
        <function-ref name="rand32" scoped="" ref="0xb737cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb737c0b8" loc="45:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb737c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb737c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7380e30" loc="44:/opt/tinyos-main-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7380e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb737d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb7378478" loc="48:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7378478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7378650"/>
        <function-ref name="rand32" scoped="" ref="0xb7378730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb737bb18" loc="47:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb737bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73781e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb737b5f8" loc="46:/opt/tinyos-main-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb737b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb737b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb737f608" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb737f608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb737f7e0"/>
        <function-ref name="toIdle" scoped="" ref="0xb737f8c0"/>
        <function-ref name="isState" scoped="" ref="0xb737f9a0"/>
        <function-ref name="isIdle" scoped="" ref="0xb737fa80"/>
        <function-ref name="requestState" scoped="" ref="0xb737fb60"/>
        <function-ref name="forceState" scoped="" ref="0xb737fc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7370b00" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7370b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7370cd8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7370db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7370e98"/>
        <function-ref name="cancel" scoped="" ref="0xb736d010"/>
        <function-ref name="sendDone" scoped="" ref="0xb736d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7370390" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7370390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7370568"/>
        <function-ref name="getPayload" scoped="" ref="0xb7370648"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7370728"/>
        <function-ref name="cancel" scoped="" ref="0xb7370808"/>
        <function-ref name="sendDone" scoped="" ref="0xb73708e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb736a570" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb736a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb736a748"/>
        <function-ref name="getPayload" scoped="" ref="0xb736a828"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb736a908"/>
        <function-ref name="cancel" scoped="" ref="0xb736a9e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb736aac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb736da20" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb736da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb736dbf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb736dcd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb736ddb8"/>
        <function-ref name="cancel" scoped="" ref="0xb736de98"/>
        <function-ref name="sendDone" scoped="" ref="0xb736a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7369430" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7369430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7369608"/>
        <function-ref name="rand32" scoped="" ref="0xb73696e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb736a180" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb736a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb736a358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb73698d0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb73698d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb7369aa8"/>
        <function-ref name="getHeader" scoped="" ref="0xb7369b88"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7369c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0xb736ac40" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb736ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb736ae18"/>
        <function-ref name="toIdle" scoped="" ref="0xb736aef8"/>
        <function-ref name="isState" scoped="" ref="0xb7369010"/>
        <function-ref name="isIdle" scoped="" ref="0xb73690f0"/>
        <function-ref name="requestState" scoped="" ref="0xb73691d0"/>
        <function-ref name="forceState" scoped="" ref="0xb73692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb736cab8" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb736cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb736cc90"/>
        <function-ref name="toIdle" scoped="" ref="0xb736cd70"/>
        <function-ref name="isState" scoped="" ref="0xb736ce50"/>
        <function-ref name="isIdle" scoped="" ref="0xb736b010"/>
        <function-ref name="requestState" scoped="" ref="0xb736b0f0"/>
        <function-ref name="forceState" scoped="" ref="0xb736b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb735cb28" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb735cb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb735cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb735c2d8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb735c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb735c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb735c700" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb735c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb735c8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7358358" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7358358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7358530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb735bf10" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb735bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7358108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb735b7a0" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb735b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb735b978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb7358718" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7358718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb73588f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb73589d0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb7358ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0xb735bbc8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0xb735bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb735bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb733e7b8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb733e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb733e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb733eb68" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb733eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb733ed40"/>
        <function-ref name="getPayload" scoped="" ref="0xb733ee20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb733ef00"/>
        <function-ref name="cancel" scoped="" ref="0xb733d010"/>
        <function-ref name="sendDone" scoped="" ref="0xb733d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb73409d0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb73409d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7340ba8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7340c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7340d68"/>
        <function-ref name="cancel" scoped="" ref="0xb7340e48"/>
        <function-ref name="sendDone" scoped="" ref="0xb7340f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb733f490" loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb733f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb733f668"/>
        <function-ref name="getPayload" scoped="" ref="0xb733f748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb733f828"/>
        <function-ref name="cancel" scoped="" ref="0xb733f908"/>
        <function-ref name="sendDone" scoped="" ref="0xb733f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb733f0c0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb733f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb733f298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7340308" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7340308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73404e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73405c0"/>
        <function-ref name="request" scoped="" ref="0xb73406a0"/>
        <function-ref name="granted" scoped="" ref="0xb7340780"/>
        <function-ref name="isOwner" scoped="" ref="0xb7340860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb733fc18" loc="69:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb733fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb733fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb733e010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb733e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb733e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb733e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb733e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb733e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb733e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7337cb0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7337cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7337e88"/>
        <function-ref name="getPayload" scoped="" ref="0xb7336010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb73360f0"/>
        <function-ref name="cancel" scoped="" ref="0xb73361d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb73362b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb73364c0" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb73364c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7336698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0xb731b250" loc="180:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0xb731b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb731b428"/>
        <function-ref name="runTask" scoped="" ref="0xb731b508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb7336858" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb7336858"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb7336a30"/>
        <function-ref name="setNetwork" scoped="" ref="0xb7336b10"/>
        <function-ref name="getRssi" scoped="" ref="0xb7336bf0"/>
        <function-ref name="getNetwork" scoped="" ref="0xb7336cd0"/>
        <function-ref name="getPower" scoped="" ref="0xb7336db0"/>
        <function-ref name="getLqi" scoped="" ref="0xb7336e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0xb73389b8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0xb73389b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7338b90"/>
        <function-ref name="getPayload" scoped="" ref="0xb7338c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7338d50"/>
        <function-ref name="cancel" scoped="" ref="0xb7338e30"/>
        <function-ref name="sendDone" scoped="" ref="0xb7338f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb73356c0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb73356c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7335898"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7335978"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7335a58"/>
        <function-ref name="dequeue" scoped="" ref="0xb7335b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb7335108" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb7335108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb73352e0"/>
        <function-ref name="getHeader" scoped="" ref="0xb73353c0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb73354a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb73385e8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb73385e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb73387c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7339718" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7339718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb73398f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb73399d0"/>
        <function-ref name="request" scoped="" ref="0xb7339ab0"/>
        <function-ref name="granted" scoped="" ref="0xb7339b90"/>
        <function-ref name="isOwner" scoped="" ref="0xb7339c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb7339e58" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb7339e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7338050"/>
        <function-ref name="getPayload" scoped="" ref="0xb7338130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7338210"/>
        <function-ref name="cancel" scoped="" ref="0xb73382f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb73383d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0xb7337160" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0xb7337160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7337338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0xb7337540" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0xb7337540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7337718"/>
        <function-ref name="payloadLength" scoped="" ref="0xb73377f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb73378d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb73379b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7337a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb733b9f0" loc="44:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb733b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb733bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb733bd28" loc="45:/opt/tinyos-main-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb733bd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb733bf00"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7309010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb73090f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb73091d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7303570" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7303570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7303748"/>
        <function-ref name="stopDone" scoped="" ref="0xb7303828"/>
        <function-ref name="start" scoped="" ref="0xb7303908"/>
        <function-ref name="stop" scoped="" ref="0xb73039e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb73024c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb73024c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb73026a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7302780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7302860"/>
        <function-ref name="cancel" scoped="" ref="0xb7302940"/>
        <function-ref name="sendDone" scoped="" ref="0xb7302a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7302c30" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7302c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7302e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7306478" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7306478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7306650"/>
        <function-ref name="getPayload" scoped="" ref="0xb7306730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7306810"/>
        <function-ref name="cancel" scoped="" ref="0xb73068f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb73069d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7306f20" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7306f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7303110"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb73031f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb73032d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb73033b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0xb7303be0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0xb7303be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb7303db8"/>
        <function-ref name="toIdle" scoped="" ref="0xb7303e98"/>
        <function-ref name="isState" scoped="" ref="0xb7302010"/>
        <function-ref name="isIdle" scoped="" ref="0xb73020f0"/>
        <function-ref name="requestState" scoped="" ref="0xb73021d0"/>
        <function-ref name="forceState" scoped="" ref="0xb73022b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7301098" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7301098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7301270"/>
        <function-ref name="stopDone" scoped="" ref="0xb7301350"/>
        <function-ref name="start" scoped="" ref="0xb7301430"/>
        <function-ref name="stop" scoped="" ref="0xb7301510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7306b58" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7306b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7306d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7301cb8" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7301cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7301e90"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb72fe010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb72fe0f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb72fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0xb72fad20" loc="67:/opt/tinyos-main-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0xb72fad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0xb72faef8"/>
        <function-ref name="toIdle" scoped="" ref="0xb72ff010"/>
        <function-ref name="isState" scoped="" ref="0xb72ff0f0"/>
        <function-ref name="isIdle" scoped="" ref="0xb72ff1d0"/>
        <function-ref name="requestState" scoped="" ref="0xb72ff2b0"/>
        <function-ref name="forceState" scoped="" ref="0xb72ff390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72f75e8" loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72f75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72f77c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb72f78a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72f7980"/>
        <function-ref name="cancel" scoped="" ref="0xb72f7a60"/>
        <function-ref name="sendDone" scoped="" ref="0xb72f7b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7305748" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7305748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7305920"/>
        <function-ref name="getPayload" scoped="" ref="0xb7305a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7305ae0"/>
        <function-ref name="cancel" scoped="" ref="0xb7305bc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7305ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb7305e48" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb7305e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb72f7050"/>
        <function-ref name="setRetries" scoped="" ref="0xb72f7130"/>
        <function-ref name="getRetries" scoped="" ref="0xb72f7210"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb72f72f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb72f73d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb72f6a60" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb72f6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb72f6c38"/>
        <function-ref name="noAck" scoped="" ref="0xb72f6d18"/>
        <function-ref name="wasAcked" scoped="" ref="0xb72f6df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb72f62a8" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb72f62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb72f6480"/>
        <function-ref name="setRetries" scoped="" ref="0xb72f6560"/>
        <function-ref name="getRetries" scoped="" ref="0xb72f6640"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb72f6720"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb72f6800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb72e4220" loc="59:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb72e4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72e43f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb72e5a88" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb72e5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72e5c60"/>
        <function-ref name="getPayload" scoped="" ref="0xb72e5d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72e5e20"/>
        <function-ref name="cancel" scoped="" ref="0xb72e5f00"/>
        <function-ref name="sendDone" scoped="" ref="0xb72e4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0xb72e2390" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0xb72e2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0xb72e2568"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0xb72e2648"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0xb72e2728"/>
        <function-ref name="syncDone" scoped="" ref="0xb72e2808"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0xb72e28e8"/>
        <function-ref name="setShortAddr" scoped="" ref="0xb72e29c8"/>
        <function-ref name="setChannel" scoped="" ref="0xb72e2aa8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0xb72e2b88"/>
        <function-ref name="setPanAddr" scoped="" ref="0xb72e2c68"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0xb72e2d48"/>
        <function-ref name="getExtAddr" scoped="" ref="0xb72e2e28"/>
        <function-ref name="getShortAddr" scoped="" ref="0xb72e2f08"/>
        <function-ref name="sync" scoped="" ref="0xb72e1010"/>
        <function-ref name="getChannel" scoped="" ref="0xb72e1170"/>
        <function-ref name="getPanAddr" scoped="" ref="0xb72e1250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0xb72e5238" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0xb72e5238"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb72e5410"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb72e54f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb72e55d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb72e56b0"/>
        <function-ref name="setCca" scoped="" ref="0xb72e5790"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb72e5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb72e6b88" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb72e6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb72e6d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0xb72e1ba0" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0xb72e1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0xb72e1d78"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0xb72e1e58"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0xb72e0010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0xb72e00f0"/>
        <function-ref name="setCca" scoped="" ref="0xb72e01d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0xb72e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb72e6190" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb72e6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72e6368"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72e6448"/>
        <function-ref name="getPayload" scoped="" ref="0xb72e6528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72e6608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72e66e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb72e8100" loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb72e8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72e82d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72e83b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72e8498"/>
        <function-ref name="cancel" scoped="" ref="0xb72e8578"/>
        <function-ref name="sendDone" scoped="" ref="0xb72e8658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb72e7178" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb72e7178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72e7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0xb72e45b8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0xb72e45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0xb72e4790"/>
        <function-ref name="setNetwork" scoped="" ref="0xb72e4870"/>
        <function-ref name="getRssi" scoped="" ref="0xb72e4950"/>
        <function-ref name="getNetwork" scoped="" ref="0xb72e4a30"/>
        <function-ref name="getPower" scoped="" ref="0xb72e4b10"/>
        <function-ref name="getLqi" scoped="" ref="0xb72e4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb72e1460" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb72e1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb72e16b8"/>
        <function-ref name="changed" scoped="" ref="0xb72e1798"/>
        <function-ref name="amGroup" scoped="" ref="0xb72e1878"/>
        <function-ref name="setAddress" scoped="" ref="0xb72e1958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0xb72e4dd8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0xb72e4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0xb72e2010"/>
        <function-ref name="getHeader" scoped="" ref="0xb72e20f0"/>
        <function-ref name="getMetadata" scoped="" ref="0xb72e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb72e8ac0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb72e8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb72e8c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb72e0bb8" loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb72e0bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72e0d90"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb72e0e70"/>
        <function-ref name="led1On" scoped="" ref="0xb72df010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb72df0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb72df1d0"/>
        <function-ref name="get" scoped="" ref="0xb72df2b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb72df390"/>
        <function-ref name="led2Off" scoped="" ref="0xb72df710"/>
        <function-ref name="set" scoped="" ref="0xb72df470"/>
        <function-ref name="led0On" scoped="" ref="0xb72df550"/>
        <function-ref name="led2On" scoped="" ref="0xb72df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb72e74e8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72e74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72e76c0"/>
        <function-ref name="source" scoped="" ref="0xb72e77a0"/>
        <function-ref name="address" scoped="" ref="0xb72e7880"/>
        <function-ref name="destination" scoped="" ref="0xb72e7960"/>
        <function-ref name="setSource" scoped="" ref="0xb72e7a40"/>
        <function-ref name="setDestination" scoped="" ref="0xb72e7b20"/>
        <function-ref name="type" scoped="" ref="0xb72e7c00"/>
        <function-ref name="setType" scoped="" ref="0xb72e7ce0"/>
        <function-ref name="isForMe" scoped="" ref="0xb72e7dc0"/>
        <function-ref name="setGroup" scoped="" ref="0xb72e7ea0"/>
        <function-ref name="localGroup" scoped="" ref="0xb72e6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0xb72e04f0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0xb72e04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb72e06c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb72e07a8"/>
        <function-ref name="request" scoped="" ref="0xb72e0888"/>
        <function-ref name="granted" scoped="" ref="0xb72e0968"/>
        <function-ref name="isOwner" scoped="" ref="0xb72e0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb72926a0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb72926a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7292878"/>
        <function-ref name="getPayload" scoped="" ref="0xb7292958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7292a38"/>
        <function-ref name="cancel" scoped="" ref="0xb7292b18"/>
        <function-ref name="sendDone" scoped="" ref="0xb7292bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7292d38" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7292d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7292f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7248010"/>
        <function-ref name="getPayload" scoped="" ref="0xb72480f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72481d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb72482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb72483f0" loc="51:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72485c8"/>
        <function-ref name="source" scoped="" ref="0xb72486a8"/>
        <function-ref name="address" scoped="" ref="0xb7248788"/>
        <function-ref name="destination" scoped="" ref="0xb7248868"/>
        <function-ref name="setSource" scoped="" ref="0xb7248948"/>
        <function-ref name="setDestination" scoped="" ref="0xb7248a28"/>
        <function-ref name="type" scoped="" ref="0xb7248b08"/>
        <function-ref name="setType" scoped="" ref="0xb7248be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7248cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7248da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7248e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb7247010" loc="52:/opt/tinyos-main-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb7247010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb72471e8"/>
        <function-ref name="noAck" scoped="" ref="0xb72472c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb72473a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6f25cf8" loc="49:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6f25cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f25ed0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f22010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f220f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6f221d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6f223f0" loc="50:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6f223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f225c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f226a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f22788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f22868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f22948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6f22a88" loc="51:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f22a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f22c60"/>
        <function-ref name="source" scoped="" ref="0xb6f22d40"/>
        <function-ref name="address" scoped="" ref="0xb6f22e20"/>
        <function-ref name="destination" scoped="" ref="0xb6f22f00"/>
        <function-ref name="setSource" scoped="" ref="0xb6f21010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f210f0"/>
        <function-ref name="type" scoped="" ref="0xb6f211d0"/>
        <function-ref name="setType" scoped="" ref="0xb6f212b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f21390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f21470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f21550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6f216b0" loc="52:/opt/tinyos-main-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6f216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6f21888"/>
        <function-ref name="noAck" scoped="" ref="0xb6f21968"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6f21a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6f1b670" loc="44:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6f1b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f1b848"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f1b928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f1ba08"/>
        <function-ref name="cancel" scoped="" ref="0xb6f1bae8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb6f1bd38" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6f1bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f1bf10"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f1a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f1a0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6f1a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6f1a3f0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioRouteAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6f1a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6f1a5c8"/>
        <function-ref name="source" scoped="" ref="0xb6f1a6a8"/>
        <function-ref name="address" scoped="" ref="0xb6f1a788"/>
        <function-ref name="destination" scoped="" ref="0xb6f1a868"/>
        <function-ref name="setSource" scoped="" ref="0xb6f1a948"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f1aa28"/>
        <function-ref name="type" scoped="" ref="0xb6f1ab08"/>
        <function-ref name="setType" scoped="" ref="0xb6f1abe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f1acc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6f1ada8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6f1ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb727e688" loc="43:/opt/tinyos-main-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb727e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb727e860"/>
        <function-ref name="getPayload" scoped="" ref="0xb727e940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb727ea20"/>
        <function-ref name="cancel" scoped="" ref="0xb727eb00"/>
        <function-ref name="sendDone" scoped="" ref="0xb727ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb7279ca8" loc="48:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7279ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7279e90"/>
        <function-ref name="getPayload" scoped="" ref="0xb7251010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72510f0"/>
        <function-ref name="cancel" scoped="" ref="0xb72511d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb72512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7279538" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7279538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7279720"/>
        <function-ref name="getPayload" scoped="" ref="0xb7279800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72798e0"/>
        <function-ref name="cancel" scoped="" ref="0xb72799c0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7279aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7250010" loc="50:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7250010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb72501e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72502c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb72503a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7250488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7250568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb72506e8" loc="169:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb72506e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb72508c0"/>
        <function-ref name="runTask" scoped="" ref="0xb72509a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb7250b20" loc="126:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb7250b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7250cf8"/>
        <function-ref name="runTask" scoped="" ref="0xb7250dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb72513f0" loc="49:/opt/tinyos-main-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72515c8"/>
        <function-ref name="source" scoped="" ref="0xb72516a8"/>
        <function-ref name="address" scoped="" ref="0xb7251788"/>
        <function-ref name="destination" scoped="" ref="0xb7251868"/>
        <function-ref name="setSource" scoped="" ref="0xb7251948"/>
        <function-ref name="setDestination" scoped="" ref="0xb7251a28"/>
        <function-ref name="type" scoped="" ref="0xb7251b08"/>
        <function-ref name="setType" scoped="" ref="0xb7251be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7251cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7251da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7251e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7245d60" loc="46:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioRouteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7245d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7244010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb72440f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb72441d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72442b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7244390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7245a48" loc="45:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioRouteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7245a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7245c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb72444d0" loc="47:/opt/tinyos-main-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioRouteAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb72444d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb72446a8"/>
        <function-ref name="source" scoped="" ref="0xb7244788"/>
        <function-ref name="address" scoped="" ref="0xb7244868"/>
        <function-ref name="destination" scoped="" ref="0xb7244948"/>
        <function-ref name="setSource" scoped="" ref="0xb7244a28"/>
        <function-ref name="setDestination" scoped="" ref="0xb7244b08"/>
        <function-ref name="type" scoped="" ref="0xb7244be8"/>
        <function-ref name="setType" scoped="" ref="0xb7244cc8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7244da8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7244e88"/>
        <function-ref name="localGroup" scoped="" ref="0xb7241010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7b8c138" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7b91578" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7b874e8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7b87390" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7b8ba80" loc="31:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7b88168" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7b88010" loc="39:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7b88830" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7b886d8" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7b88d88" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7b7b138" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7b7b520" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7b7c990" loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7b7bcf0" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7b7cd50" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7b7b8f8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7b7c250" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7b7c5e0" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7c31390" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7c31c98" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7c317d0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7c2cb68" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7c2b090" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7bb57e8" loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-main-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7ba2bb8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7bf0340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7ba5e70" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7a530c0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7a530c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7a4e820" loc="136:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7a50668" loc="83:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7a4f800" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7a4f4b8" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7a4f6a0" loc="114:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7a4f010" loc="98:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7a4c1a8" loc="151:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7a4ec68" loc="144:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7a50af8" loc="92:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7a53718" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7a535c0" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7a4e200" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7a4fea0" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7a4e0a0" loc="129:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7a53db0" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7a53c58" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7a502a0" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7a92738" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7a925e0" loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7a91730" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7a915d8" loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7a95c48" loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7a92c48" loc="130:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0xb7a60de0" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7a60880" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7a60a98" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a60c78" loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a5da88" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a5d728" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a5d908" loc="135:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7a5d1c8" loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7a5eb80" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a5ea28" loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7a5c898" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a5c540" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7a5c738" loc="110:/opt/tinyos-main-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7a58010" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a57df8" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7a589e0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a58888" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a54960" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a54600" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a547e0" loc="126:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7a54018" loc="106:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7a56668" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a56328" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a56508" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7a5a5f0" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
              <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a5a0a8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7a5a288" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a5a468" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7a45c08" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7a44070" loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7a444f0" loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7a44d60" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7a43a80" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7a43f28" loc="117:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7a44918" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7a41678" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7a41520" loc="134:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7a457e0" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7a43210" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7a43638" loc="94:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79d18e0" loc="53:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79d18e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb79d1dc0" loc="61:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79c33c8" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79c33c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb79c3530" loc="57:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79c3530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb79c3a18" loc="64:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79c3530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb79c2510" loc="76:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb79c2010" loc="71:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb79c2910" loc="82:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb79ca3b8" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb79ca3b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb79ca520" loc="56:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb79c7810" loc="109:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb79c84d0" loc="78:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb79c71c8" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb79c8e48" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          </variable>
          <variable name="dt" ref="0xb79c7068" loc="103:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb79c8940" loc="88:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb79c7ca0" loc="116:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79cab50" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb79ca9f8" loc="66:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ca520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79c8070" loc="73:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xb79b1bc0" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd4b80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bd4da8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb79a71a8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcec80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7bceea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb79a96e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd0560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7bd0788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb79a9ce8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd0560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7bd0788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb79a9b90" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd0560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb7bd0788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb79a77b0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcec80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7bceea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb79a7658" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcec80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb7bceea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb79a9228" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd4b80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bd4da8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb79a90d0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd4b80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb7bd4da8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xb79a0ce8" loc="38:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xb799f1c8" loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xb79a08d0" loc="32:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb799f688" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb79a3dd8" loc="21:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd2d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xb7bd1010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb79a03f0" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd2d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7bd1010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb79a0298" loc="27:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bd2d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb7bd1010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb79ab5b8" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ab5b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb79a44f0" loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb79a5498" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb79abab0" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ab5b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79a58a0" loc="62:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79a4950" loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb79a5058" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ab5b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79abee0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79ab5b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79a5ca8" loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79a40c8" loc="68:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb79b4bd8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b4bd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb79ae438" loc="98:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb79afb08" loc="87:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb79b00f8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b4bd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb79ae9c8" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb79ae870" loc="104:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb79aee58" loc="110:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79b0ec0" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb79b0aa0" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb79ae010" loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb79b0670" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b4bd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb79b0518" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb79b4bd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb79af2e8" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb79af6e0" loc="81:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb78d5330" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb78d5330"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb78d5498" loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78d5498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb78c56a8" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78d5498"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78c5550" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb78c6168" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78c6010" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb78d5b20" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78d59c8" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb78c6c28" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78d5498"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78c68b8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb78c6ac8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78d5498"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb78bebd8" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78be840" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb78bea78" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb78bc6c8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78bc570" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb78be368" loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb78c1cd8" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb78c1b80" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb78d6d68" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78d6c10" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb78ca9c8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78ca870" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb78c9460" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78c9308" loc="85:/opt/tinyos-main-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb78cd088" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78cff08" loc="177:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb78d37e8" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d3690" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb78d7730" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb78d7dc8" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d7c70" loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb78d2170" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d4d70" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb78d2010" loc="121:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb78d43f0" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d4088" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb78d4290" loc="103:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb78d0a28" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d08d0" loc="147:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb78cf580" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78cf250" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb78cf420" loc="162:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7a6ae40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb78d2d10" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78d2bb8" loc="136:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb78cdd08" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb78cd9a8" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb78cdba8" loc="187:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb78cb5a0" loc="195:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0xb78a3b98" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78a3a40" loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0xb78a4a88" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78a4930" loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0xb78a5bf0" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb78a5a98" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0xb78a5510" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0xb78a53b8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0xb78a4218" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0xb78a40c0" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0xb78a3370" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78a3218" loc="88:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb789c4f0" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb789c178" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb789c390" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0xb78ab878" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78ab520" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0xb78ab718" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0xb78a9838" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78a94b8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0xb78a96d8" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0xb78abf00" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb7f7e630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78abda8" loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0xb78aae98" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78aad40" loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0xb78ab058" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78aeed0" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0xb78aa5f8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb78aa4a0" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb789e4b8" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb789e360" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb78a78a0" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78a7508" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb78a7740" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb789fb58" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb789fa00" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb789f4e0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb789f148" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb789f380" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb789edd8" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb789ec80" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb78a6010" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78ade90" loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7897b68" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7897828" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7897a08" loc="75:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb788e6a8" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb788e348" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb788e528" loc="125:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7891dc0" loc="112:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb78907c0" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7890668" loc="89:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb78914a0" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7891148" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7891340" loc="100:/opt/tinyos-main-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7895e28" loc="120:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb7895508" loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb7899da0" loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb78959b8" loc="102:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb78945f0" loc="128:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb787a810" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb787a4c8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0xb787a6b0" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb78793e0" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0xb7878ae0" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb78782f0" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0xb7878798" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7878978" loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7879de8" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0xb7879a90" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7879c88" loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0xb787ae60" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0xb787ad08" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb7876850" loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb78763a8" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb7881ee0" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb787c3c0" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0xb7872658" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb78724e0" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb7872018" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb7a8f690"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0xb7a8d688"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7877e68" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0xb78711a8" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb7a8dd48"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0xb7a8cc90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7871010" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0xb787f7f8" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0xb787eac8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0xb787e660" loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0xb78829a8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0xb787f320" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0xb787fd10" loc="76:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0xb787e1f0" loc="83:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0xb7882eb0" loc="56:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0xb786e960" loc="71:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0xb7870b00" loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0xb786e4f8" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0xb786e3a0" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0xb7870f18" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0xb7870010" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb7871e68" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0xb7870678" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0xb7870520" loc="51:/opt/tinyos-main-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0xb7839248" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0xb783bea0" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0xb78390e8" loc="106:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0xb783b508" loc="93:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0xb783cef8" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0xb783cb08" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0xb783cd98" loc="87:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0xb783e398" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb783e240" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0xb783ba20" loc="98:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0xb783dc10" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb783dab8" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb783ed30" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb783ebd8" loc="61:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0xb7839d30" loc="117:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0xb783c5f8" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0xb783c4a0" loc="78:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0xb7839868" loc="112:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0xb783d1a8" loc="66:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb78c0ad8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb78ba010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0xb783d638" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0xb7842d78" loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb783e7a8" loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0xb783c070" loc="77:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb7840e38" loc="49:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7840e38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb7836328" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb7836ad8" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7840e38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb78367a8" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb7836978" loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb7840e38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb782be30" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb782bcd8" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb781f4e0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb781f388" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0xb7830bd8" loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0xb78c0ad8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0xb78ba010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb7826918" loc="50:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb78251a8" loc="60:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7826d88" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb7826428" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb78260c0" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7a690d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb78262c8" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7a69330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0xb781e740" loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0xb78248c8" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb7824088" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb7824560" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7824760" loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7823708" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0xb7824e70" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb78233a0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb78235a0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb7827138" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb7829cb8" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb78298a8" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb7829340" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb77b49d0" loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbc8e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7bbcb08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0xb77b5410" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc6c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7bc6e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb77b52b8" loc="50:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc6c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7bc6e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb77b5ef0" loc="54:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbd398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7bbd5c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0xb77bad20" loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcaaa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7bcacd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb77b4518" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbd398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7bbd5c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb77b43c0" loc="55:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbd398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb7bbd5c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb77b3010" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbc8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7bbcb08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb77b4e88" loc="59:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bbc8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb7bbcb08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0xb77b6770" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc42c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7bc44e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0xb77b62a0" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc6c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb7bc6e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0xb77b6db8" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcaaa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7bcacd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb77b6c60" loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bcaaa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb7bcacd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0xb77b5a30" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc42c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7bc44e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb77b58d8" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7bc42c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb7bc44e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb77b2180" loc="40:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb77afc48" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb77afaf0" loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb77af260" loc="76:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb77b2678" loc="47:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb77b01e0" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb77b0088" loc="60:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb77b0620" loc="64:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb77af6c0" loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb77b2bf0" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb77b2a98" loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb77b2180"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb77b0a28" loc="67:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb77b0e20" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-main-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb76c6ba8" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb76c35b0" loc="66:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb76c3168" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb76c3010" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb76c66a0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb76b1a50" loc="56:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb76af9c8" loc="75:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb76b1658" loc="51:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb76af500" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb76af3a8" loc="70:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb76b1250" loc="46:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb76b1ea0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb76a0940" loc="48:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0xb7661db8" loc="24:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0xb765e2d0" loc="31:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0xb765e7b0" loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0xb764c7a8" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb764c448" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb764c648" loc="62:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0xb7649ef0" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7649990" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7649b90" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7649d88" loc="91:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb7649170" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb764bdb8" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7649010" loc="82:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0xb764db98" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0xb7a943b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb764d838" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb764da38" loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb764b570" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb764b010" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb764b210" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb764b408" loc="71:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7638c08" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7638698" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb76388b0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7638aa0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7637298" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7636ae0" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb7636cf8" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7636ee8" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f7d1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7637128" loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb763c850" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb763c6f8" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb75e7ab8" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75e7960" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb75e46e8" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75e4590" loc="74:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb75e4010" loc="68:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb75e4d30" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75e4bd8" loc="81:/opt/tinyos-main-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb75d7548" loc="86:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb75d2c38" loc="126:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb75d5dd8" loc="117:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb75d1288" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb75d1130" loc="128:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb75d70f8" loc="83:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb75d3d48" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb75d3bf0" loc="122:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb75d5010" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb75d6e48" loc="113:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb75d7dd8" loc="97:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb75ce318" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb75ce1c0" loc="141:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb75d5468" loc="114:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb75d1c10" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb75d1ab8" loc="131:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb75cf4b0" loc="136:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb75d27f0" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb75d2698" loc="125:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb75cfd78" loc="140:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb75d3380" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb75d3228" loc="119:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb75d6390" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75d6238" loc="103:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb75d59b8" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb75d5860" loc="116:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb75d2210" loc="123:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb75d16b0" loc="129:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb75cf038" loc="132:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb75cf908" loc="138:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb75d37b8" loc="120:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb75d7970" loc="89:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb75d6958" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb75d6800" loc="109:/opt/tinyos-main-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb75cb070" loc="90:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb75cb570" loc="98:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb759a900" loc="95:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb759ade8" loc="105:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb756a010" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb756a5e8" loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb75672c0" loc="65:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb756cde0" loc="59:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb7562ca8" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb756b5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7562b50" loc="79:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb756b5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb75658b8" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb7562010" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb756b5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb7565e20" loc="62:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb756b5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb75625c0" loc="70:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb756b5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0xb74c9650" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb749d840" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb749d2c0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0xb749d6e0" loc="63:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0xb74a0e10" loc="55:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0xb74a0990" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb74a0838" loc="49:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f7d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0xb74aaa70" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f7eb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb74aa918" loc="58:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb74aa168" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7c366e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb74aa010" loc="50:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb74a9c58" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb74a9b00" loc="72:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb74a9370" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb74a9218" loc="65:/opt/tinyos-main-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7a61640"/>
                <typename><typedef-ref name="message_t" ref="0xb7a603e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb737d5c0" loc="53:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb737d5c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb737dc10" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7c2e628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb737d5c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb737dab8" loc="64:/opt/tinyos-main-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb737d5c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
